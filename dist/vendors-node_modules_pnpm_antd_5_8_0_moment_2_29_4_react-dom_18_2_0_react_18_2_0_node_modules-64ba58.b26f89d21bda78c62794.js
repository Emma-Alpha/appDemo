(window["garfish-demo"] = window["garfish-demo"] || []).push([["vendors-node_modules_pnpm_antd_5_8_0_moment_2_29_4_react-dom_18_2_0_react_18_2_0_node_modules-64ba58"],{

/***/ "./node_modules/.pnpm/@garfish+browser-snapshot@1.16.2/node_modules/@garfish/browser-snapshot/dist/esm/index.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@garfish+browser-snapshot@1.16.2/node_modules/@garfish/browser-snapshot/dist/esm/index.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GarfishBrowserSnapshot: function() { return /* binding */ GarfishBrowserSnapshot; },
/* harmony export */   "default": function() { return /* binding */ Sandbox; }
/* harmony export */ });
// src/patchers/event.ts
var rawAddEventListener;
var rawRemoveEventListener;
var PatchEvent = class {
  constructor() {
    this.listenerMap = /* @__PURE__ */ new Map();
  }
  activate() {
    this.listenerMap.forEach((listeners, type) => [...listeners].forEach((listener) => window.addEventListener(type, listener)));
    if (!rawAddEventListener || !rawRemoveEventListener) {
      rawAddEventListener = window.addEventListener;
      rawRemoveEventListener = window.removeEventListener;
    }
    window.addEventListener = (type, listener, options) => {
      const listeners = this.listenerMap.get(type) || [];
      this.listenerMap.set(type, [...listeners, listener]);
      return rawAddEventListener.call(window, type, listener, options);
    };
    window.removeEventListener = (type, listener, options) => {
      const storedTypeListeners = this.listenerMap.get(type);
      if (storedTypeListeners && storedTypeListeners.length && storedTypeListeners.indexOf(listener) !== -1) {
        storedTypeListeners.splice(storedTypeListeners.indexOf(listener), 1);
      }
      return rawRemoveEventListener.call(window, type, listener, options);
    };
  }
  deactivate() {
    this.listenerMap.forEach((listeners, type) => [...listeners].forEach((listener) => window.removeEventListener(type, listener)));
    window.removeEventListener = rawRemoveEventListener;
    window.addEventListener = rawAddEventListener;
  }
};

// src/patchers/interceptor.ts
function isStyledComponentsLike(element) {
  var _a;
  return element instanceof HTMLStyleElement && !element.textContent && ((_a = element.sheet) == null ? void 0 : _a.cssRules.length);
}
var Snapshot = class {
  constructor(arrDoms) {
    this.arrDoms = arrDoms;
    this.arrDoms = arrDoms;
  }
  static take(target = document.head) {
    let list;
    if (target.childNodes) {
      list = Array.prototype.slice.call(target.childNodes);
    } else {
      list = Array.prototype.slice.call(target);
    }
    return new Snapshot(list);
  }
  diff(s) {
    if (!s) {
      return {
        created: new Snapshot([]),
        removed: new Snapshot([])
      };
    }
    return {
      created: new Snapshot(this.arrDoms.filter((d) => s.arrDoms.indexOf(d) === -1)),
      removed: new Snapshot(s.arrDoms.filter((d) => this.arrDoms.indexOf(d) === -1))
    };
  }
};
var Interceptor = class {
  constructor(dom = document.head) {
    this.dom = dom;
    this.dom = dom;
    this.dynamicStyleSheetElementSet = /* @__PURE__ */ new Set();
    this.styledComponentCSSRulesMap = /* @__PURE__ */ new WeakMap();
  }
  add(createdOrSnapshot, removed) {
    let created;
    if (!removed) {
      const diff = Snapshot.take(this.dom).diff(createdOrSnapshot);
      created = diff.created;
      removed = diff.removed;
    } else {
      created = createdOrSnapshot;
    }
    created.arrDoms.reduce((prev, val) => {
      var _a, _b;
      prev.appendChild(val);
      if (val instanceof HTMLStyleElement) {
        const cssRules = this.styledComponentCSSRulesMap.get(val);
        if (cssRules && cssRules.length) {
          for (let i = 0; i < cssRules.length; i++) {
            const cssRule = cssRules[i];
            (_b = val.sheet) == null ? void 0 : _b.insertRule(cssRule.cssText, (_a = val.sheet) == null ? void 0 : _a.cssRules.length);
          }
        }
      }
      return prev;
    }, this.dom);
    removed.arrDoms.reduce((prev, val) => {
      prev.removeChild(val);
      return prev;
    }, this.dom);
  }
  remove(createdOrSnapshot, removed) {
    let created;
    if (!removed) {
      const diff = Snapshot.take(this.dom).diff(createdOrSnapshot);
      created = diff.created;
      removed = diff.removed;
    } else {
      created = createdOrSnapshot;
    }
    created.arrDoms.reduce((prev, val) => {
      var _a;
      if (val instanceof HTMLStyleElement && isStyledComponentsLike(val) && ((_a = val == null ? void 0 : val.sheet) == null ? void 0 : _a.cssRules)) {
        this.styledComponentCSSRulesMap.set(val, val.sheet.cssRules);
      }
      prev.removeChild(val);
      return prev;
    }, this.dom);
    removed.arrDoms.reduce((prev, val) => {
      prev.appendChild(val);
      return prev;
    }, this.dom);
  }
};

// src/patchers/style.ts
var PatchStyle = class {
  constructor() {
    this.headInterceptor = new Interceptor(document.head);
  }
  activate() {
    this.domSnapshotBefore = Snapshot.take();
    if (this.domSnapshotMutated)
      this.headInterceptor.add(this.domSnapshotMutated.created, this.domSnapshotMutated.removed);
  }
  deactivate() {
    const domSnapshot = Snapshot.take();
    this.domSnapshotMutated = domSnapshot.diff(this.domSnapshotBefore);
    if (!this.domSnapshotMutated)
      return;
    this.headInterceptor.remove(this.domSnapshotMutated.created, this.domSnapshotMutated.removed);
  }
  formateCtx(arrDoms) {
    const effectMap = {
      style: [],
      script: [],
      other: []
    };
    arrDoms.forEach((dom) => {
      let type = "other";
      if (/css/.test(dom.type))
        type = "style";
      if (/javascript/.test(dom.type))
        type = "script";
      effectMap[type].push({
        src: dom.src,
        outerHTML: dom.outerHTML,
        content: dom.innerText
      });
    });
    return effectMap;
  }
};

// src/patchers/history.ts
var rawPushState;
var rawReplaceState;
var PatchHistory = class {
  activate() {
    if (!rawPushState || !rawReplaceState) {
      rawPushState = window.history.pushState;
      rawReplaceState = window.history.replaceState;
    }
  }
  deactivate() {
    window.history.pushState = rawPushState;
    window.history.replaceState = rawReplaceState;
  }
};

// src/patchers/interval.ts
var rawInterval = window.setInterval;
var rawClearInterval = window.clearInterval;
var PatchInterval = class {
  constructor() {
    this.intervals = [];
  }
  activate() {
    window.setInterval = (handler, timeout, ...args) => {
      const intervalId = rawInterval(handler, timeout, ...args);
      this.intervals = [...this.intervals, intervalId];
      return intervalId;
    };
    window.clearInterval = (intervalId) => {
      this.intervals = this.intervals.filter((id) => id !== intervalId);
      return rawClearInterval(intervalId);
    };
  }
  deactivate(_clearEffects) {
    if (_clearEffects) {
      this.intervals.forEach((id) => window.clearInterval(id));
    }
    window.setInterval = rawInterval;
    window.clearInterval = rawClearInterval;
  }
};

// src/patchers/variable.ts
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}
var PatchGlobalVal = class {
  constructor(targetToProtect = typeof window !== "undefined" ? window : globalThis, protectVariable = []) {
    this.targetToProtect = targetToProtect;
    this.protectVariable = protectVariable;
    this.snapshotOriginal = /* @__PURE__ */ new Map();
    this.snapshotMutated = /* @__PURE__ */ new Map();
    this.whiteList = [
      "location",
      "addEventListener",
      "removeEventListener",
      "webpackJsonp"
    ];
    this.targetToProtect = targetToProtect;
    this.protectVariable = protectVariable;
    this.whiteList = [...this.whiteList, ...protectVariable];
  }
  safeIterator(fn) {
    for (const i in this.targetToProtect) {
      if (this.whiteList.indexOf(i) !== -1) {
        continue;
      }
      const prop = Object.getOwnPropertyDescriptor(this.targetToProtect, i);
      if (!prop || !prop.writable) {
        continue;
      }
      if (hasOwn(this.targetToProtect, i)) {
        fn(i);
      }
    }
  }
  activate() {
    this.safeIterator((i) => {
      this.snapshotOriginal.set(i, this.targetToProtect[i]);
    });
    this.snapshotMutated.forEach((val, mutateKey) => {
      this.targetToProtect[mutateKey] = this.snapshotMutated.get(mutateKey);
    });
  }
  deactivate() {
    const deleteMap = {};
    const updateMap = {};
    const addMap = {};
    this.safeIterator((normalKey) => {
      if (this.snapshotOriginal.get(normalKey) !== this.targetToProtect[normalKey]) {
        this.snapshotMutated.set(normalKey, this.targetToProtect[normalKey]);
        this.targetToProtect[normalKey] = this.snapshotOriginal.get(normalKey);
        if (this.targetToProtect[normalKey] === void 0) {
          addMap[normalKey] = this.snapshotMutated.get(normalKey);
        } else {
          updateMap[normalKey] = this.snapshotMutated.get(normalKey);
        }
      }
      this.snapshotOriginal.delete(normalKey);
    });
    this.snapshotOriginal.forEach((val, deleteKey) => {
      this.snapshotMutated.set(deleteKey, this.targetToProtect[deleteKey]);
      this.targetToProtect[deleteKey] = this.snapshotOriginal.get(deleteKey);
      deleteMap[deleteKey] = this.targetToProtect[deleteKey];
    });
  }
};

// src/patchers/webpackjsonp.ts
var PatchWebpackJsonp = class {
  activate() {
    this.preWebpackJsonp = window.webpackJsonp;
    window.webpackJsonp = this.currentWebpackJsonp;
  }
  deactivate() {
    this.currentWebpackJsonp = window.webpackJsonp;
    window.webpackJsonp = this.preWebpackJsonp;
  }
};

// src/sandbox.ts
var Sandbox = class {
  constructor(name, protectVariable = [], targetToProtect = typeof window !== "undefined" ? window : globalThis, isInBrowser = typeof window === "undefined" ? false : true) {
    this.name = name;
    this.protectVariable = protectVariable;
    this.targetToProtect = targetToProtect;
    this.isInBrowser = isInBrowser;
    this.type = "snapshot";
    this.isRunning = false;
    this.patchList = [];
    this.name = name;
    this.isInBrowser = isInBrowser;
    this.patchList.push(new PatchGlobalVal(targetToProtect, protectVariable));
    if (this.isInBrowser) {
      this.patchList = [
        ...this.patchList,
        new PatchStyle(),
        new PatchEvent(),
        new PatchHistory(),
        new PatchInterval(),
        new PatchWebpackJsonp()
      ];
    }
  }
  activate() {
    if (this.isRunning)
      return;
    this.patchList.forEach((patch) => {
      patch.activate();
    });
    this.isRunning = true;
  }
  deactivate(clearEffects = true) {
    if (!this.isRunning)
      return;
    [...this.patchList].reverse().forEach((patch) => {
      patch.deactivate(clearEffects);
    });
    this.isRunning = false;
  }
};

// src/index.ts
function GarfishBrowserSnapshot(op) {
  return function(Garfish) {
    const options = {
      openBrowser: false,
      version: "1.16.2",
      name: "browser-snapshot",
      afterLoad(appInfo, appInstance) {
        var _a;
        const config = op || { open: true };
        const sandboxConfig = appInfo.sandbox || ((_a = Garfish == null ? void 0 : Garfish.options) == null ? void 0 : _a.sandbox);
        if (sandboxConfig === false || sandboxConfig.open === false || (sandboxConfig == null ? void 0 : sandboxConfig.snapshot) === false) {
          config.open = false;
        }
        if (sandboxConfig) {
          config.protectVariable = [
            ...(Garfish == null ? void 0 : Garfish.options.protectVariable) || [],
            ...appInfo.protectVariable || []
          ];
        }
        options.openBrowser = !!config.open;
        if (!config.open)
          return;
        if (appInstance) {
          if (appInstance.snapshotSandbox)
            return;
          const sandbox = new Sandbox(appInfo.name, config.protectVariable);
          appInstance.snapshotSandbox = sandbox;
        }
      },
      beforeMount(appInfo, appInstance) {
        if (!appInstance.snapshotSandbox)
          return;
        appInstance.snapshotSandbox.activate();
      },
      afterUnmount(appInfo, appInstance) {
        if (!appInstance.snapshotSandbox)
          return;
        appInstance.snapshotSandbox.deactivate();
      }
    };
    return options;
  };
}



/***/ }),

/***/ "./node_modules/.pnpm/@garfish+browser-vm@1.16.2/node_modules/@garfish/browser-vm/dist/esm/index.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@garfish+browser-vm@1.16.2/node_modules/@garfish/browser-vm/dist/esm/index.js ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GarfishBrowserVm: function() { return /* binding */ GarfishBrowserVm; },
/* harmony export */   "default": function() { return /* binding */ Sandbox; }
/* harmony export */ });
/* harmony import */ var _garfish_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @garfish/utils */ "./node_modules/.pnpm/@garfish+utils@1.16.2/node_modules/@garfish/utils/dist/esm/index.js");
/* harmony import */ var _garfish_loader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @garfish/loader */ "./node_modules/.pnpm/@garfish+loader@1.16.2/node_modules/@garfish/loader/dist/esm/index.js");
/* harmony import */ var _garfish_hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @garfish/hooks */ "./node_modules/.pnpm/@garfish+hooks@1.16.2/node_modules/@garfish/hooks/dist/esm/index.js");
/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));

// src/pluginify.ts


// src/sandbox.ts



// src/modules/history.ts


// src/proxyInterceptor/shared.ts


// src/utils.ts


// src/symbolTypes.ts
var GARFISH_NAMESPACE_PREFIX = "__Garfish__";
var GARFISH_OPTIMIZE_NAME = "__garfish_optimize__";
var __proxyNode__ = Symbol.for("garfish.proxyNode");
var __domWrapper__ = Symbol.for("garfish.domWrapper");
var __windowBind__ = Symbol.for("garfish.windowBind");
var __sandboxMap__ = Symbol.for("garfish.sandboxMap");
var __documentBind__ = Symbol.for("garfish.documentBind");
var __garfishGlobal__ = Symbol.for("garfish.globalObject");
var __elementSandboxTag__ = Symbol.for("garfish.elementSandboxTag");

// src/utils.ts
var esGlobalMethods = "eval,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Array,ArrayBuffer,BigInt,BigInt64Array,BigUint64Array,Boolean,DataView,Date,Error,EvalError,FinalizationRegistry,Float32Array,Float64Array,Function,Int8Array,Int16Array,Int32Array,Map,Number,Object,Promise,Proxy,RangeError,ReferenceError,RegExp,Set,SharedArrayBuffer,String,Symbol,SyntaxError,TypeError,Uint8Array,Uint8ClampedArray,Uint16Array,Uint32Array,URIError,WeakMap,WeakRef,WeakSet,Atomics,JSON,Math,Reflect,".split(",");
var nativeCodeMethods = "hasOwnProperty,".split(",");
var isEsGlobalMethods = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.makeMap)(esGlobalMethods);
var isNativeCodeMethods = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.makeMap)(nativeCodeMethods);
var optimizeMethods = [...esGlobalMethods].filter((v) => v !== "eval");
var sandboxList = /* @__PURE__ */ new Map();
if (!window[__sandboxMap__]) {
  window[__sandboxMap__] = sandboxList;
} else {
  sandboxList = window[__sandboxMap__];
}
var sandboxMap = {
  sandboxMap: sandboxList,
  get(element) {
    if (!element)
      return;
    const sandboxId = element[__elementSandboxTag__];
    if (typeof sandboxId !== "number")
      return;
    return this.sandboxMap.get(sandboxId);
  },
  setElementTag(element, sandbox) {
    if (!element)
      return;
    element[__elementSandboxTag__] = sandbox.id;
  },
  set(sandbox) {
    if (this.sandboxMap.get(sandbox.id))
      return;
    this.sandboxMap.set(sandbox.id, sandbox);
  },
  del(sandbox) {
    this.sandboxMap.delete(sandbox.id);
  }
};
function handlerParams(args) {
  args = Array.isArray(args) ? args : Array.from(args);
  return args.map((v) => {
    return v && v[__proxyNode__] ? v[__proxyNode__] : v;
  });
}
function rootElm(sandbox) {
  const container = sandbox && sandbox.options.el;
  return container && container();
}
function createFakeObject(target, filter, isWritable) {
  const fakeObject = {};
  const propertyMap = {};
  const storageBox = /* @__PURE__ */ Object.create(null);
  const propertyNames = Object.getOwnPropertyNames(target);
  const def2 = (p) => {
    const descriptor = Object.getOwnPropertyDescriptor(target, p);
    if (descriptor == null ? void 0 : descriptor.configurable) {
      const hasGetter = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(descriptor, "get");
      const hasSetter = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(descriptor, "set");
      const canWritable = typeof isWritable === "function" && isWritable(p);
      if (hasGetter) {
        descriptor.get = () => (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(storageBox, p) ? storageBox[p] : target[p];
      }
      if (hasSetter) {
        descriptor.set = (val) => {
          storageBox[p] = val;
          return true;
        };
      }
      if (canWritable) {
        if (descriptor.writable === false) {
          descriptor.writable = true;
        } else if (hasSetter) {
          descriptor.set = (val) => {
            storageBox[p] = val;
            return true;
          };
        }
      }
      Object.defineProperty(fakeObject, p, Object.freeze(descriptor));
    }
  };
  propertyNames.forEach((p) => {
    propertyMap[p] = true;
    typeof filter === "function" ? !filter(p) && def2(p) : def2(p);
  });
  for (const prop in target) {
    !propertyMap[prop] && def2(prop);
  }
  return fakeObject;
}
var setting = true;
function microTaskHtmlProxyDocument(proxyDocument) {
  const html = document.children[0];
  if (html && html.parentNode !== proxyDocument) {
    Object.defineProperty(html, "parentNode", {
      value: proxyDocument,
      configurable: true
    });
    if (setting) {
      setting = false;
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.nextTick)(() => {
        setting = true;
        Object.defineProperty(html, "parentNode", {
          value: document,
          configurable: true
        });
      });
    }
  }
}
function isStyledComponentsLike(element) {
  return element instanceof HTMLStyleElement && !element.textContent;
}
var LockQueue = class {
  constructor() {
    this.id = 0;
    this.lockQueue = [];
    this.currentId = 0;
  }
  genId() {
    const lockId = this.id;
    let promiseResolve = () => {
    };
    const waiting = new Promise((resolve) => {
      promiseResolve = resolve;
      this.currentId++;
    });
    const lockItem = {
      id: lockId,
      waiting,
      resolve: () => {
        promiseResolve();
      }
    };
    this.lockQueue.push(lockItem);
    this.id += 1;
    return lockId;
  }
  getId() {
    return this.id;
  }
  async wait(id2) {
    const { lockQueue } = this;
    const firstLock = lockQueue[0];
    const lockItem = lockQueue.find((item) => item.id === id2);
    const lockIndex = lockQueue.findIndex((item) => item.id === id2);
    if (firstLock.id === id2) {
      lockItem == null ? void 0 : lockItem.resolve();
      return;
    }
    if (lockItem) {
      await Promise.all(lockQueue.slice(0, lockIndex).map((item) => item.waiting));
      const lastLock = lockQueue[lockQueue.length - 1];
      if (lastLock.id === id2) {
        this.clear();
      }
    }
  }
  release(id2) {
    const { lockQueue } = this;
    const lockItem = lockQueue.find((item) => item.id === id2);
    lockItem == null ? void 0 : lockItem.resolve();
  }
  clear() {
    this.lockQueue = [];
  }
};

// src/proxyInterceptor/shared.ts
function isDataDescriptor(desc) {
  if (desc === void 0)
    return false;
  return "value" in desc || "writable" in desc;
}
function isAccessorDescriptor(desc) {
  if (desc === void 0)
    return false;
  return "get" in desc || "set" in desc;
}
function verifyGetterDescriptor(target, p, newValue) {
  const desc = Object.getOwnPropertyDescriptor(target, p);
  if (desc !== void 0 && desc.configurable === false) {
    if (isDataDescriptor(desc) && desc.writable === false) {
      if (!Object.is(newValue, desc.value)) {
        if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
          (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.warn)(`property "${String(p)}" is non-configurable and non-writable.`);
        }
        return 1;
      }
    } else if (isAccessorDescriptor(desc) && desc.get === void 0) {
      return 2;
    }
  }
  return 0;
}
function verifySetter(proxyTarget, target, p, val, receiver) {
  const verifyResult = verifySetterDescriptor(proxyTarget ? proxyTarget : receiver || target, p, val);
  let result;
  if (verifyResult > 0) {
    if (verifyResult === 1 || verifyResult === 2)
      result = false;
    if (verifyResult === 3)
      result = true;
  }
  return result;
}
function verifySetterDescriptor(target, p, newValue) {
  const desc = Object.getOwnPropertyDescriptor(target, p);
  if (desc !== void 0 && desc.configurable === false) {
    if (isDataDescriptor(desc) && desc.writable === false) {
      if (!Object.is(newValue, desc.value)) {
        if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
          (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.warn)(`property "${String(p)}" is non-configurable and non-writable.`);
        }
        return 1;
      } else {
        return 3;
      }
    } else if (isAccessorDescriptor(desc) && desc.set === void 0) {
      return 2;
    }
  }
  return 0;
}
function safeToString(thing) {
  try {
    return thing.toString();
  } catch (e) {
    return "[toString failed]";
  }
}
function isConstructor(fn) {
  const fp = fn.prototype;
  const hasConstructor = fp && fp.constructor === fn && Object.getOwnPropertyNames(fp).length > 1;
  const functionStr = !hasConstructor && safeToString(fn);
  return hasConstructor || /^function\s+[A-Z]/.test(functionStr) || /^class\b/.test(functionStr);
}
var buildInProps = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.makeMap)([
  "length",
  "caller",
  "callee",
  "arguments",
  "prototype",
  Symbol.hasInstance
]);
function transferProps(o, n) {
  for (const key of Reflect.ownKeys(o)) {
    if (buildInProps(key))
      continue;
    const desc = Object.getOwnPropertyDescriptor(n, key);
    if (desc && desc.writable) {
      n[key] = o[key];
    }
  }
}
function bind(fn, context) {
  const fNOP = function() {
  };
  function bound() {
    const args = handlerParams(arguments);
    if (this instanceof bound) {
      const obj = new fn(...args);
      Object.setPrototypeOf(obj, bound.prototype);
      return obj;
    } else {
      return fn.apply(context, args);
    }
  }
  bound.$native = fn;
  transferProps(fn, bound);
  if (fn.prototype) {
    fNOP.prototype = fn.prototype;
  }
  bound.prototype = new fNOP();
  if (Symbol.hasInstance) {
    Object.defineProperty(bound, Symbol.hasInstance, {
      configurable: true,
      value(instance) {
        const op = fn.prototype;
        return (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(op) || typeof op === "function" ? instance instanceof fn : false;
      }
    });
  }
  return bound;
}

// src/modules/history.ts
var passedKey = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.makeMap)(["scrollRestoration"]);
function historyModule() {
  const proto = Object.getPrototypeOf(window.history) || History.prototype;
  const fakeHistory = Object.create(proto);
  const proxyHistory = new Proxy(fakeHistory, {
    get(target, p) {
      const value = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(target, p) ? target[p] : window.history[p];
      return typeof value === "function" ? value.bind(window.history) : value;
    },
    set(target, p, value, receiver) {
      const isPassKey = typeof p === "string" && passedKey(p);
      const verifySetterResult = verifySetter(isPassKey ? history : null, target, p, value, receiver);
      if (verifySetterResult !== void 0) {
        return verifySetterResult;
      } else {
        return isPassKey ? Reflect.set(history, p, value) : Reflect.set(target, p, value, receiver);
      }
    },
    getPrototypeOf() {
      return fakeHistory;
    }
  });
  const fakeHistoryCtor = function History2() {
    throw new TypeError("Illegal constructor");
  };
  fakeHistoryCtor.prototype = fakeHistory;
  fakeHistoryCtor.prototype.constructor = fakeHistoryCtor;
  return {
    override: {
      history: proxyHistory,
      History: fakeHistoryCtor
    }
  };
}

// src/modules/network.ts

function networkModule(sandbox) {
  const baseUrl = sandbox.options.baseUrl;
  const wsSet = /* @__PURE__ */ new Set();
  const xhrSet = /* @__PURE__ */ new Set();
  const fetchSet = /* @__PURE__ */ new Set();
  const needFix = (url) => sandbox.options.fixBaseUrl && baseUrl && typeof url === "string" && !(0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.isAbsolute)(url);
  class fakeXMLHttpRequest extends XMLHttpRequest {
    constructor() {
      super();
      xhrSet.add(this);
    }
    open() {
      if (arguments[2] === false) {
        xhrSet.delete(this);
      }
      if (needFix(arguments[1])) {
        arguments[1] = baseUrl ? (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.transformUrl)(baseUrl, arguments[1]) : arguments[1];
      }
      const url = arguments[1];
      if (sandbox.options.addSourceList) {
        sandbox.options.addSourceList({
          tagName: "xmlhttprequest",
          url
        });
      }
      return super.open.apply(this, arguments);
    }
    abort() {
      xhrSet.delete(this);
      return super.abort.apply(this, arguments);
    }
  }
  class fakeWebSocket extends WebSocket {
    constructor(url, protocols) {
      if (needFix(url) && baseUrl) {
        const baseWsUrl = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.toWsProtocol)(baseUrl);
        url = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.transformUrl)(baseWsUrl, arguments[1]);
      }
      super(url, protocols);
      wsSet.add(this);
    }
    close() {
      wsSet.delete(this);
      return super.close.apply(this, arguments);
    }
  }
  const fakeFetch = (input, options = {}) => {
    if (needFix(input) && baseUrl) {
      input = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.transformUrl)(baseUrl, input);
    }
    if (sandbox.options.addSourceList) {
      sandbox.options.addSourceList({
        tagName: "fetch",
        url: input
      });
    }
    let controller;
    if (!(0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(options, "signal") && window.AbortController) {
      controller = new window.AbortController();
      fetchSet.add(controller);
      options.signal = controller.signal;
    }
    const result = window.fetch(input, options);
    return controller && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.isPromise)(result) ? result.finally(() => fetchSet.delete(controller)) : result;
  };
  return {
    override: {
      WebSocket: fakeWebSocket,
      XMLHttpRequest: fakeXMLHttpRequest,
      fetch: fakeFetch
    },
    recover() {
      wsSet.forEach((ws) => {
        if (typeof ws.close === "function")
          ws.close();
      });
      xhrSet.forEach((xhr) => {
        if (typeof xhr.abort === "function")
          xhr.abort();
      });
      fetchSet.forEach((ctor) => {
        if (typeof ctor.abort === "function")
          ctor.abort();
      });
      wsSet.clear();
      xhrSet.clear();
      fetchSet.clear();
    }
  };
}

// src/proxyInterceptor/document.ts

var passedKey2 = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.makeMap)(["title", "cookie", "onselectstart", "ondragstart"]);
var queryFunctions = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.makeMap)([
  "querySelector",
  "querySelectorAll",
  "getElementById",
  "getElementsByTagName",
  "getElementsByTagNameNS",
  "getElementsByClassName"
]);
function createGetter(sandbox) {
  return (target, p, receiver) => {
    if (p === "activeElement") {
      return Reflect.get(document, p);
    }
    const rootNode = rootElm(sandbox);
    const strictIsolation = sandbox.options.strictIsolation;
    const value = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(target, p) ? Reflect.get(target, p, receiver) : Reflect.get(document, p);
    const hooksRes = sandbox.hooks.lifecycle.documentGetter.emit({
      value,
      rootNode,
      propName: p,
      proxyDocument: target,
      customValue: null
    });
    if (hooksRes.customValue) {
      return hooksRes.customValue;
    }
    const setSandboxRef = (el) => {
      if ((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(el)) {
        sandboxMap.setElementTag(el, sandbox);
        if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
          el.__SANDBOX__ = true;
        }
      }
      return el;
    };
    if (rootNode) {
      if (p === "createElement") {
        return function(tagName, options) {
          const el = value.call(document, tagName, options);
          return setSandboxRef(el);
        };
      } else if (p === "createTextNode") {
        return function(data) {
          const el = value.call(document, data);
          return setSandboxRef(el);
        };
      } else if (p === "head") {
        return (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.findTarget)(rootNode, ["head", `div[${_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.__MockHead__}]`]) || value;
      }
      if (strictIsolation) {
        if (p === "body") {
          return (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.findTarget)(rootNode, ["body", `div[${_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.__MockBody__}]`]);
        } else if (queryFunctions(p)) {
          return p === "getElementById" ? (id2) => rootNode.querySelector(`#${id2}`) : rootNode[p].bind(rootNode);
        }
      }
    }
    if (typeof value === "function") {
      let newValue = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(value, __documentBind__) ? value[__documentBind__] : null;
      if (!newValue)
        newValue = bind(value, document);
      const verifyResult = verifyGetterDescriptor(target, p, newValue);
      if (verifyResult > 0) {
        if (verifyResult === 1)
          return value;
        if (verifyResult === 2)
          return void 0;
      }
      value[__documentBind__] = newValue;
      return newValue;
    }
    return value;
  };
}
var safariProxyDocumentDealHandler = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.safari13Deal)();
function createSetter(sandbox) {
  return (target, p, value, receiver) => {
    const rootNode = rootElm(sandbox);
    const verifyResult = verifySetterDescriptor(typeof p === "string" && passedKey2(p) ? document : receiver || target, p, value);
    if (verifyResult > 0) {
      if (verifyResult === 1 || verifyResult === 2)
        return false;
      if (verifyResult === 3)
        return true;
    }
    if (p === "onselectstart" || p === "ondragstart") {
      if (rootNode) {
        return Reflect.set(rootNode, p, value);
      } else {
        return Reflect.set(document, p, value);
      }
    }
    if (typeof p === "string" && passedKey2(p)) {
      return Reflect.set(document, p, value);
    } else {
      safariProxyDocumentDealHandler.triggerSet();
      return Reflect.set(target, p, value, receiver);
    }
  };
}
function createDefineProperty() {
  return (target, p, descriptor) => {
    safariProxyDocumentDealHandler.handleDescriptor(descriptor);
    return passedKey2(p) ? Reflect.defineProperty(document, p, descriptor) : Reflect.defineProperty(target, p, descriptor);
  };
}
function createHas() {
  return (target, p) => {
    if (p === "activeElement")
      return Reflect.has(document, p);
    return (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(target, p) || Reflect.has(document, p);
  };
}

// src/modules/document.ts
var documentModule = (sandbox) => {
  let proxyDocument = Object.create(document);
  const getter = createGetter(sandbox);
  const fakeDocument = createFakeObject(document);
  const fakeDocumentProto = new Proxy(fakeDocument, {
    get: (...args) => {
      microTaskHtmlProxyDocument(proxyDocument);
      return getter(...args);
    },
    has: createHas()
  });
  proxyDocument = new Proxy(Object.create(fakeDocumentProto, {
    currentScript: {
      value: null,
      writable: true
    },
    [__proxyNode__]: {
      writable: false,
      configurable: false,
      value: document
    }
  }), {
    set: createSetter(sandbox),
    defineProperty: createDefineProperty(),
    getPrototypeOf() {
      return HTMLDocument.prototype || Document.prototype;
    }
  });
  return {
    override: {
      document: proxyDocument
    }
  };
};

// src/modules/uiEvent.ts

var MouseEventPatch = class extends MouseEvent {
  constructor(typeArg, mouseEventInit) {
    if (mouseEventInit && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.getType)(mouseEventInit.view) === "window") {
      mouseEventInit.view = window;
    }
    super(typeArg, mouseEventInit);
  }
};
function UiEventOverride() {
  return {
    override: {
      MouseEvent: MouseEventPatch
    }
  };
}

// src/modules/storage.ts
var CusStorage = class {
  constructor(namespace, rawStorage) {
    this.rawStorage = rawStorage;
    this.namespace = namespace;
    this.prefix = `${GARFISH_NAMESPACE_PREFIX}${namespace}__`;
  }
  get length() {
    return this.getKeys().length;
  }
  getKeys() {
    return Object.keys(this.rawStorage).filter((key) => key.startsWith(this.prefix));
  }
  key(n) {
    const key = this.getKeys()[n];
    return key ? key.substring(this.prefix.length) : null;
  }
  getItem(keyName) {
    return this.rawStorage.getItem(`${this.prefix + keyName}`);
  }
  setItem(keyName, keyValue) {
    this.rawStorage.setItem(`${this.prefix + keyName}`, keyValue);
  }
  removeItem(keyName) {
    this.rawStorage.removeItem(`${this.prefix + keyName}`);
  }
  clear() {
    this.getKeys().forEach((key) => {
      this.rawStorage.removeItem(key);
    });
  }
};
function localStorageModule(sandbox) {
  const namespace = sandbox.options.namespace;
  return {
    override: {
      localStorage: new CusStorage(namespace, localStorage),
      sessionStorage: new CusStorage(namespace, sessionStorage)
    }
  };
}

// src/modules/eventListener.ts
function listenerModule(_sandbox) {
  const listeners = /* @__PURE__ */ new Map();
  const rawAddEventListener = window.addEventListener;
  const rawRemoveEventListener = window.removeEventListener;
  function addListener(type, listener, options) {
    const curListeners = listeners.get(type) || [];
    listeners.set(type, [...curListeners, listener]);
    rawAddEventListener.call(this, type, listener, options);
  }
  function removeListener(type, listener, options) {
    const curListeners = listeners.get(type) || [];
    const idx = curListeners.indexOf(listener);
    if (idx !== -1) {
      curListeners.splice(idx, 1);
    }
    listeners.set(type, [...curListeners]);
    rawRemoveEventListener.call(this, type, listener, options);
  }
  const recover = () => {
    listeners.forEach((listener, key) => {
      listener.forEach((fn) => {
        rawRemoveEventListener.call(window, key, fn);
      });
    });
    listeners.clear();
  };
  return {
    recover,
    override: {
      addEventListener: addListener.bind(window),
      removeEventListener: removeListener.bind(window)
    },
    created(global) {
      const fakeDocument = global == null ? void 0 : global.document;
      if (fakeDocument) {
        fakeDocument.addEventListener = addListener.bind(document);
        fakeDocument.removeEventListener = removeListener.bind(document);
      }
    }
  };
}

// src/modules/mutationObserver.ts
function observerModule(_sandbox) {
  const observerSet = /* @__PURE__ */ new Set();
  class ProxyMutationObserver extends MutationObserver {
    constructor(cb) {
      super(cb);
      observerSet.add(this);
    }
  }
  const recover = () => {
    observerSet.forEach((observer) => {
      if (typeof observer.disconnect === "function")
        observer.disconnect();
    });
    observerSet.clear();
  };
  return {
    recover,
    override: {
      MutationObserver: ProxyMutationObserver
    }
  };
}

// src/modules/timer.ts
var rawSetTimeout = window.setTimeout;
var rawClearTimeout = window.clearTimeout;
var rawSetInterval = window.setInterval;
var rawClearInterval = window.clearInterval;
var timeoutModule = () => {
  const timeout = /* @__PURE__ */ new Set();
  const setTimeout2 = (handler, ms, ...args) => {
    const timeoutId = rawSetTimeout(handler, ms, ...args);
    timeout.add(timeoutId);
    return timeoutId;
  };
  const clearTimeout = (timeoutId) => {
    timeout.delete(timeoutId);
    rawClearTimeout(timeoutId);
  };
  const recover = () => {
    timeout.forEach((timeoutId) => {
      rawClearTimeout(timeoutId);
    });
  };
  return {
    recover,
    override: {
      setTimeout: setTimeout2,
      clearTimeout
    }
  };
};
var intervalModule = () => {
  const timeout = /* @__PURE__ */ new Set();
  const setInterval = (callback, ms, ...args) => {
    const intervalId = rawSetInterval(callback, ms, ...args);
    timeout.add(intervalId);
    return intervalId;
  };
  const clearInterval = (intervalId) => {
    timeout.delete(intervalId);
    rawClearInterval(intervalId);
  };
  const recover = () => {
    timeout.forEach((intervalId) => {
      rawClearInterval(intervalId);
    });
  };
  return {
    recover,
    override: {
      setInterval,
      clearInterval,
      setImmediate: (fn) => setTimeout(fn, 0)
    }
  };
};

// src/dynamicNode/index.ts


// src/dynamicNode/processParams.ts
function injectHandlerParams() {
  if (window.MutationObserver) {
    const rawObserver = window.MutationObserver.prototype.observe;
    MutationObserver.prototype.observe = function() {
      return rawObserver.apply(this, handlerParams(arguments));
    };
  }
  const desc = Object.getOwnPropertyDescriptor(window.Document.prototype, "activeElement");
  const rawActiveEl = desc && desc.get;
  if (rawActiveEl) {
    Object.defineProperty(window.Document.prototype, "activeElement", {
      get(...args) {
        return rawActiveEl.apply(handlerParams([this])[0], handlerParams(args));
      }
    });
  }
}

// src/dynamicNode/processor.ts

var isInsertMethod = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.makeMap)(["insertBefore", "insertAdjacentElement"]);
var rawElementMethods = /* @__PURE__ */ Object.create(null);
var _DynamicNodeProcessor = class {
  constructor(el, sandbox, methodName) {
    this.nativeAppend = rawElementMethods["appendChild"];
    this.nativeRemove = rawElementMethods["removeChild"];
    this.el = el;
    this.sandbox = sandbox;
    this.methodName = methodName;
    this.rootElement = rootElm(sandbox) || document;
    this.DOMApis = new _garfish_utils__WEBPACK_IMPORTED_MODULE_0__.DOMApis(sandbox.global.document);
    this.tagName = el.tagName ? el.tagName.toLowerCase() : "";
  }
  is(tag) {
    return this.tagName === tag;
  }
  fixResourceNodeUrl(el) {
    const baseUrl = this.sandbox.options.baseUrl;
    if (baseUrl) {
      const src = el.getAttribute("src");
      const href = el.getAttribute("href");
      if (this.sandbox.options.fixStaticResourceBaseUrl) {
        src && (el.src = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.transformUrl)(baseUrl, src));
        href && (el.href = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.transformUrl)(baseUrl, href));
      }
      const url = el.src || el.href;
      if (url && this.sandbox.options.addSourceList) {
        this.sandbox.options.addSourceList({
          tagName: el.tagName,
          url
        });
      }
    }
  }
  dispatchEvent(type, errInfo) {
    Promise.resolve().then(() => {
      var _a;
      const isError = type === "error";
      let event;
      if (isError && errInfo) {
        event = new ErrorEvent(type, __spreadProps(__spreadValues({}, errInfo), {
          message: (_a = errInfo.error) == null ? void 0 : _a.message
        }));
      } else {
        event = new Event(type);
      }
      event.__byGarfish__ = true;
      Object.defineProperty(event, "target", { value: this.el });
      this.el.dispatchEvent(event);
      isError && window.dispatchEvent(event);
    });
  }
  addDynamicLinkNode(callback) {
    const { href, type } = this.el;
    if (!type || (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.isCssType)({ src: href, type })) {
      if (href) {
        const { baseUrl, namespace, styleScopeId } = this.sandbox.options;
        const fetchUrl = baseUrl ? (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.transformUrl)(baseUrl, href) : href;
        const lockId = _DynamicNodeProcessor.linkLock.genId();
        this.sandbox.loader.load({
          scope: namespace,
          url: fetchUrl,
          defaultContentType: type
        }).then(async ({ resourceManager: styleManager }) => {
          await _DynamicNodeProcessor.linkLock.wait(lockId);
          if (styleManager) {
            styleManager.correctPath();
            if (styleScopeId) {
              styleManager.setScope({
                appName: namespace,
                rootElId: styleScopeId()
              });
            }
            callback(styleManager.renderAsStyleElement());
          } else {
            (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.warn)(`Invalid resource type "${type}", "${href}" can't generate styleManager`);
          }
          this.dispatchEvent("load");
          _DynamicNodeProcessor.linkLock.release(lockId);
        }).catch((e) => {
          _DynamicNodeProcessor.linkLock.release(lockId);
          (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.warn)(e);
          this.dispatchEvent("error", {
            error: e,
            filename: fetchUrl
          });
        });
      }
    } else {
      if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
        (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.warn)(`Invalid resource type "${type}", "${href}"`);
      }
    }
    const linkCommentNode = this.DOMApis.createLinkCommentNode(href);
    this.el[_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.__REMOVE_NODE__] = () => this.DOMApis.removeElement(linkCommentNode);
    return linkCommentNode;
  }
  addDynamicScriptNode() {
    const { src, type, crossOrigin } = this.el;
    const isModule2 = type === "module";
    const code = this.el.textContent || this.el.text || "";
    if (!type || (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.isJsType)({ src, type })) {
      const { baseUrl, namespace } = this.sandbox.options;
      if (src) {
        const fetchUrl = baseUrl ? (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.transformUrl)(baseUrl, src) : src;
        this.sandbox.loader.load({
          scope: namespace,
          url: fetchUrl,
          crossOrigin,
          defaultContentType: type
        }).then((manager) => {
          if (manager.resourceManager) {
            const {
              resourceManager: { url, scriptCode }
            } = manager;
            this.sandbox.execScript(scriptCode, {}, url, {
              isModule: isModule2,
              defer: false,
              async: false,
              noEntry: true,
              originScript: this.el
            });
          } else {
            (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.warn)(`Invalid resource type "${type}", "${src}" can't generate scriptManager`);
          }
          this.dispatchEvent("load");
        }, (e) => {
          (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.warn)(e);
          this.dispatchEvent("error", {
            error: e,
            filename: fetchUrl
          });
        });
      } else if (code) {
        this.sandbox.execScript(code, {}, baseUrl, {
          noEntry: true,
          originScript: this.el
        });
      }
      const scriptCommentNode = this.DOMApis.createScriptCommentNode({
        src,
        code
      });
      this.el[_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.__REMOVE_NODE__] = () => this.DOMApis.removeElement(scriptCommentNode);
      return scriptCommentNode;
    }
    return this.el;
  }
  monitorChangesOfLinkNode() {
    if (this.el.modifyFlag)
      return;
    const mutator = new MutationObserver((mutations) => {
      var _a;
      if (this.el.modifyFlag)
        return;
      for (const { type, attributeName } of mutations) {
        if (type === "attributes") {
          if (attributeName === "rel" || attributeName === "stylesheet") {
            if (this.el.modifyFlag)
              return;
            if (this.el.rel === "stylesheet" && this.el.href) {
              this.el.disabled = this.el.modifyFlag = true;
              const commentNode = this.addDynamicLinkNode((styleNode) => {
                var _a2;
                (_a2 = commentNode.parentNode) == null ? void 0 : _a2.replaceChild(styleNode, commentNode);
              });
              (_a = this.el.parentNode) == null ? void 0 : _a.replaceChild(commentNode, this.el);
            }
          }
        }
      }
    });
    mutator.observe(this.el, { attributes: true });
  }
  monitorChangesOfStyle() {
    const { baseUrl, namespace, styleScopeId } = this.sandbox.options;
    const rootElId = styleScopeId == null ? void 0 : styleScopeId();
    const modifyStyleCode = (styleCode) => {
      if (styleCode) {
        const manager = new this.sandbox.loader.StyleManager(styleCode);
        manager.correctPath(baseUrl);
        if (rootElId) {
          manager.setScope({
            rootElId,
            appName: namespace
          });
        }
        styleCode = manager.transformCode(styleCode);
      }
      return styleCode;
    };
    const mutator = new MutationObserver((mutations) => {
      var _a;
      for (const { type, addedNodes } of mutations) {
        if (type === "childList") {
          if ((_a = addedNodes[0]) == null ? void 0 : _a.textContent) {
            addedNodes[0].textContent = modifyStyleCode(addedNodes[0].textContent);
          }
        }
      }
    });
    mutator.observe(this.el, { childList: true });
    let fakeSheet = null;
    Reflect.defineProperty(this.el, "sheet", {
      get: () => {
        if (!fakeSheet) {
          fakeSheet = this.createFakeSheet(modifyStyleCode);
        }
        return fakeSheet;
      },
      configurable: true
    });
  }
  findParentNodeInApp(parentNode, defaultInsert) {
    if (parentNode === document.body) {
      return (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.findTarget)(this.rootElement, [
        "body",
        `div[${_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.__MockBody__}]`
      ]);
    } else if (parentNode === document.head) {
      return (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.findTarget)(this.rootElement, [
        "head",
        `div[${_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.__MockHead__}]`
      ]);
    }
    if (this.rootElement.contains(parentNode) || !document.contains(parentNode)) {
      return parentNode;
    }
    if (defaultInsert === "head") {
      return (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.findTarget)(this.rootElement, [
        "head",
        `div[${_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.__MockHead__}]`
      ]);
    } else if (defaultInsert === "body") {
      return (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.findTarget)(this.rootElement, [
        "body",
        `div[${_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.__MockBody__}]`
      ]);
    }
    return parentNode;
  }
  append(context, args, originProcess) {
    var _a;
    let convertedNode;
    let parentNode = context;
    const { baseUrl, namespace, styleScopeId } = this.sandbox.options;
    if (_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.sourceListTags.includes(this.tagName)) {
      this.fixResourceNodeUrl(this.el);
    }
    if (this.is("script")) {
      parentNode = this.findParentNodeInApp(context, "body");
      convertedNode = this.addDynamicScriptNode();
    } else if (this.is("style")) {
      parentNode = this.findParentNodeInApp(context, "head");
      const manager = new this.sandbox.loader.StyleManager(this.el.textContent);
      manager.correctPath(baseUrl);
      if (styleScopeId) {
        manager.setScope({
          appName: namespace,
          rootElId: styleScopeId()
        });
      }
      this.el.textContent = manager.transformCode(manager.styleCode);
      convertedNode = this.el;
      this.sandbox.dynamicStyleSheetElementSet.add(this.el);
      this.monitorChangesOfStyle();
    } else if (this.is("link")) {
      parentNode = this.findParentNodeInApp(context, "head");
      if (this.el.rel === "stylesheet" && this.el.href) {
        convertedNode = this.addDynamicLinkNode((styleNode) => {
          this.nativeAppend.call(parentNode, styleNode);
        });
      } else {
        convertedNode = this.el;
        this.monitorChangesOfLinkNode();
      }
    }
    if (!this.rootElement.contains(parentNode) && document.contains(parentNode)) {
      if (parentNode !== this.rootElement) {
        this.sandbox.deferClearEffects.add(() => {
          this.DOMApis.removeElement(this.el);
          return this.el;
        });
      }
    }
    if (this.el && this.el.querySelectorAll) {
      const needFixDom = this.el.querySelectorAll("iframe,img,video,link,script,audio,style");
      if (needFixDom.length > 0) {
        needFixDom.forEach((dom) => {
          (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.safeWrapper)(() => this.fixResourceNodeUrl(dom));
        });
      }
    }
    if (this.is("iframe") && typeof this.el.onload === "function") {
      const { el, sandbox } = this;
      const originOnload = el.onload;
      el.onload = function() {
        (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.safeWrapper)(() => (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.def)(el.contentWindow, "parent", sandbox.global));
        return originOnload.apply(this, arguments);
      };
    }
    if (convertedNode) {
      if (isInsertMethod(this.methodName) && this.rootElement.contains(context) && ((_a = args[1]) == null ? void 0 : _a.parentNode) === context) {
        return originProcess();
      }
      this.sandbox.hooks.lifecycle.appendNode.emit(parentNode, this.el, convertedNode, this.tagName);
      return this.nativeAppend.call(parentNode, convertedNode);
    }
    return originProcess();
  }
  removeChild(context, originProcess) {
    if (typeof this.el[_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.__REMOVE_NODE__] === "function") {
      this.el[_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.__REMOVE_NODE__]();
      return this.el;
    }
    if (this.is("style") || this.is("link") || this.is("script")) {
      const parentNode = this.findParentNodeInApp(context, this.is("script") ? "body" : "head");
      if (this.el.parentNode === parentNode) {
        if (this.sandbox.dynamicStyleSheetElementSet.has(this.el)) {
          this.sandbox.dynamicStyleSheetElementSet.delete(this.el);
        }
        return this.nativeRemove.call(parentNode, this.el);
      }
    }
    return originProcess();
  }
  getRealSheet() {
    return Reflect.get(HTMLStyleElement.prototype, "sheet", this.el);
  }
  createFakeSheet(styleTransformer) {
    const processor = this;
    const rulesData = [];
    this.sandbox.styledComponentCSSRulesMap.set(this.el, rulesData);
    const fakeSheet = {
      get cssRules() {
        var _a;
        const realSheet = processor.getRealSheet();
        return (_a = realSheet == null ? void 0 : realSheet.cssRules) != null ? _a : [];
      },
      insertRule(rule, index) {
        const realSheet = processor.getRealSheet();
        const transformed = styleTransformer(rule);
        if (realSheet) {
          realSheet.insertRule(transformed, index);
        }
        rulesData.splice(index || 0, 0, transformed);
        return index || 0;
      },
      deleteRule(index) {
        const realSheet = processor.getRealSheet();
        if (realSheet) {
          realSheet.deleteRule(index);
        }
        rulesData.splice(index, 1);
      }
    };
    return fakeSheet;
  }
};
var DynamicNodeProcessor = _DynamicNodeProcessor;
DynamicNodeProcessor.linkLock = new LockQueue();

// src/dynamicNode/index.ts
var mountElementMethods = [
  "append",
  "appendChild",
  "insertBefore",
  "insertAdjacentElement"
];
var removeChildElementMethods = ["removeChild"];
var ignoreElementTimingTags = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.makeMap)([
  "STYLE",
  "SCRIPTS",
  "LINK",
  "META",
  "TITLE"
]);
function injector(current, methodName) {
  return function() {
    var _a;
    const el = methodName === "insertAdjacentElement" ? arguments[1] : arguments[0];
    const sandbox = sandboxMap.get(el);
    const originProcess = () => current.apply(this, arguments);
    (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.safeWrapper)(() => {
      if (ignoreElementTimingTags(el.tagName))
        return;
      if ((el == null ? void 0 : el.setAttribute) && typeof (el == null ? void 0 : el.setAttribute) === "function" && !(el == null ? void 0 : el.getAttribute("elementtiming")) && sandbox && sandbox.options.disableElementtiming !== true) {
        el == null ? void 0 : el.setAttribute("elementtiming", sandbox ? `${sandbox.options.namespace}-element-timing` : "element-timing");
      }
    });
    if (sandbox) {
      if (el && ((_a = this == null ? void 0 : this.tagName) == null ? void 0 : _a.toLowerCase()) === "style") {
        const manager = new sandbox.loader.StyleManager(el.textContent);
        const { baseUrl, namespace, styleScopeId } = sandbox.options;
        manager.correctPath(baseUrl);
        manager.setScope({
          appName: namespace,
          rootElId: styleScopeId()
        });
        el.textContent = manager.transformCode(manager.styleCode);
        return originProcess();
      } else {
        const processor = new DynamicNodeProcessor(el, sandbox, methodName);
        return processor.append(this, arguments, originProcess);
      }
    } else {
      return originProcess();
    }
  };
}
function injectorRemoveChild(current, methodName) {
  return function() {
    const el = arguments[0];
    const sandbox = el && sandboxMap.get(el);
    const originProcess = () => {
      return current.apply(this, arguments);
    };
    if (sandbox) {
      const processor = new DynamicNodeProcessor(el, sandbox, methodName);
      return processor.removeChild(this, originProcess);
    }
    return originProcess();
  };
}
function handleOwnerDocument() {
  Object.defineProperty(window.Element.prototype, "ownerDocument", {
    get() {
      const sandbox = this && sandboxMap.get(this);
      const realValue = Reflect.get(window.Node.prototype, "ownerDocument", this);
      return sandbox ? sandbox.global.document : realValue;
    },
    set() {
      (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.warn)('"ownerDocument" is a read-only attribute.');
    }
  });
}
function makeElInjector(sandboxConfig) {
  if (makeElInjector.hasInject)
    return;
  makeElInjector.hasInject = true;
  if (typeof window.Element === "function") {
    if (sandboxConfig.fixBaseUrl)
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.safeWrapper)(() => handleOwnerDocument());
    const rewrite = (methods, builder) => {
      for (const name of methods) {
        const fn = window.Element.prototype[name];
        if (typeof fn !== "function" || fn[__domWrapper__]) {
          continue;
        }
        rawElementMethods[name] = fn;
        const wrapper = builder(fn, name);
        wrapper[__domWrapper__] = true;
        window.Element.prototype[name] = wrapper;
      }
    };
    rewrite(mountElementMethods, injector);
    rewrite(removeChildElementMethods, injectorRemoveChild);
  }
  injectHandlerParams();
}
function rebuildCSSRules(dynamicStyleSheetElementSet, styledComponentCSSRulesMap) {
  dynamicStyleSheetElementSet.forEach((styleElement) => {
    const rules = styledComponentCSSRulesMap.get(styleElement);
    if (rules && (isStyledComponentsLike(styleElement) || rules.length)) {
      const realSheet = Reflect.get(HTMLStyleElement.prototype, "sheet", styleElement);
      if (realSheet) {
        for (let i = 0; i < rules.length; i++) {
          const cssRule = rules[i];
          realSheet.insertRule(cssRule, i);
        }
      }
    }
  });
}

// src/lifecycle.ts

function sandboxLifecycle() {
  return new _garfish_hooks__WEBPACK_IMPORTED_MODULE_2__.PluginSystem({
    closed: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_2__.SyncHook(),
    stared: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_2__.SyncHook(),
    appendNode: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_2__.SyncHook(),
    documentGetter: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_2__.SyncWaterfallHook("documentGetter"),
    beforeClearEffect: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_2__.SyncHook(),
    afterClearEffect: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_2__.SyncHook(),
    beforeInvoke: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_2__.SyncHook(),
    afterInvoke: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_2__.SyncHook(),
    invokeError: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_2__.SyncHook()
  });
}

// src/proxyInterceptor/global.ts

function createGetter2(sandbox) {
  return (target, p, receiver) => {
    if (p === Symbol.unscopables)
      return void 0;
    let value;
    const { overrideList } = sandbox.replaceGlobalVariables;
    if (sandbox.isProtectVariable(p)) {
      return Reflect.get(window, p);
    } else if (sandbox.isInsulationVariable(p)) {
      value = Reflect.get(target, p, receiver);
    } else {
      value = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(target, p) ? Reflect.get(target, p, receiver) : Reflect.get(window, p);
    }
    if (typeof value === "function") {
      if (isEsGlobalMethods(p) || isNativeCodeMethods(p) || (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(overrideList, p) || isConstructor(value) || sandbox.isExternalGlobalVariable.has(p)) {
        return value;
      }
    } else {
      return value;
    }
    const newValue = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(value, __windowBind__) ? value[__windowBind__] : bind(value, window);
    const verifyResult = verifyGetterDescriptor(target, p, newValue);
    if (verifyResult > 0) {
      if (verifyResult === 1)
        return value;
      if (verifyResult === 2)
        return void 0;
    }
    value[__windowBind__] = newValue;
    return newValue;
  };
}
var safariProxyWindowDealHandler = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.safari13Deal)();
function createSetter2(sandbox) {
  return (target, p, value, receiver) => {
    const verifyResult = verifySetterDescriptor(sandbox.isProtectVariable(p) ? window : receiver ? receiver : target, p, value);
    if (verifyResult > 0) {
      if (verifyResult === 1 || verifyResult === 2)
        return false;
      if (verifyResult === 3)
        return true;
    }
    if (sandbox.isProtectVariable(p)) {
      return Reflect.set(window, p, value);
    } else {
      safariProxyWindowDealHandler.triggerSet();
      const success = Reflect.set(target, p, value, receiver);
      if (success) {
        if (sandbox.initComplete) {
          sandbox.isExternalGlobalVariable.add(p);
        }
        if (sandbox.global) {
          const methods = sandbox.global[`${GARFISH_OPTIMIZE_NAME}Methods`];
          if (Array.isArray(methods)) {
            if (methods.includes(p)) {
              const updateStack = sandbox.global[`${GARFISH_OPTIMIZE_NAME}UpdateStack`];
              updateStack.forEach((fn) => fn(p, value));
            }
          }
        }
      }
      return success;
    }
  };
}
function createDefineProperty2(sandbox) {
  return (target, p, descriptor) => {
    safariProxyWindowDealHandler.handleDescriptor(descriptor);
    if (sandbox.isProtectVariable(p)) {
      return Reflect.defineProperty(window, p, descriptor);
    } else {
      const success = Reflect.defineProperty(target, p, descriptor);
      if (sandbox.initComplete && success) {
        sandbox.isExternalGlobalVariable.add(p);
      }
      return success;
    }
  };
}
function createDeleteProperty(sandbox) {
  return (target, p) => {
    if ((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(target, p)) {
      delete target[p];
      if (sandbox.initComplete && sandbox.isExternalGlobalVariable.has(p)) {
        sandbox.isExternalGlobalVariable.delete(p);
      }
    } else if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
      if ((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(window, p) && sandbox.isProtectVariable(p)) {
        (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.warn)(`The "${String(p)}" is global protect variable."`);
      }
    }
    return true;
  };
}
function createHas2(sandbox) {
  return (_target, p) => {
    if (sandbox.isProtectVariable(p))
      return false;
    if (sandbox.envVariable === p)
      return false;
    return true;
  };
}

// src/sandbox.ts
var id = 0;
var defaultModules = [
  networkModule,
  timeoutModule,
  intervalModule,
  historyModule,
  documentModule,
  listenerModule,
  observerModule,
  UiEventOverride,
  localStorageModule
];
var isModule = (module) => {
  return (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(module) ? module[__garfishGlobal__] !== void 0 : false;
};
var addProxyWindowType = (module, parentModule) => {
  if (!isModule(module)) {
    module[__garfishGlobal__] = parentModule;
  }
  return module;
};
var Sandbox = class {
  constructor(options) {
    this.id = id++;
    this.type = "vm";
    this.closed = true;
    this.initComplete = false;
    this.version = "1.16.2";
    this.hooks = sandboxLifecycle();
    this.deferClearEffects = /* @__PURE__ */ new Set();
    this.isExternalGlobalVariable = /* @__PURE__ */ new Set();
    this.dynamicStyleSheetElementSet = /* @__PURE__ */ new Set();
    this.styledComponentCSSRulesMap = /* @__PURE__ */ new WeakMap();
    this.optimizeCode = "";
    this.envVariable = "__GARFISH_SANDBOX_ENV_VAR__";
    const defaultOptions = {
      baseUrl: "",
      namespace: "",
      modules: [],
      fixBaseUrl: false,
      fixStaticResourceBaseUrl: true,
      disableWith: false,
      strictIsolation: false,
      el: () => null,
      styleScopeId: () => "",
      protectVariable: () => [],
      insulationVariable: () => []
    };
    this.options = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(options) ? (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.deepMerge)(defaultOptions, options) : defaultOptions;
    const { loaderOptions, protectVariable, insulationVariable } = this.options;
    this.loader = new _garfish_loader__WEBPACK_IMPORTED_MODULE_1__.Loader(loaderOptions);
    this.isProtectVariable = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.makeMap)((protectVariable == null ? void 0 : protectVariable()) || []);
    this.isInsulationVariable = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.makeMap)((insulationVariable == null ? void 0 : insulationVariable()) || []);
    this.replaceGlobalVariables = {
      createdList: [],
      prepareList: [],
      recoverList: [],
      overrideList: {}
    };
    makeElInjector(this.options);
    this.start();
    sandboxMap.set(this);
  }
  start() {
    this.closed = false;
    this.replaceGlobalVariables = this.getModuleData();
    const { createdList, overrideList } = this.replaceGlobalVariables;
    this.global = this.createProxyWindow(Object.keys(overrideList));
    if (overrideList && this.global) {
      for (const key in overrideList) {
        this.global[key] = overrideList[key];
      }
    }
    if (createdList) {
      createdList.forEach((fn) => fn && fn(this.global));
    }
    if (!this.options.disableWith) {
      this.optimizeCode = this.optimizeGlobalMethod();
    }
    this.initComplete = true;
    this.hooks.lifecycle.stared.emit(this.global);
  }
  close() {
    if (this.closed)
      return;
    this.clearEffects();
    this.closed = true;
    this.global = void 0;
    this.optimizeCode = "";
    this.initComplete = false;
    this.deferClearEffects.clear();
    this.isExternalGlobalVariable.clear();
    this.dynamicStyleSheetElementSet.clear();
    this.replaceGlobalVariables.createdList = [];
    this.replaceGlobalVariables.prepareList = [];
    this.replaceGlobalVariables.recoverList = [];
    this.replaceGlobalVariables.overrideList = [];
    this.hooks.lifecycle.closed.emit();
  }
  reset() {
    this.close();
    this.start();
  }
  createProxyWindow(moduleKeys = []) {
    const fakeWindow = createFakeObject(window, this.isInsulationVariable, (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.makeMap)(moduleKeys));
    const baseHandlers = {
      get: createGetter2(this),
      set: createSetter2(this),
      defineProperty: createDefineProperty2(this),
      deleteProperty: createDeleteProperty(this),
      getPrototypeOf() {
        return Object.getPrototypeOf(window);
      }
    };
    const parentHandlers = __spreadProps(__spreadValues({}, baseHandlers), {
      has: createHas2(this),
      getPrototypeOf() {
        return Object.getPrototypeOf(window);
      }
    });
    const proxy = new Proxy(fakeWindow, parentHandlers);
    const subProxy = new Proxy(fakeWindow, baseHandlers);
    proxy.self = subProxy;
    proxy.window = subProxy;
    proxy.globalThis = subProxy;
    proxy.__debug_sandbox__ = this;
    (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.safeWrapper)(() => {
      proxy.top = window.top === window ? subProxy : window.top;
      proxy.parent = window.parent === window ? subProxy : window.parent;
    });
    addProxyWindowType(proxy, window);
    return proxy;
  }
  getModuleData() {
    var _a;
    const recoverList = [];
    const createdList = [];
    const prepareList = [];
    const overrideList = {};
    const allModules = defaultModules.concat((_a = this.options.modules) != null ? _a : []);
    for (const module of allModules) {
      if (typeof module === "function") {
        const { recover, override, created, prepare } = module(this) || {};
        if (recover)
          recoverList.push(recover);
        if (created)
          createdList.push(created);
        if (prepare)
          prepareList.push(prepare);
        if (override) {
          for (const key in override) {
            if ((typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) && overrideList[key]) {
              (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.warn)(`"${key}" global variables are overwritten.`);
            }
            overrideList[key] = override[key];
          }
        }
      }
    }
    return { recoverList, createdList, overrideList, prepareList };
  }
  clearEffects() {
    this.hooks.lifecycle.beforeClearEffect.emit();
    this.replaceGlobalVariables.recoverList.forEach((fn) => fn && fn());
    this.deferClearEffects.forEach((fn) => fn && fn());
    this.hooks.lifecycle.afterClearEffect.emit();
  }
  optimizeGlobalMethod(tempEnvKeys = []) {
    let code = "";
    const methods = optimizeMethods.filter((p) => {
      return p && !this.isProtectVariable(p) && !tempEnvKeys.includes(p) && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(this.global, p);
    });
    if (methods.length > 0) {
      code = methods.reduce((prevCode, name) => {
        return `${prevCode} let ${name} = window.${name};`;
      }, code);
      if (this.global) {
        this.global[`${GARFISH_OPTIMIZE_NAME}Methods`] = methods;
        this.global[`${GARFISH_OPTIMIZE_NAME}UpdateStack`] = [];
      }
      code += `window.${GARFISH_OPTIMIZE_NAME}UpdateStack.push(function(k,v){eval(k+"=v")});`;
    }
    if (tempEnvKeys.length > 0) {
      code = tempEnvKeys.reduce((prevCode, name) => {
        return `${prevCode} let ${name} = ${this.envVariable}.${name};`;
      }, code);
    }
    return code;
  }
  createExecParams(codeRef, env) {
    const { disableWith } = this.options;
    const { prepareList, overrideList } = this.replaceGlobalVariables;
    if (prepareList) {
      prepareList.forEach((fn) => fn && fn());
    }
    const params = __spreadValues({
      window: this.global
    }, overrideList);
    if (disableWith) {
      Object.assign(params, env);
    } else {
      const envKeys = Object.keys(env);
      const optimizeCode = envKeys.length > 0 ? this.optimizeGlobalMethod(envKeys) : this.optimizeCode;
      codeRef.code = `with(window) {;${optimizeCode + codeRef.code}
}`;
      params[this.envVariable] = env;
    }
    return params;
  }
  processExecError(e, url, env, options) {
    this.hooks.lifecycle.invokeError.emit(e, url, env, options);
    if (this.global && typeof this.global.onerror === "function") {
      const source = url || this.options.baseUrl;
      const message = e instanceof Error ? e.message : String(e);
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.safeWrapper)(() => {
        var _a, _b;
        (_b = (_a = this.global) == null ? void 0 : _a.onerror) == null ? void 0 : _b.call(this.global, message, source, null, null, e);
      });
    }
    throw e;
  }
  execScript(code, env = {}, url = "", options) {
    var _a;
    const codeRef = { code };
    const { async, defer } = options || {};
    this.hooks.lifecycle.beforeInvoke.emit(codeRef, url, env, options);
    const revertCurrentScript = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.setDocCurrentScript)((_a = this.global) == null ? void 0 : _a.document, codeRef.code, false, url, async, defer, options == null ? void 0 : options.originScript);
    try {
      const params = this.createExecParams(codeRef, env);
      codeRef.code += `
${url ? `//# sourceURL=${url}
` : ""}`;
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.evalWithEnv)(codeRef.code, params, this.global);
    } catch (e) {
      this.processExecError(e, url, env, options);
    } finally {
      Promise.resolve().then(revertCurrentScript);
    }
    this.hooks.lifecycle.afterInvoke.emit(codeRef, url, env, options);
  }
  static getNativeWindow() {
    let module = window;
    while (isModule(module)) {
      module = module[__garfishGlobal__];
    }
    return module;
  }
  static canSupport() {
    let support = true;
    if (!window.Proxy || !Array.prototype.includes || !String.prototype.includes) {
      support = false;
    }
    if (support) {
      try {
        new Function("let a = 666;");
      } catch (e) {
        support = false;
      }
    }
    if (!support) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.warn)('The current environment does not support "vm sandbox",Please use the "snapshot sandbox" instead.');
    }
    return support;
  }
};

// src/pluginify.ts
var specialExternalVariables = [
  "onerror",
  "webpackjsonp",
  "__REACT_ERROR_OVERLAY_GLOBAL_HOOK__",
  (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) ? "webpackHotUpdate" : ""
];
function compatibleOldModule(modules) {
  if (!Array.isArray(modules)) {
    (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.warn)('"vm sandbox" modules should be an array');
    const list = [];
    for (const key in modules) {
      list.push(modules[key]);
    }
    modules = list;
  }
  return modules;
}
function rewriteAppAndSandbox(Garfish, app, sandbox) {
  var _a;
  const originExecScript = sandbox.execScript;
  sandbox.loader = Garfish.loader;
  sandbox.execScript = (code, env, url, options) => {
    const evalHooksArgs = [app.appInfo, code, env, url, options];
    app.hooks.lifecycle.beforeEval.emit(...evalHooksArgs);
    try {
      const res = originExecScript.call(sandbox, code, __spreadValues(__spreadValues({}, env), app.getExecScriptEnv(options == null ? void 0 : options.noEntry)), url, options);
      app.hooks.lifecycle.afterEval.emit(...evalHooksArgs);
      return res;
    } catch (err) {
      app.hooks.lifecycle.errorExecCode.emit(err, ...evalHooksArgs);
      throw err;
    }
  };
  app.vmSandbox = sandbox;
  app.global = sandbox.global;
  app.strictIsolation = (_a = sandbox.options.strictIsolation) != null ? _a : false;
  app.runCode = function() {
    return originExecScript.apply(sandbox, arguments);
  };
  if (app.entryManager.DOMApis && sandbox.global) {
    app.entryManager.DOMApis.document = sandbox.global.document;
  }
}
function createOptions(Garfish) {
  const canSupport = Sandbox.canSupport();
  const options = {
    name: "browser-vm",
    version: "1.16.2",
    afterLoad(appInfo, appInstance) {
      var _a, _b, _c, _d, _e, _f;
      if (!canSupport || !appInstance || (appInstance == null ? void 0 : appInstance.vmSandbox) || appInfo.sandbox === false || appInfo.sandbox && appInfo.sandbox.open === false || appInfo.sandbox && appInfo.sandbox.snapshot) {
        if (appInstance == null ? void 0 : appInstance.vmSandbox) {
          appInstance.global = appInstance.vmSandbox.global;
        }
        return;
      }
      rewriteAppAndSandbox(Garfish, appInstance, new Sandbox({
        namespace: appInfo.name,
        addSourceList: appInstance.addSourceList.bind(appInstance),
        baseUrl: appInstance.entryManager.url,
        modules: compatibleOldModule(((_a = appInfo.sandbox) == null ? void 0 : _a.modules) || []),
        fixBaseUrl: Boolean((_b = appInfo.sandbox) == null ? void 0 : _b.fixBaseUrl),
        fixStaticResourceBaseUrl: Boolean((_c = appInfo.sandbox) == null ? void 0 : _c.fixStaticResourceBaseUrl),
        disableWith: Boolean((_d = appInfo.sandbox) == null ? void 0 : _d.disableWith),
        disableElementtiming: Boolean((_e = appInfo.sandbox) == null ? void 0 : _e.disableElementtiming),
        strictIsolation: Boolean((_f = appInfo.sandbox) == null ? void 0 : _f.strictIsolation),
        el: () => appInstance.htmlNode,
        styleScopeId: () => appInstance.appContainer.id,
        protectVariable: () => appInfo.protectVariable || [],
        insulationVariable: () => {
          return [
            ...specialExternalVariables,
            ...appInfo.insulationVariable || []
          ].filter(Boolean);
        }
      }));
    },
    afterUnmount(appInfo, appInstance, isCacheMode) {
      if (appInstance.vmSandbox && !isCacheMode) {
        appInstance.vmSandbox.reset();
      }
    },
    afterMount(appInfo, appInstance) {
      if (appInstance.vmSandbox) {
        rebuildCSSRules(appInstance.vmSandbox.dynamicStyleSheetElementSet, appInstance.vmSandbox.styledComponentCSSRulesMap);
        appInstance.vmSandbox.execScript(`
          if (typeof window.onload === 'function') {
            window.onload.call(window);
          }
        `);
      }
    }
  };
  return options;
}
function GarfishBrowserVm() {
  return function(Garfish) {
    Garfish.getGlobalObject = function() {
      return Sandbox.getNativeWindow();
    };
    Garfish.setGlobalValue = function(key, value) {
      return this.getGlobalObject()[key] = value;
    };
    Garfish.clearEscapeEffect = function(key, value) {
      const global = this.getGlobalObject();
      if (key in global) {
        global[key] = value;
      }
    };
    return createOptions(Garfish);
  };
}



/***/ }),

/***/ "./node_modules/.pnpm/@garfish+core@1.16.2/node_modules/@garfish/core/dist/esm/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@garfish+core@1.16.2/node_modules/@garfish/core/dist/esm/index.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ Garfish; }
/* harmony export */ });
/* harmony import */ var _garfish_loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @garfish/loader */ "./node_modules/.pnpm/@garfish+loader@1.16.2/node_modules/@garfish/loader/dist/esm/index.js");
/* harmony import */ var eventemitter2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eventemitter2 */ "./node_modules/.pnpm/eventemitter2@6.4.9/node_modules/eventemitter2/lib/eventemitter2.js");
/* harmony import */ var eventemitter2__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(eventemitter2__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _garfish_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @garfish/utils */ "./node_modules/.pnpm/@garfish+utils@1.16.2/node_modules/@garfish/utils/dist/esm/index.js");
/* harmony import */ var _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @garfish/hooks */ "./node_modules/.pnpm/@garfish+hooks@1.16.2/node_modules/@garfish/hooks/dist/esm/index.js");
/* harmony import */ var _alioth_org_es_module_lexer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @alioth-org/es-module-lexer */ "./node_modules/.pnpm/@alioth-org+es-module-lexer@1.1.0/node_modules/@alioth-org/es-module-lexer/dist/lexer.js");
/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};

// src/garfish.ts





// src/config.ts

var filterAppConfigKeys = {
  beforeBootstrap: true,
  bootstrap: true,
  beforeRegisterApp: true,
  registerApp: true,
  beforeLoad: true,
  afterLoad: true,
  errorLoadApp: true,
  appID: true,
  apps: true,
  disableStatistics: true,
  disablePreloadApp: true,
  plugins: true,
  autoRefreshApp: true,
  onNotMatchRouter: true,
  loader: true
};
var deepMergeConfig = (globalConfig, localConfig) => {
  const _a = globalConfig, { props: globalProps } = _a, newGlobalConfig = __objRest(_a, ["props"]);
  const _b = localConfig, { props: localProps } = _b, newLocalConfig = __objRest(_b, ["props"]);
  const props = __spreadValues(__spreadValues({}, globalProps || {}), localProps || {});
  const result = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.deepMerge)((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.filterUndefinedVal)(newGlobalConfig), (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.filterUndefinedVal)(newLocalConfig));
  return __spreadProps(__spreadValues({}, result), {
    props
  });
};
var getAppConfig = (globalConfig, localConfig) => {
  const mergeResult = deepMergeConfig(globalConfig, localConfig);
  Object.keys(mergeResult).forEach((key) => {
    if (filterAppConfigKeys[key]) {
      delete mergeResult[key];
    }
  });
  return mergeResult;
};
var generateAppOptions = (appName, garfish, options) => {
  let appInfo = garfish.appInfos[appName] || { name: appName };
  appInfo = getAppConfig(garfish.options, __spreadProps(__spreadValues(__spreadValues({}, appInfo), options), {
    props: __spreadValues(__spreadValues({}, appInfo.props || {}), (options == null ? void 0 : options.props) || {})
  }));
  return appInfo;
};
var createDefaultOptions = () => {
  const config = {
    appID: "",
    apps: [],
    autoRefreshApp: true,
    disableStatistics: false,
    disablePreloadApp: false,
    basename: "/",
    props: {},
    asyncProviderTimeout: 2e3,
    domGetter: () => document.createElement("div"),
    sandbox: {
      snapshot: false,
      fixBaseUrl: false,
      fixStaticResourceBaseUrl: true,
      disableWith: false,
      strictIsolation: false,
      disableElementtiming: false
    },
    beforeLoad: () => {
    },
    afterLoad: () => {
    },
    errorLoadApp: (e) => (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.error)(e),
    onNotMatchRouter: () => {
    },
    beforeEval: () => {
    },
    afterEval: () => {
    },
    beforeMount: () => {
    },
    afterMount: () => {
    },
    beforeUnmount: () => {
    },
    afterUnmount: () => {
    },
    errorMountApp: (e) => (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.error)(e),
    errorUnmountApp: (e) => (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.error)(e),
    customLoader: void 0
  };
  return config;
};

// src/module/app.ts


// src/lifecycle.ts

function globalLifecycle() {
  return new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.PluginSystem({
    beforeBootstrap: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.SyncHook(),
    bootstrap: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.SyncHook(),
    beforeRegisterApp: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.SyncHook(),
    registerApp: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.SyncHook(),
    beforeLoad: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.AsyncHook(),
    afterLoad: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.AsyncHook(),
    errorLoadApp: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.SyncHook()
  });
}
function appLifecycle() {
  return new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.PluginSystem({
    beforeEval: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.SyncHook(),
    afterEval: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.SyncHook(),
    beforeMount: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.SyncHook(),
    afterMount: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.SyncHook(),
    errorMountApp: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.SyncHook(),
    beforeUnmount: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.SyncHook(),
    afterUnmount: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.SyncHook(),
    errorUnmountApp: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.SyncHook(),
    errorExecCode: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.SyncHook(),
    customRender: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.SyncWaterfallHook("customRender")
  });
}

// src/module/esModule.ts



var __GARFISH_ESM_ENV__ = "__GARFISH_ESM_ENV__";
var getModuleImportProcessor = (code) => {
  let finalCode = "";
  let resetCode = code;
  let prevCodeIndex = 0;
  const rawImport = "import";
  const wrapImport = "_import_";
  return (importAnalysis, newModuleName = "") => {
    const { d: importType, n: moduleName, s, e, ss, se } = importAnalysis;
    const isDynamicImport = importType > -1;
    if (isDynamicImport) {
      const codeStart = ss - prevCodeIndex;
      const codeEnd = se - prevCodeIndex;
      const dynamicImportStatement = resetCode.slice(codeStart, codeEnd);
      finalCode += resetCode.slice(0, codeStart);
      finalCode += dynamicImportStatement.replace(rawImport, wrapImport);
      resetCode = resetCode.slice(codeEnd);
      prevCodeIndex = se;
    } else if (moduleName) {
      const codeStart = s - prevCodeIndex;
      const codeEnd = e - prevCodeIndex;
      finalCode += resetCode.slice(0, codeStart);
      finalCode += newModuleName;
      resetCode = resetCode.slice(codeEnd);
      prevCodeIndex = e;
    }
    return [finalCode, resetCode];
  };
};
var genShellExecutionCode = (id, sourceModuleName, shellUrl) => `;import*as m$$_${id} from'${sourceModuleName}';import{u$$_ as u$$_${id}}from'${shellUrl}';u$$_${id}(m$$_${id})`;
var ESModuleLoader = class {
  constructor(app) {
    this.moduleCache = {};
    this.lock = new _garfish_utils__WEBPACK_IMPORTED_MODULE_2__.Lock();
    this.app = app;
    this.globalVarKey = `${__GARFISH_ESM_ENV__}_${this.app.appId}`;
  }
  execModuleCode(blobUrl) {
    const result = (0, eval)(`import('${blobUrl}')`);
    this.lock.release();
    return result;
  }
  createBlobUrl(code) {
    return URL.createObjectURL(new Blob([code], { type: "text/javascript" }));
  }
  setBlobUrl(saveId, blobUrl) {
    this.moduleCache[saveId].blobUrl = blobUrl;
  }
  async fetchModuleResource(lockId, envVarStr, noEntryEnvVarStr, saveUrl, requestUrl) {
    const { resourceManager } = await this.app.context.loader.load({
      scope: this.app.name,
      url: requestUrl
    });
    if (resourceManager) {
      let sourcemap = "";
      let { url, scriptCode } = resourceManager;
      if (!(0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.haveSourcemap)(scriptCode)) {
        sourcemap = await (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.createSourcemap)(scriptCode, requestUrl);
      }
      scriptCode = await this.analysisModule(lockId, scriptCode, envVarStr, noEntryEnvVarStr, saveUrl, url);
      const blobUrl = this.createBlobUrl(`import.meta.url='${url}';${this.app.isNoEntryScript(url) ? noEntryEnvVarStr : envVarStr}${scriptCode}
${sourcemap}`);
      this.setBlobUrl(saveUrl, blobUrl);
    }
  }
  getUrl(referUrl, targetUrl) {
    return !(0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.isAbsolute)(targetUrl) && referUrl ? (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.transformUrl)(referUrl, targetUrl) : targetUrl;
  }
  preloadStaticModuleAsync(analysis, realUrl) {
    const [imports] = analysis;
    for (let i = 0, length = imports.length; i < length; i++) {
      const importAnalysis = imports[i];
      const { d: importType, n: moduleName } = importAnalysis;
      const isDynamicImport = importType > -1;
      if (moduleName && !isDynamicImport) {
        this.app.context.loader.load({
          scope: this.app.name,
          url: this.getUrl(realUrl, moduleName)
        });
      }
    }
  }
  async analysisModule(lockId, code, envVarStr, noEntryEnvVarStr, baseUrl, realUrl) {
    await this.lock.wait(lockId);
    await (0,_alioth_org_es_module_lexer__WEBPACK_IMPORTED_MODULE_4__.init)();
    const analysis = (0,_alioth_org_es_module_lexer__WEBPACK_IMPORTED_MODULE_4__.parse)(code, realUrl || "");
    const thisModule = {
      analysis,
      source: code
    };
    if (baseUrl) {
      this.moduleCache[baseUrl] = thisModule;
    }
    let result = ["", code];
    let shellExecutionCode = "";
    const dynamicImport = `var _import_=(url)=>window.${this.globalVarKey}.import(url,'${baseUrl}','${realUrl}');`;
    const processImportModule = getModuleImportProcessor(code);
    const [imports] = analysis;
    this.preloadStaticModuleAsync(analysis, realUrl);
    for (let i = 0, length = imports.length; i < length; i++) {
      const importAnalysis = imports[i];
      const { d: importType, n: moduleName } = importAnalysis;
      const isDynamicImport = importType > -1;
      let saveUrl = moduleName || "";
      let newModuleName = "";
      if (moduleName && !isDynamicImport) {
        const requestUrl = this.getUrl(realUrl, moduleName);
        saveUrl = this.getUrl(baseUrl, moduleName);
        let currentModule = this.moduleCache[saveUrl];
        if (currentModule && !currentModule.blobUrl) {
          if (!currentModule.shellUrl) {
            const [currentModuleImports, currentModuleExports] = currentModule.analysis;
            const wildcardExports = currentModuleImports.filter((importItem) => {
              const statement = currentModule.source.substring(importItem.ss, importItem.se);
              return /^export\s*\*\s*from\s*/.test(statement);
            });
            const wildcardExportStatements = [];
            for (let j = 0, l = wildcardExports.length; j < l; j++) {
              const wildcardExport = wildcardExports[j];
              const wildcardExportUrl = wildcardExport.n || "";
              const wildcardExportSaveUrl = this.getUrl(baseUrl, wildcardExportUrl);
              await this.fetchModuleResource(lockId, envVarStr, noEntryEnvVarStr, wildcardExportSaveUrl, this.getUrl(realUrl, wildcardExportUrl));
              const wildcardModule = this.moduleCache[wildcardExportSaveUrl];
              if (wildcardModule == null ? void 0 : wildcardModule.blobUrl) {
                wildcardExportStatements.push(`export * from '${wildcardModule.blobUrl}'`);
              }
            }
            currentModule.shellUrl = this.createBlobUrl(`export function u$$_(m){${currentModuleExports.map((exportSpecifier) => exportSpecifier.n === "default" ? "d$$_=m.default" : `${exportSpecifier.n}=m.${exportSpecifier.n}`).join(",")}}${currentModuleExports.map((exportSpecifier) => exportSpecifier.n === "default" ? "let d$$_;export{d$$_ as default}" : `export let ${exportSpecifier.n}`).join(";")}${wildcardExportStatements.length ? `;${wildcardExportStatements.join(";")}` : ""}
//# sourceURL=${saveUrl}?cycle`);
          }
          newModuleName = currentModule.shellUrl;
        } else if (!currentModule) {
          await this.fetchModuleResource(lockId, envVarStr, noEntryEnvVarStr, saveUrl, requestUrl);
          currentModule = this.moduleCache[saveUrl];
          const { blobUrl, shellUrl, shellExecuted } = currentModule;
          newModuleName = blobUrl;
          if (shellUrl && !shellExecuted) {
            shellExecutionCode += genShellExecutionCode(i, newModuleName, shellUrl);
            currentModule.shellExecuted = true;
          }
        } else {
          newModuleName = currentModule.blobUrl;
        }
      }
      result = processImportModule(importAnalysis, newModuleName || moduleName);
    }
    thisModule.source = "";
    delete thisModule.analysis;
    return `${dynamicImport}${shellExecutionCode};${result.join("")}`;
  }
  destroy() {
    for (const key in this.moduleCache) {
      const { blobUrl, shellUrl } = this.moduleCache[key];
      if (blobUrl) {
        URL.revokeObjectURL(blobUrl);
      }
      if (shellUrl) {
        URL.revokeObjectURL(shellUrl);
      }
    }
    this.moduleCache = {};
    this.lock.clear();
    delete this.app.global[this.globalVarKey];
  }
  load(code, env, url, options) {
    return new Promise(async (resolve) => {
      if (url && this.moduleCache[url]) {
        return resolve();
      }
      const genShellCodeWrapper = (blobUrl2, shellUrl, sourceUrl) => {
        return `export * from '${blobUrl2}'${genShellExecutionCode(0, blobUrl2, shellUrl)}
//# sourceURL=${sourceUrl}?cycle`;
      };
      env = __spreadProps(__spreadValues({}, env), {
        resolve,
        import: async (moduleId, baseUrl, realUrl) => {
          let saveUrl = moduleId;
          let requestUrl = moduleId;
          if (!(0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.isAbsolute)(moduleId)) {
            saveUrl = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.transformUrl)(baseUrl, moduleId);
            requestUrl = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.transformUrl)(realUrl, moduleId);
          }
          let targetModule = this.moduleCache[saveUrl];
          if (!(targetModule == null ? void 0 : targetModule.blobUrl)) {
            await this.fetchModuleResource(this.lock.genId(), envVarStr, noEntryEnvVarStr, saveUrl, requestUrl);
            targetModule = this.moduleCache[saveUrl];
          }
          if (targetModule && targetModule.shellUrl && !targetModule.shellExecuted && targetModule.blobUrl) {
            return this.execModuleCode(this.createBlobUrl(genShellCodeWrapper(targetModule.blobUrl, targetModule.shellUrl, saveUrl)));
          }
          return this.execModuleCode(targetModule.blobUrl);
        }
      });
      const genEnvVarStr = (targetEnv, noEntry) => {
        const newEnv = __spreadValues({}, targetEnv);
        if (noEntry) {
          delete newEnv.exports;
          delete newEnv.module;
        }
        return Object.keys(newEnv).reduce((prevCode, name) => {
          if (name === "resolve" || name === "import")
            return prevCode;
          return `${prevCode} var ${name} = window.${this.globalVarKey}.${name};`;
        }, "");
      };
      const envVarStr = genEnvVarStr(env);
      const noEntryEnvVarStr = genEnvVarStr(env, true);
      let sourcemap = "";
      if (!(0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.haveSourcemap)(code) && url) {
        sourcemap = await (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.createSourcemap)(code, options && options.isInline ? `index.html(inline.${this.app.scriptCount}.js)` : url);
      }
      code = await this.analysisModule(this.lock.genId(), code, envVarStr, noEntryEnvVarStr, url, url);
      code = `import.meta.url='${url}';${(options == null ? void 0 : options.noEntry) ? noEntryEnvVarStr : envVarStr}${code}
;window.${this.globalVarKey}.resolve();
${sourcemap}`;
      this.app.global[this.globalVarKey] = env;
      let blobUrl = this.createBlobUrl(code);
      if (options && !options.isInline && url) {
        this.setBlobUrl(url, blobUrl);
      }
      const currentModule = this.moduleCache[url || ""];
      if ((currentModule == null ? void 0 : currentModule.shellUrl) && !currentModule.shellExecuted) {
        blobUrl = this.createBlobUrl(genShellCodeWrapper(blobUrl, currentModule.shellUrl, url || ""));
      }
      this.execModuleCode(blobUrl);
    });
  }
};

// src/module/app.ts
var appId = 0;
var __GARFISH_GLOBAL_ENV__ = "__GARFISH_GLOBAL_ENV__";
var __GARFISH_EXPORTS__ = "__GARFISH_EXPORTS__";
var App = class {
  constructor(context, appInfo, entryManager, resources, isHtmlMode, customLoader) {
    this.appId = appId++;
    this.scriptCount = 0;
    this.display = false;
    this.mounted = false;
    this.mounting = false;
    this.strictIsolation = false;
    this.esmQueue = new _garfish_utils__WEBPACK_IMPORTED_MODULE_2__.Queue();
    this.esModuleLoader = new ESModuleLoader(this);
    this.global = window;
    this.customExports = {};
    this.sourceList = [];
    this.sourceListMap = /* @__PURE__ */ new Map();
    this.childGarfishConfig = {};
    this.active = false;
    this.unmounting = false;
    this.deferNodeMap = /* @__PURE__ */ new Map();
    var _a;
    this.context = context;
    this.appInfo = appInfo;
    this.name = appInfo.name;
    this.resources = resources;
    this.isHtmlMode = isHtmlMode;
    this.entryManager = entryManager;
    this.appInfo.appId = this.appId;
    this.globalEnvVariables = {
      currentApp: this,
      loader: context.loader,
      externals: context.externals,
      remoteModulesCode: resources.modules
    };
    this.cjsModules = {
      exports: {},
      module: null,
      require: (key) => {
        const pkg = this.global[key] || context.externals[key] || window[key];
        if (!pkg) {
          (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`Package "${key}" is not found`);
        }
        return pkg;
      }
    };
    this.cjsModules.module = this.cjsModules;
    this.customLoader = customLoader;
    this.hooks = appLifecycle();
    this.hooks.usePlugin(__spreadProps(__spreadValues({}, appInfo), {
      name: `${appInfo.name}-lifecycle`
    }));
    const nodes = entryManager.getNodesByTagName(..._garfish_utils__WEBPACK_IMPORTED_MODULE_2__.sourceListTags);
    for (const key in nodes) {
      nodes[key].forEach((node) => {
        var _a2, _b;
        const url = entryManager.findAttributeValue(node, "href") || entryManager.findAttributeValue(node, "src");
        if (url) {
          this.addSourceList({
            tagName: node.tagName,
            url: entryManager.url ? (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.transformUrl)(entryManager.url, url) : url
          });
        }
        if ((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.isGarfishConfigType)({
          type: entryManager.findAttributeValue(node, "type")
        })) {
          this.childGarfishConfig = JSON.parse((_b = (_a2 = node.children) == null ? void 0 : _a2[0]) == null ? void 0 : _b.content);
        }
      });
    }
    this.appInfo.entry && this.addSourceList({ tagName: "html", url: this.appInfo.entry });
    this.asyncProviderTimeout = (_a = this.appInfo.asyncProviderTimeout) != null ? _a : 0;
  }
  get rootElement() {
    return (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.findTarget)(this.htmlNode, [`div[${_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.__MockBody__}]`, "body"]);
  }
  get getSourceList() {
    return this.sourceList;
  }
  addSourceList(sourceInfo) {
    if (this.appInfo.disableSourceListCollect)
      return;
    if (Array.isArray(sourceInfo)) {
      const nSourceList = sourceInfo.filter((item) => {
        const url = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.getSourceURL)(item.url);
        if (!this.sourceListMap.has(url) && url.startsWith("http")) {
          this.sourceListMap.set(url, item);
          return true;
        }
        return false;
      });
      this.sourceList = this.sourceList.concat(nSourceList);
    } else {
      const url = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.getSourceURL)(sourceInfo.url);
      if (!this.sourceListMap.get(url) && url.startsWith("http")) {
        this.sourceList.push(sourceInfo);
        this.sourceListMap.set(url, sourceInfo);
      }
    }
  }
  initAsyncProviderRegistration() {
    const { asyncProviderTimeout, customExports } = this;
    if (asyncProviderTimeout) {
      customExports.registerProvider = (provider) => {
        var _a;
        this.asyncProvider = provider;
        (_a = this.resolveAsyncProvider) == null ? void 0 : _a.call(this);
      };
    }
  }
  awaitAsyncProviderRegistration() {
    return new Promise((resolve) => {
      if (this.asyncProvider) {
        resolve(this.asyncProvider);
        return;
      }
      const timeoutId = setTimeout(() => {
        resolve(this.asyncProvider);
      }, this.asyncProviderTimeout);
      this.resolveAsyncProvider = () => {
        clearTimeout(timeoutId);
        resolve(this.asyncProvider);
      };
    });
  }
  getProvider() {
    return this.provider ? Promise.resolve(this.provider) : this.checkAndGetProvider();
  }
  isNoEntryScript(url = "") {
    var _a, _b;
    return (_b = (_a = this.childGarfishConfig.sandbox) == null ? void 0 : _a.noEntryScripts) == null ? void 0 : _b.some((item) => url.indexOf(item) > -1);
  }
  execScript(code, env, url, options) {
    env = __spreadValues(__spreadValues({}, this.getExecScriptEnv(options == null ? void 0 : options.noEntry)), env || {});
    this.scriptCount++;
    const args = [this.appInfo, code, env, url, options];
    this.hooks.lifecycle.beforeEval.emit(...args);
    try {
      this.runCode(code, env, url, options);
    } catch (err) {
      this.hooks.lifecycle.errorExecCode.emit(err, ...args);
      throw err;
    }
    this.hooks.lifecycle.afterEval.emit(...args);
  }
  runCode(code, env, url, options) {
    if (options && options.isModule) {
      this.esmQueue.add(async (next) => {
        await this.esModuleLoader.load(code, __spreadValues(__spreadValues({}, this.getExecScriptEnv()), env), url, options);
        next();
      });
    } else {
      const revertCurrentScript = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.setDocCurrentScript)(this.global.document, code, true, url, options == null ? void 0 : options.async, options == null ? void 0 : options.defer, options == null ? void 0 : options.originScript);
      code += url ? `
//# sourceURL=${url}
` : "";
      if (!(0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.hasOwn)(env, "window")) {
        env = __spreadProps(__spreadValues({}, env), {
          window: this.global
        });
      }
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.evalWithEnv)(`;${code}`, env, this.global);
      Promise.resolve().then(revertCurrentScript);
    }
  }
  async show() {
    this.active = true;
    const { display, mounted, provider } = this;
    if (display)
      return false;
    if (!mounted) {
      (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)('Need to call the "app.mount()" method first.');
      return false;
    }
    this.hooks.lifecycle.beforeMount.emit(this.appInfo, this, true);
    this.context.activeApps.push(this);
    await this.addContainer();
    this.callRender(provider, false);
    this.display = true;
    this.hooks.lifecycle.afterMount.emit(this.appInfo, this, true);
    return true;
  }
  hide() {
    this.active = false;
    this.mounting = false;
    const { display, mounted, provider } = this;
    if (!display)
      return false;
    if (!mounted) {
      (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)('Need to call the "app.mount()" method first.');
      return false;
    }
    this.hooks.lifecycle.beforeUnmount.emit(this.appInfo, this, true);
    this.callDestroy(provider, false);
    this.display = false;
    (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.remove)(this.context.activeApps, this);
    this.hooks.lifecycle.afterUnmount.emit(this.appInfo, this, true);
    return true;
  }
  async mount() {
    if (!this.canMount())
      return false;
    this.hooks.lifecycle.beforeMount.emit(this.appInfo, this, false);
    this.active = true;
    this.mounting = true;
    try {
      this.context.activeApps.push(this);
      this.initAsyncProviderRegistration();
      const { asyncScripts, deferScripts } = await this.compileAndRenderContainer();
      if (!this.stopMountAndClearEffect())
        return false;
      deferScripts();
      const provider = await this.getProvider();
      if (!this.stopMountAndClearEffect())
        return false;
      this.callRender(provider, true);
      this.display = true;
      this.mounted = true;
      this.hooks.lifecycle.afterMount.emit(this.appInfo, this, false);
      await asyncScripts;
      if (!this.stopMountAndClearEffect())
        return false;
    } catch (e) {
      this.entryManager.DOMApis.removeElement(this.appContainer);
      this.hooks.lifecycle.errorMountApp.emit(e, this.appInfo);
      return false;
    } finally {
      this.mounting = false;
    }
    return true;
  }
  unmount() {
    this.active = false;
    this.mounting = false;
    if (!this.mounted || !this.appContainer) {
      return false;
    }
    if (this.unmounting) {
      (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`The ${this.name} app unmounting.`);
      return false;
    }
    this.unmounting = true;
    this.hooks.lifecycle.beforeUnmount.emit(this.appInfo, this, false);
    try {
      this.callDestroy(this.provider, true);
      this.display = false;
      this.mounted = false;
      this.provider = void 0;
      this.customExports = {};
      this.cjsModules.exports = {};
      this.esModuleLoader.destroy();
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.remove)(this.context.activeApps, this);
      this.hooks.lifecycle.afterUnmount.emit(this.appInfo, this, false);
    } catch (e) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.remove)(this.context.activeApps, this);
      this.entryManager.DOMApis.removeElement(this.appContainer);
      this.hooks.lifecycle.errorUnmountApp.emit(e, this.appInfo);
      return false;
    } finally {
      this.unmounting = false;
    }
    return true;
  }
  getExecScriptEnv(noEntry) {
    const envs = {
      [__GARFISH_EXPORTS__]: this.customExports,
      [__GARFISH_GLOBAL_ENV__]: this.globalEnvVariables
    };
    if (noEntry) {
      return __spreadProps(__spreadValues({}, envs), {
        require: this.cjsModules.require
      });
    }
    return __spreadValues(__spreadValues({}, envs), this.cjsModules);
  }
  async compileAndRenderContainer() {
    await this.renderTemplate();
    const execScript = (type) => {
      for (const jsManager of this.resources.js) {
        if (jsManager[type]) {
          try {
            let noEntry = false;
            const targetUrl = jsManager.url || this.appInfo.entry;
            if (type === "defer") {
              const node = this.deferNodeMap.get(jsManager);
              if (node) {
                noEntry = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.toBoolean)(this.entryManager.findAttributeValue(node, "no-entry"));
              }
              if (!noEntry) {
                noEntry = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.toBoolean)(this.isNoEntryScript(targetUrl));
              }
            }
            this.execScript(jsManager.scriptCode, {}, targetUrl, {
              noEntry,
              defer: type === "defer",
              async: type === "async",
              isModule: jsManager.isModule(),
              isInline: jsManager.isInlineScript()
            });
          } catch (e) {
            if (type !== "defer") {
              this.hooks.lifecycle.errorMountApp.emit(e, this.appInfo);
            } else {
              throw e;
            }
          }
        }
      }
    };
    return {
      deferScripts: () => execScript("defer"),
      asyncScripts: new Promise((resolve) => {
        setTimeout(() => {
          if (this.stopMountAndClearEffect()) {
            execScript("async");
          }
          resolve();
        });
      })
    };
  }
  canMount() {
    if (this.mounting) {
      (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`The ${this.appInfo.name} app mounting.`);
      return false;
    }
    if (this.mounted) {
      (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`The ${this.appInfo.name} app already mounted.`);
      return false;
    }
    if (this.unmounting) {
      (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`The ${this.appInfo.name} app is unmounting can't Perform application rendering.`);
      return false;
    }
    return true;
  }
  stopMountAndClearEffect() {
    if (!this.active) {
      if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
        (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`The app "${this.name}" rendering process has been blocked.`);
      }
      this.mounting = false;
      if (this.appContainer) {
        this.entryManager.DOMApis.removeElement(this.appContainer);
      }
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.coreLog)(`${this.appInfo.name} id:${this.appId} stopMountAndClearEffect`, this.appContainer);
      return false;
    }
    return true;
  }
  callRender(provider, isMount) {
    if (provider && provider.render) {
      provider.render({
        appName: this.appInfo.name,
        dom: this.rootElement,
        basename: this.appInfo.basename,
        appRenderInfo: { isMount },
        props: this.appInfo.props
      });
    }
  }
  callDestroy(provider, isUnmount) {
    const { rootElement, appContainer } = this;
    if (provider && provider.destroy) {
      provider.destroy({
        appName: this.appInfo.name,
        dom: rootElement,
        appRenderInfo: { isUnmount },
        props: this.appInfo.props
      });
    }
    this.entryManager.DOMApis.removeElement(appContainer);
  }
  async addContainer() {
    const wrapperNode = await (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.getRenderNode)(this.appInfo.domGetter);
    if (typeof wrapperNode.appendChild === "function") {
      wrapperNode.appendChild(this.appContainer);
    }
  }
  async renderTemplate() {
    const { appInfo, entryManager, resources } = this;
    const { url: baseUrl, DOMApis } = entryManager;
    const { htmlNode, appContainer } = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.createAppContainer)(appInfo);
    const fixStaticResourceBaseUrl = !this.appInfo.sandbox || this.appInfo.sandbox && this.appInfo.sandbox.fixStaticResourceBaseUrl === true;
    this.htmlNode = htmlNode;
    this.appContainer = appContainer;
    await this.addContainer();
    const customRenderer = {
      meta: () => null,
      img: (node) => {
        fixStaticResourceBaseUrl && baseUrl && entryManager.toResolveUrl(node, "src", baseUrl);
        return DOMApis.createElement(node);
      },
      video: (node) => {
        fixStaticResourceBaseUrl && baseUrl && entryManager.toResolveUrl(node, "src", baseUrl);
        return DOMApis.createElement(node);
      },
      audio: (node) => {
        fixStaticResourceBaseUrl && baseUrl && entryManager.toResolveUrl(node, "src", baseUrl);
        return DOMApis.createElement(node);
      },
      iframe: (node) => {
        fixStaticResourceBaseUrl && baseUrl && entryManager.toResolveUrl(node, "src", baseUrl);
        return DOMApis.createElement(node);
      },
      body: (node) => {
        if (!this.strictIsolation) {
          node = entryManager.cloneNode(node);
          node.tagName = "div";
          node.attributes.push({
            key: _garfish_utils__WEBPACK_IMPORTED_MODULE_2__.__MockBody__,
            value: null
          });
        }
        return DOMApis.createElement(node);
      },
      head: (node) => {
        if (!this.strictIsolation) {
          node = entryManager.cloneNode(node);
          node.tagName = "div";
          node.attributes.push({
            key: _garfish_utils__WEBPACK_IMPORTED_MODULE_2__.__MockHead__,
            value: null
          });
        }
        return DOMApis.createElement(node);
      },
      script: (node) => {
        const mimeType = entryManager.findAttributeValue(node, "type");
        const isModule = mimeType === "module";
        if (mimeType) {
          if (!isModule && !(0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.isJsType)({ type: mimeType })) {
            return DOMApis.createElement(node);
          }
        }
        const jsManager = resources.js.find((manager) => {
          return !manager.async ? manager.isSameOrigin(node) : false;
        });
        if (jsManager) {
          if (jsManager.defer) {
            this.deferNodeMap.set(jsManager, node);
          } else {
            const { url, scriptCode } = jsManager;
            const mockOriginScript = document.createElement("script");
            node.attributes.forEach((attribute) => {
              if (attribute.key) {
                mockOriginScript.setAttribute(attribute.key, attribute.value || "");
              }
            });
            const targetUrl = url || this.appInfo.entry;
            this.execScript(scriptCode, {}, targetUrl, {
              isModule,
              async: false,
              defer: false,
              isInline: jsManager.isInlineScript(),
              noEntry: (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.toBoolean)(entryManager.findAttributeValue(node, "no-entry") || this.isNoEntryScript(targetUrl)),
              originScript: mockOriginScript
            });
          }
        } else if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
          const async = entryManager.findAttributeValue(node, "async");
          if (typeof async === "undefined" || async === "false") {
            const tipInfo = JSON.stringify(node, null, 2);
            (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`Current js node cannot be found, the resource may not exist.

 ${tipInfo}`);
          }
        }
        return DOMApis.createScriptCommentNode(node);
      },
      style: (node) => {
        const text = node.children[0];
        if (text) {
          const styleManager = new this.context.loader.StyleManager(text.content, baseUrl);
          styleManager.setScope({
            appName: this.name,
            rootElId: this.appContainer.id
          });
          baseUrl && styleManager.correctPath(baseUrl);
          return entryManager.ignoreChildNodesCreation(styleManager.renderAsStyleElement());
        }
        return DOMApis.createElement(node);
      },
      link: (node) => {
        if (DOMApis.isCssLinkNode(node)) {
          const styleManager = this.resources.link.find((manager) => manager.isSameOrigin(node));
          if (styleManager) {
            styleManager.setScope({
              appName: this.name,
              rootElId: this.appContainer.id
            });
            return styleManager.renderAsStyleElement((typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) ? `
/*${DOMApis.createLinkCommentNode(node)}*/
` : "");
          }
        }
        return DOMApis.isPrefetchJsLinkNode(node) ? DOMApis.createScriptCommentNode(node) : DOMApis.isIconLinkNode(node) ? null : DOMApis.createElement(node);
      }
    };
    entryManager.createElements(customRenderer, htmlNode, (node, parent) => {
      return this.hooks.lifecycle.customRender.emit({
        node,
        parent,
        app: this,
        customElement: null
      });
    });
  }
  async checkAndGetProvider() {
    const { appInfo, rootElement, cjsModules, customExports } = this;
    const { name, props, basename } = appInfo;
    let provider = void 0;
    await this.esmQueue.awaitCompletion();
    if (cjsModules.exports) {
      if ((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.isPromise)(cjsModules.exports))
        cjsModules.exports = await cjsModules.exports;
      if (cjsModules.exports.provider)
        provider = cjsModules.exports.provider;
    }
    if (customExports.provider) {
      provider = customExports.provider;
    }
    if (this.asyncProviderTimeout && !provider) {
      provider = await this.awaitAsyncProviderRegistration();
    }
    if (typeof provider === "function") {
      provider = await provider(__spreadValues({
        basename,
        dom: rootElement
      }, props || {}), props);
    } else if ((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.isPromise)(provider)) {
      provider = await provider;
    }
    if (!(0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.isObject)(provider) && typeof provider !== "function") {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(` Invalid module content: ${name}, you should return both render and destroy functions in provider function.`);
    }
    const hookRes = await (this.customLoader && this.customLoader(provider, appInfo, basename));
    if (hookRes) {
      const { mount, unmount } = hookRes || {};
      if (typeof mount === "function" && typeof unmount === "function") {
        provider.render = mount;
        provider.destroy = unmount;
      }
    }
    if (!appInfo.noCheckProvider) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.assert)(provider, `"provider" is "${provider}".`);
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.assert)("render" in provider, '"render" is required in provider.');
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.assert)("destroy" in provider, '"destroy" is required in provider.');
    }
    this.provider = provider;
    return provider;
  }
};

// src/module/resource.ts

function fetchStaticResources(appName, loader, entryManager) {
  const toBoolean2 = (val) => typeof val !== "undefined" && val !== "false";
  const jsNodes = Promise.all(entryManager.findAllJsNodes().map((node) => {
    const src = entryManager.findAttributeValue(node, "src");
    const type = entryManager.findAttributeValue(node, "type");
    const crossOrigin = entryManager.findAttributeValue(node, "crossorigin");
    if (src) {
      const fetchUrl = entryManager.url ? (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.transformUrl)(entryManager.url, src) : src;
      const async = entryManager.findAttributeValue(node, "async");
      const defer = entryManager.findAttributeValue(node, "defer");
      return loader.load({
        scope: appName,
        url: fetchUrl,
        crossOrigin,
        defaultContentType: type
      }).then(({ resourceManager: jsManager }) => {
        if (jsManager) {
          jsManager.setDep(node);
          type && jsManager.setMimeType(type);
          jsManager.setAsyncAttribute(toBoolean2(async));
          jsManager.setDefferAttribute(toBoolean2(defer));
          return jsManager;
        } else {
          (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`[${appName}] Failed to load script: ${fetchUrl}`);
        }
      }).catch(() => null);
    } else if (node.children.length > 0) {
      const code = node.children[0].content;
      if (code) {
        const jsManager = new loader.JavaScriptManager(code, "");
        jsManager.setDep(node);
        type && jsManager.setMimeType(type);
        return jsManager;
      }
    }
  }).filter(Boolean));
  const linkNodes = Promise.all(entryManager.findAllLinkNodes().map((node) => {
    if (!entryManager.DOMApis.isCssLinkNode(node))
      return;
    const href = entryManager.findAttributeValue(node, "href");
    if (href) {
      const fetchUrl = entryManager.url ? (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.transformUrl)(entryManager.url, href) : href;
      return loader.load({ scope: appName, url: fetchUrl }).then(({ resourceManager: styleManager }) => {
        if (styleManager) {
          styleManager.setDep(node);
          styleManager == null ? void 0 : styleManager.correctPath();
          return styleManager;
        } else {
          (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`${appName} Failed to load link: ${fetchUrl}`);
        }
      }).catch(() => null);
    }
  }).filter(Boolean));
  const metaNodes = Promise.all(entryManager.findAllMetaNodes().map((node) => {
    if (!entryManager.DOMApis.isRemoteModule(node))
      return;
    const async = entryManager.findAttributeValue(node, "async");
    const alias = entryManager.findAttributeValue(node, "alias");
    if (!toBoolean2(async)) {
      const src = entryManager.findAttributeValue(node, "src");
      if (src) {
        return loader.loadModule(src).then(({ resourceManager: moduleManager }) => {
          if (moduleManager && alias) {
            moduleManager && moduleManager.setAlias(alias);
          }
          return moduleManager;
        }).catch(() => null);
      }
    } else if (alias) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`Asynchronous loading module, the alias "${alias}" is invalid.`);
    }
  }).filter(Boolean));
  return Promise.all([jsNodes, linkNodes, metaNodes]).then((ls) => ls.map((ns) => ns.filter(Boolean)));
}
async function processAppResources(loader, appInfo) {
  let isHtmlMode = false, fakeEntryManager;
  const resources = { js: [], link: [], modules: [] };
  (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.assert)(appInfo.entry, `[${appInfo.name}] Entry is not specified.`);
  const { resourceManager: entryManager } = await loader.load({
    scope: appInfo.name,
    url: (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.transformUrl)(location.href, appInfo.entry)
  });
  if (entryManager instanceof loader.TemplateManager) {
    isHtmlMode = true;
    const [js, link, modules] = await fetchStaticResources(appInfo.name, loader, entryManager);
    resources.js = js;
    resources.link = link;
    resources.modules = modules;
  } else if (entryManager instanceof loader.JavaScriptManager) {
    isHtmlMode = false;
    const mockTemplateCode = `<script src="${entryManager.url}"><\/script>`;
    fakeEntryManager = new loader.TemplateManager(mockTemplateCode, entryManager.url);
    entryManager.setDep(fakeEntryManager.findAllJsNodes()[0]);
    resources.js = [entryManager];
  } else {
    (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.error)(`Entrance wrong type of resource of "${appInfo.name}".`);
  }
  return [fakeEntryManager || entryManager, resources, isHtmlMode];
}

// src/plugins/fixHMR.ts
function GarfishHMRPlugin() {
  let hasInit = false;
  let isHotUpdate = false;
  return function(Garfish2) {
    return {
      name: "fix-hmr",
      version: "1.16.2",
      bootstrap() {
        if (hasInit)
          return;
        hasInit = true;
        let webpackHotUpdateName = "webpackHotUpdate";
        let webpackHotUpdate = window[webpackHotUpdateName];
        for (const i in window) {
          if (i.includes("webpackHotUpdate")) {
            webpackHotUpdateName = i;
            webpackHotUpdate = window[i];
          }
        }
        if (typeof webpackHotUpdate === "function") {
          window[webpackHotUpdateName] = function() {
            isHotUpdate = true;
            return webpackHotUpdate.apply(this, arguments);
          };
          const observer = new MutationObserver(() => {
            if (!isHotUpdate)
              return;
            isHotUpdate = false;
            Garfish2.activeApps.forEach((app) => {
              if (app.mounted) {
                setTimeout(() => {
                  app.display && app.hide();
                  app.show();
                });
              }
            });
          });
          observer.observe(document.documentElement, {
            subtree: true,
            childList: true,
            attributes: true
          });
        }
      }
    };
  };
}

// src/plugins/lifecycle.ts
function GarfishOptionsLife(options, name) {
  return function() {
    return __spreadValues({
      name,
      version: "1.16.2"
    }, options);
  };
}

// src/plugins/preload.ts


var storageKey = "__garfishPreloadApp__";
var isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
var requestQueue = new _garfish_utils__WEBPACK_IMPORTED_MODULE_2__.Queue();
var isSlowNetwork = () => navigator.connection ? navigator.connection.saveData || /(2|3)g/.test(navigator.connection.effectiveType) : false;
var requestIdleCallback = typeof _garfish_utils__WEBPACK_IMPORTED_MODULE_2__.idleCallback !== "function" ? window.setTimeout : _garfish_utils__WEBPACK_IMPORTED_MODULE_2__.idleCallback;
function safeLoad({
  loader,
  appName,
  url,
  isModule,
  immediately,
  callback
}) {
  const generateSuccess = (next = () => {
  }) => ({ resourceManager }) => {
    callback && callback(resourceManager);
    setTimeout(next, 500);
  };
  const generateThrowWarn = (next = () => {
  }) => (e) => {
    if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(e);
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`Preload failed. "${url}"`);
    }
    next();
  };
  const loadResource = (next = () => {
  }) => {
    const throwWarn = generateThrowWarn(next);
    const success = generateSuccess(next);
    try {
      if (isModule) {
        loader.loadModule(url).then(success, throwWarn);
      } else {
        loader.load({ scope: appName, url }).then(success, throwWarn);
      }
    } catch (e) {
      throwWarn(e);
      next();
    }
  };
  if (immediately) {
    loadResource();
  } else {
    requestQueue.add((next) => {
      requestIdleCallback(() => loadResource(next));
    });
  }
}
function loadAppResource(loader, info, immediately = false) {
  false;
  const fetchUrl = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.transformUrl)(location.href, info.entry);
  safeLoad({
    loader,
    appName: info.name,
    url: fetchUrl,
    isModule: false,
    immediately,
    callback: (manager) => {
      const loadStaticResource = () => {
        if (manager instanceof _garfish_loader__WEBPACK_IMPORTED_MODULE_0__.TemplateManager) {
          const baseUrl = manager.url;
          const jsNodes = manager.findAllJsNodes();
          const linkNodes = manager.findAllLinkNodes();
          const metaNodes = manager.findAllMetaNodes();
          if (jsNodes) {
            jsNodes.forEach((node) => {
              const src = manager.findAttributeValue(node, "src");
              src && safeLoad({
                loader,
                appName: info.name,
                url: baseUrl ? (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.transformUrl)(baseUrl, src) : src,
                isModule: false,
                immediately
              });
            });
          }
          if (linkNodes) {
            linkNodes.forEach((node) => {
              if (manager.DOMApis.isCssLinkNode(node)) {
                const href = manager.findAttributeValue(node, "href");
                href && safeLoad({
                  loader,
                  appName: info.name,
                  url: baseUrl ? (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.transformUrl)(baseUrl, href) : href,
                  isModule: false,
                  immediately
                });
              }
            });
          }
          if (metaNodes) {
            metaNodes.forEach((node) => {
              if (manager.DOMApis.isRemoteModule(node)) {
                const src = manager.findAttributeValue(node, "src");
                if (src && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.isAbsolute)(src)) {
                  safeLoad({
                    loader,
                    appName: info.name,
                    url: src,
                    isModule: true,
                    immediately
                  });
                } else {
                  (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`The loading of the remote module must be an absolute path. "${src}"`);
                }
              }
            });
          }
        }
      };
      if (immediately) {
        loadStaticResource();
      } else {
        requestIdleCallback(loadStaticResource);
      }
    }
  });
}
function getRanking() {
  const str = localStorage.getItem(storageKey);
  if (str) {
    const data = JSON.parse(str);
    return data.sort((a, b) => b.count - a.count);
  }
  return [];
}
function setRanking(appName) {
  const str = localStorage.getItem(storageKey);
  const newCurrent = { appName, count: 1 };
  if (!str) {
    (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.safeWrapper)(() => localStorage.setItem(storageKey, JSON.stringify([newCurrent])));
  } else {
    const data = JSON.parse(str);
    const current = data.find((app) => app.appName === appName);
    current ? current.count++ : data.push(newCurrent);
    (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.safeWrapper)(() => localStorage.setItem(storageKey, JSON.stringify(data)));
  }
}
var loadedMap = /* @__PURE__ */ Object.create(null);
function GarfishPreloadPlugin() {
  return function(Garfish2) {
    Garfish2.preloadApp = (appName) => {
      if (loadedMap[appName]) {
        return;
      }
      loadedMap[appName] = true;
      loadAppResource(Garfish2.loader, Garfish2.appInfos[appName], true);
    };
    return {
      name: "preload",
      version: "1.16.2",
      beforeLoad(appInfo) {
        if (Garfish2.options.disablePreloadApp) {
          return;
        }
        setRanking(appInfo.name);
      },
      registerApp(appInfos) {
        if (Garfish2.options.disablePreloadApp) {
          return;
        }
        setTimeout(() => {
          if (isMobile || isSlowNetwork())
            return;
          const ranking = getRanking();
          for (const { appName } of ranking) {
            if (appInfos[appName] && !loadedMap[appName]) {
              loadedMap[appName] = true;
              loadAppResource(Garfish2.loader, appInfos[appName]);
            }
          }
          for (const key in appInfos) {
            if (!loadedMap[key]) {
              loadAppResource(Garfish2.loader, appInfos[key]);
            }
          }
        },  false ? 0 : 5e3);
      }
    };
  };
}

// src/plugins/performance/subAppObserver.ts

var SubAppObserver = class {
  constructor(options) {
    this.observer = new MutationObserver(this._mutationObserverCallback.bind(this));
    this.subAppBeforeLoadTime = 0;
    this.subAppBeforeMountTime = 0;
    this.subAppStartPageShowTime = 0;
    this.subAppPageShowTime = 0;
    this.entry = "";
    this.observeTimer = 0;
    this.dataTimer = 0;
    this.domQuerySelector = options.subAppRootSelector;
    this.config = { attributes: true, childList: true, subtree: true };
    this.targetSubscriber = [];
    this.timeLag = options.domObserverMaxTime || 3e3;
    this.reportTimeLag = options.waitSubAppNotifyMaxTime || 1e4;
    this.isRecordFinish = false;
    this.cbEntryList = [];
    this.isStartShowFlag = true;
    this.isCallBackFinish = false;
    this.isSubAppNotifyFinish = false;
    this.finishAction = "";
    this.performanceData = {
      resourceLoadTime: 0,
      blankScreenTime: 0,
      firstScreenTime: 0,
      isFirstRender: true,
      entry: "",
      action: ""
    };
  }
  subscribePerformanceData(callback) {
    try {
      this.targetSubscriber.push(callback);
    } catch (e) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(e);
    }
  }
  subscribePerformanceDataOnce(callback) {
    try {
      const wrapCallback = (performanceData) => {
        callback(performanceData);
        this.unsubscribePerformanceData(wrapCallback);
      };
      this.targetSubscriber.push(wrapCallback);
    } catch (e) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(e);
    }
  }
  unsubscribePerformanceData(callback) {
    try {
      this.targetSubscriber = this.targetSubscriber.filter((sub) => sub === callback);
    } catch (e) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(e);
    }
  }
  subAppBeforeLoad(entry) {
    this.entry = entry;
    this.isRecordFinish = false;
    this.isSubAppNotifyFinish = false;
    this.subAppBeforeLoadTime = performance.now();
    this.isCallBackFinish = false;
    this._handleSubscribeCallback(false);
  }
  subAppBeforeMount() {
    this.subAppBeforeMountTime = performance.now();
    this._subAppStartObserver();
  }
  subAppUnmount() {
    if (!this.isRecordFinish) {
      this._subAppEndObserver("subAppUnmount");
    }
    this._handleSubscribeCallback(true);
  }
  afterRenderNotify() {
    if (!this.isRecordFinish) {
      this._subAppEndObserver("SubAppRenderNotify");
    } else if (!this.isSubAppNotifyFinish) {
      this.isSubAppNotifyFinish = true;
      this.isRecordFinish = true;
      this.finishAction = "SubAppRenderNotify";
      this._subAppPerformanceDataHandle();
    }
  }
  _mutationObserverCallback() {
    if (this.isStartShowFlag) {
      this.subAppStartPageShowTime = performance.now();
      this.isStartShowFlag = false;
    }
    clearTimeout(this.observeTimer);
    this.observeTimer = setTimeout(() => {
      clearTimeout(this.observeTimer);
      if (!this.isRecordFinish) {
        this._subAppEndObserver("MutationObserver");
      }
    }, this.timeLag);
  }
  _subAppEndObserver(finishAction) {
    this.isRecordFinish = true;
    this.finishAction = finishAction;
    this.subAppPageShowTime = performance.now();
    this.observer.disconnect();
    this._subAppPerformanceDataHandle();
    this.isStartShowFlag = true;
  }
  async _subAppStartObserver() {
    try {
      const targetNode = await (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.getRenderNode)(this.domQuerySelector);
      this.observer.observe(targetNode, this.config);
      this._subAppClickEventObserver(targetNode);
    } catch (e) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(e);
    }
  }
  _subAppPerformanceDataHandle() {
    const timeDifference = this.finishAction === "MutationObserver" ? this.timeLag : 0;
    this.performanceData = {
      resourceLoadTime: this.subAppBeforeMountTime - this.subAppBeforeLoadTime,
      blankScreenTime: this.subAppStartPageShowTime - this.subAppBeforeLoadTime,
      firstScreenTime: this.subAppPageShowTime - this.subAppBeforeLoadTime - timeDifference,
      isFirstRender: this.cbEntryList.indexOf(this.entry) === -1,
      entry: this.entry,
      action: this.finishAction
    };
  }
  _subAppClickEventObserver(targetNode) {
    const eventCallback = () => {
      clearTimeout(this.observeTimer);
      if (!this.isRecordFinish) {
        this._subAppEndObserver("UserEvent");
      }
    };
    targetNode.addEventListener("click", eventCallback);
    targetNode.addEventListener("keyup", eventCallback);
    targetNode.addEventListener("keydown", eventCallback);
    targetNode.addEventListener("keypress", eventCallback);
  }
  _handleCallback() {
    try {
      this.isCallBackFinish = true;
      this.targetSubscriber.forEach((callback) => {
        const {
          firstScreenTime,
          blankScreenTime,
          resourceLoadTime,
          action,
          entry
        } = this.performanceData;
        if (firstScreenTime > 0 && blankScreenTime > 0 && resourceLoadTime > 0 && action && entry) {
          if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
            console.warn("SUCCESS: ", this.performanceData);
          }
          this.cbEntryList.push(this.entry);
          callback(this.performanceData);
        } else if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
          console.warn("ERROR: ", this.performanceData);
        }
      });
    } catch (e) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(e);
    }
  }
  _handleSubscribeCallback(isImmediately) {
    try {
      clearTimeout(this.dataTimer);
      if (isImmediately && !this.isCallBackFinish) {
        this._handleCallback();
      } else {
        this.dataTimer = setTimeout(() => {
          this._handleCallback();
        }, this.reportTimeLag);
      }
    } catch (e) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(e);
    }
  }
};

// src/plugins/performance/index.ts
function GarfishPerformance() {
  return function() {
    const subAppMap = {};
    return {
      name: "performance",
      beforeLoad(appInfo) {
        if (!subAppMap[appInfo.name] && appInfo.domGetter) {
          subAppMap[appInfo.name] = new SubAppObserver({
            subAppRootSelector: appInfo.domGetter
          });
        }
        subAppMap[appInfo.name].subAppBeforeLoad(appInfo.entry);
      },
      afterLoad(appInfo, appInstance) {
        if (appInstance) {
          appInstance.appPerformance = subAppMap[appInfo.name];
        }
      },
      beforeMount(appInfo) {
        subAppMap[appInfo.name].subAppBeforeMount(appInfo.entry);
      },
      beforeUnmount(appInfo) {
        subAppMap[appInfo.name].subAppUnmount(appInfo.entry);
      }
    };
  };
}

// src/plugins/logger.ts

function GarfishLogger() {
  return function() {
    return {
      name: "garfish-logger",
      version: "1.16.2",
      beforeLoad(appInfo, ...args) {
        (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.coreLog)(`${appInfo.name} beforeLoad`, [appInfo, ...args]);
      },
      afterLoad(appInfo, appInstance, ...args) {
        if (appInstance) {
          (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.coreLog)(`${appInfo.name} id: ${appInstance.appId} afterLoad`, [
            appInfo,
            ...args
          ]);
        }
      },
      beforeMount(appInfo, appInstance, ...args) {
        (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.coreLog)(`${appInfo.name} id: ${appInstance.appId} beforeMount`, [
          appInfo,
          ...args
        ]);
      },
      afterMount(appInfo, appInstance, ...args) {
        (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.coreLog)(`${appInfo.name} id: ${appInstance.appId} afterMount`, [
          appInfo,
          ...args
        ]);
      },
      beforeUnmount(appInfo, appInstance, ...args) {
        (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.coreLog)(`${appInfo.name} id: ${appInstance.appId} beforeUnmount`, [
          appInfo,
          ...args
        ]);
      },
      afterUnmount(appInfo, appInstance, ...args) {
        (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.coreLog)(`${appInfo.name} id: ${appInstance.appId} afterUnmount`, [
          appInfo,
          ...args
        ]);
      }
    };
  };
}

// src/garfish.ts
var DEFAULT_PROPS = /* @__PURE__ */ new WeakMap();
var HOOKS_API = {
  SyncHook: _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.SyncHook,
  AsyncHook: _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.AsyncHook,
  SyncWaterfallHook: _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.SyncWaterfallHook,
  AsyncWaterfallHook: _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.AsyncWaterfallHook
};
var Garfish = class extends eventemitter2__WEBPACK_IMPORTED_MODULE_1__.EventEmitter2 {
  constructor(options) {
    super();
    this.running = false;
    this.version = "1.16.2";
    this.flag = _garfish_utils__WEBPACK_IMPORTED_MODULE_2__.__GARFISH_FLAG__;
    this.loader = new _garfish_loader__WEBPACK_IMPORTED_MODULE_0__.Loader();
    this.hooks = globalLifecycle();
    this.channel = new eventemitter2__WEBPACK_IMPORTED_MODULE_1__.EventEmitter2();
    this.options = createDefaultOptions();
    this.externals = {};
    this.activeApps = [];
    this.plugins = {};
    this.cacheApps = {};
    this.appInfos = {};
    this.loading = {};
    var _a;
    this.setOptions(options);
    DEFAULT_PROPS.set(this, {});
    (_a = this.options.plugins) == null ? void 0 : _a.forEach((plugin) => this.usePlugin(plugin));
    this.usePlugin(GarfishHMRPlugin());
    this.usePlugin(GarfishPerformance());
    this.usePlugin(GarfishPreloadPlugin());
    this.usePlugin(GarfishLogger());
  }
  get props() {
    return this.options && this.options.props || DEFAULT_PROPS.get(this);
  }
  setOptions(options) {
    (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.assert)(!this.running, "Garfish is running, can`t set options");
    if ((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.isPlainObject)(options)) {
      this.options = deepMergeConfig(this.options, options);
    }
    return this;
  }
  createPluginSystem(callback) {
    const hooks = callback(HOOKS_API);
    return new _garfish_hooks__WEBPACK_IMPORTED_MODULE_3__.PluginSystem(hooks);
  }
  usePlugin(plugin, ...args) {
    (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.assert)(!this.running, "Cannot register plugin after Garfish is started.");
    (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.assert)(typeof plugin === "function", "Plugin must be a function.");
    args.unshift(this);
    const pluginConfig = plugin.apply(null, args);
    (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.assert)(pluginConfig.name, "The plugin must have a name.");
    if (!this.plugins[pluginConfig.name]) {
      this.plugins[pluginConfig.name] = pluginConfig;
      this.hooks.usePlugin(pluginConfig);
    } else if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)("Please do not register the plugin repeatedly.");
    }
    return this;
  }
  run(options = {}) {
    var _a;
    if (this.running) {
      if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
        (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)("Garfish is already running now, Cannot run Garfish repeatedly.");
      }
      return this;
    }
    this.setOptions(options);
    (_a = options.plugins) == null ? void 0 : _a.forEach((plugin) => this.usePlugin(plugin));
    this.usePlugin(GarfishOptionsLife(this.options, "global-lifecycle"));
    this.hooks.lifecycle.beforeBootstrap.emit(this.options);
    this.registerApp(this.options.apps || []);
    this.running = true;
    this.hooks.lifecycle.bootstrap.emit(this.options);
    return this;
  }
  registerApp(list) {
    const currentAdds = {};
    this.hooks.lifecycle.beforeRegisterApp.emit(list);
    if (!Array.isArray(list))
      list = [list];
    for (const appInfo of list) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.assert)(appInfo.name, "Miss app.name.");
      if (!this.appInfos[appInfo.name]) {
        (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.assert)(appInfo.entry, `${appInfo.name} application entry is not url: ${appInfo.entry}`);
        currentAdds[appInfo.name] = appInfo;
        this.appInfos[appInfo.name] = appInfo;
      } else if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
        (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`The "${appInfo.name}" app is already registered.`);
      }
    }
    this.hooks.lifecycle.registerApp.emit(currentAdds);
    return this;
  }
  setExternal(nameOrExtObj, value) {
    (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.assert)(nameOrExtObj, "Invalid parameter.");
    if (typeof nameOrExtObj === "object") {
      for (const key in nameOrExtObj) {
        if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
          this.externals[key] && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`The "${key}" will be overwritten in external.`);
        }
        this.externals[key] = nameOrExtObj[key];
      }
    } else {
      this.externals[nameOrExtObj] = value;
    }
    return this;
  }
  loadApp(appName, options) {
    (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.assert)(appName, "Miss appName.");
    let appInfo = generateAppOptions(appName, this, options);
    const asyncLoadProcess = async () => {
      const stop = await this.hooks.lifecycle.beforeLoad.emit(appInfo);
      if (stop === false) {
        (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`Load ${appName} application is terminated by beforeLoad.`);
        return null;
      }
      appInfo = generateAppOptions(appName, this, appInfo);
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.assert)(appInfo.entry, `Can't load unexpected child app "${appName}", Please provide the entry parameters or registered in advance of the app.`);
      let appInstance = null;
      const cacheApp = this.cacheApps[appName];
      if (appInfo.cache && cacheApp) {
        appInstance = cacheApp;
      } else {
        try {
          const [manager, resources, isHtmlMode] = await processAppResources(this.loader, appInfo);
          appInstance = new App(this, appInfo, manager, resources, isHtmlMode, appInfo.customLoader);
          for (const key in this.plugins) {
            appInstance.hooks.usePlugin(this.plugins[key]);
          }
          if (appInfo.cache) {
            this.cacheApps[appName] = appInstance;
          }
        } catch (e) {
          (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(e);
          this.hooks.lifecycle.errorLoadApp.emit(e, appInfo);
        }
      }
      await this.hooks.lifecycle.afterLoad.emit(appInfo, appInstance);
      return appInstance;
    };
    if (!this.loading[appName]) {
      this.loading[appName] = asyncLoadProcess().finally(() => {
        delete this.loading[appName];
      });
    }
    return this.loading[appName];
  }
};



/***/ }),

/***/ "./node_modules/.pnpm/@garfish+hooks@1.16.2/node_modules/@garfish/hooks/dist/esm/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@garfish+hooks@1.16.2/node_modules/@garfish/hooks/dist/esm/index.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AsyncHook: function() { return /* binding */ AsyncHook; },
/* harmony export */   AsyncWaterfallHook: function() { return /* binding */ AsyncWaterfallHook; },
/* harmony export */   PluginSystem: function() { return /* binding */ PluginSystem; },
/* harmony export */   SyncHook: function() { return /* binding */ SyncHook; },
/* harmony export */   SyncWaterfallHook: function() { return /* binding */ SyncWaterfallHook; }
/* harmony export */ });
/* harmony import */ var _garfish_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @garfish/utils */ "./node_modules/.pnpm/@garfish+utils@1.16.2/node_modules/@garfish/utils/dist/esm/index.js");
/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js");
// src/syncHook.ts

var SyncHook = class {
  constructor(type) {
    this.type = "";
    this.listeners = /* @__PURE__ */ new Set();
    if (type)
      this.type = type;
  }
  on(fn) {
    if (typeof fn === "function") {
      this.listeners.add(fn);
    } else if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.warn)('Invalid parameter in "Hook".');
    }
  }
  once(fn) {
    const self = this;
    this.on(function wrapper(...args) {
      self.remove(wrapper);
      return fn.apply(null, args);
    });
  }
  emit(...data) {
    if (this.listeners.size > 0) {
      this.listeners.forEach((fn) => fn.apply(null, data));
    }
  }
  remove(fn) {
    return this.listeners.delete(fn);
  }
  removeAll() {
    this.listeners.clear();
  }
};

// src/asyncHook.ts
var AsyncHook = class extends SyncHook {
  emit(...data) {
    let result;
    const ls = Array.from(this.listeners);
    if (ls.length > 0) {
      let i = 0;
      const call = (prev) => {
        if (prev === false) {
          return false;
        } else if (i < ls.length) {
          return Promise.resolve(ls[i++].apply(null, data)).then(call);
        } else {
          return prev;
        }
      };
      result = call();
    }
    return Promise.resolve(result);
  }
};

// src/syncWaterfallHook.ts

function checkReturnData(originData, returnData) {
  if (!(0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(returnData))
    return false;
  if (originData !== returnData) {
    for (const key in originData) {
      if (!(key in returnData)) {
        return false;
      }
    }
  }
  return true;
}
var SyncWaterfallHook = class extends SyncHook {
  constructor(type) {
    super();
    this.onerror = _garfish_utils__WEBPACK_IMPORTED_MODULE_0__.error;
    this.type = type;
  }
  emit(data) {
    if (!(0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(data)) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.error)(`"${this.type}" hook response data must be an object.`);
    }
    for (const fn of this.listeners) {
      try {
        const tempData = fn(data);
        if (checkReturnData(data, tempData)) {
          data = tempData;
        } else {
          this.onerror(`The return value of hook "${this.type}" is incorrect.`);
          break;
        }
      } catch (e) {
        (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.warn)(e);
        this.onerror(e);
      }
    }
    return data;
  }
};

// src/asyncWaterfallHooks.ts

var AsyncWaterfallHook = class extends SyncHook {
  constructor(type) {
    super();
    this.onerror = _garfish_utils__WEBPACK_IMPORTED_MODULE_0__.error;
    this.type = type;
  }
  emit(data) {
    if (!(0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(data)) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.error)(`"${this.type}" hook response data must be an object.`);
    }
    const ls = Array.from(this.listeners);
    if (ls.length > 0) {
      let i = 0;
      const processError = (e) => {
        (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.warn)(e);
        this.onerror(e);
        return data;
      };
      const call = (prevData) => {
        if (prevData === false) {
          return false;
        } else if (checkReturnData(data, prevData)) {
          data = prevData;
          if (i < ls.length) {
            try {
              return Promise.resolve(ls[i++](data)).then(call, processError);
            } catch (e) {
              return processError(e);
            }
          }
        } else {
          this.onerror(`The return value of hook "${this.type}" is incorrect.`);
        }
        return data;
      };
      return Promise.resolve(call(data));
    }
    return Promise.resolve(data);
  }
};

// src/pluginSystem.ts

var PluginSystem = class {
  constructor(lifecycle) {
    this.registerPlugins = {};
    this.lifecycle = lifecycle;
    this.lifecycleKeys = Object.keys(lifecycle);
  }
  usePlugin(plugin) {
    (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.assert)((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(plugin), "Invalid plugin configuration.");
    const pluginName = plugin.name;
    (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.assert)(pluginName, "Plugin must provide a name.");
    if (!this.registerPlugins[pluginName]) {
      this.registerPlugins[pluginName] = plugin;
      for (const key in this.lifecycle) {
        const pluginLife = plugin[key];
        if (pluginLife) {
          this.lifecycle[key].on(pluginLife);
        }
      }
    } else {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.warn)(`Repeat to register plugin hooks "${pluginName}".`);
    }
  }
  removePlugin(pluginName) {
    (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.assert)(pluginName, "Must provide a name.");
    const plugin = this.registerPlugins[pluginName];
    (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.assert)(plugin, `plugin "${pluginName}" is not registered.`);
    for (const key in plugin) {
      if (key === "name")
        continue;
      this.lifecycle[key].remove(plugin[key]);
    }
  }
  inherit({ lifecycle, registerPlugins }) {
    for (const hookName in lifecycle) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.assert)(!this.lifecycle[hookName], `"${hookName}" hook has conflict and cannot be inherited.`);
      this.lifecycle[hookName] = lifecycle[hookName];
    }
    for (const pluginName in registerPlugins) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.assert)(!this.registerPlugins[pluginName], `"${pluginName}" plugin has conflict and cannot be inherited.`);
      this.usePlugin(registerPlugins[pluginName]);
    }
    return this;
  }
};



/***/ }),

/***/ "./node_modules/.pnpm/@garfish+loader@1.16.2/node_modules/@garfish/loader/dist/esm/index.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@garfish+loader@1.16.2/node_modules/@garfish/loader/dist/esm/index.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CrossOriginCredentials: function() { return /* binding */ CrossOriginCredentials; },
/* harmony export */   JavaScriptManager: function() { return /* binding */ JavaScriptManager; },
/* harmony export */   Loader: function() { return /* binding */ Loader; },
/* harmony export */   ModuleManager: function() { return /* binding */ ModuleManager; },
/* harmony export */   StyleManager: function() { return /* binding */ StyleManager; },
/* harmony export */   TemplateManager: function() { return /* binding */ TemplateManager; }
/* harmony export */ });
/* harmony import */ var _garfish_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @garfish/hooks */ "./node_modules/.pnpm/@garfish+hooks@1.16.2/node_modules/@garfish/hooks/dist/esm/index.js");
/* harmony import */ var _garfish_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @garfish/utils */ "./node_modules/.pnpm/@garfish+utils@1.16.2/node_modules/@garfish/utils/dist/esm/index.js");
/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js");
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};

// src/index.ts



// src/managers/style.ts

var MATCH_CSS_URL = /url\(\s*(['"])?(.*?)\1\s*\)/g;
var MATCH_CHARSET_URL = /@charset\s+(['"])(.*?)\1\s*;?/g;
var MATCH_IMPORT_URL = /@import\s+(['"])(.*?)\1/g;
var StyleManager = class {
  constructor(styleCode, url) {
    this.depsStack = /* @__PURE__ */ new Set();
    this.scopeData = null;
    this.url = url || null;
    this.styleCode = styleCode;
  }
  correctPath(baseUrl) {
    const { url, styleCode } = this;
    if (!baseUrl)
      baseUrl = url;
    if (baseUrl && typeof styleCode === "string") {
      this.styleCode = styleCode.replace(MATCH_CHARSET_URL, "").replace(MATCH_IMPORT_URL, function(k0, k1, k2) {
        return k2 ? `@import url(${k1}${k2}${k1})` : k0;
      }).replace(MATCH_CSS_URL, (k0, k1, k2) => {
        if ((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_1__.isAbsolute)(k2))
          return k0;
        return `url("${baseUrl ? (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_1__.transformUrl)(baseUrl, k2) : k2}")`;
      });
    }
  }
  transformCode(code) {
    return code;
  }
  setDep(node) {
    this.depsStack.add(node);
  }
  setScope(data) {
    this.scopeData = data;
  }
  isSameOrigin(node) {
    return this.depsStack.has(node);
  }
  renderAsStyleElement(extraCode = "") {
    const node = document.createElement("style");
    const code = extraCode + (this.styleCode ? this.styleCode : "/**empty style**/");
    node.setAttribute("type", "text/css");
    node.textContent = this.transformCode(code);
    return node;
  }
  clone() {
    const cloned = new this.constructor();
    cloned.url = this.url;
    cloned.styleCode = this.styleCode;
    cloned.scopeData = this.scopeData;
    cloned.depsStack = new Set(this.depsStack);
    return cloned;
  }
};

// src/managers/module.ts
var ModuleManager = class {
  constructor(moduleCode, url) {
    this.alias = null;
    this.url = url || null;
    this.moduleCode = moduleCode;
  }
  setAlias(name) {
    if (name && typeof name === "string") {
      this.alias = name;
    }
  }
  clone() {
    const cloned = new this.constructor();
    cloned.url = this.url;
    cloned.alias = this.alias;
    cloned.moduleCode = this.moduleCode;
    return cloned;
  }
};

// src/managers/template.ts

var TemplateManager = class {
  constructor(template, url) {
    this.DOMApis = new _garfish_utils__WEBPACK_IMPORTED_MODULE_1__.DOMApis();
    this.astTree = [];
    this.pretreatmentStore = {};
    this.url = url;
    if (template) {
      const [astTree, collectionEls] = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_1__.templateParse)(template, [
        "meta",
        "link",
        "style",
        "script"
      ]);
      this.astTree = astTree;
      this.pretreatmentStore = collectionEls;
    }
  }
  getNodesByTagName(...tags) {
    let counter = 0;
    const collection = {};
    for (const tag of tags) {
      if (this.pretreatmentStore[tag]) {
        counter++;
        collection[tag] = this.pretreatmentStore[tag];
      } else {
        collection[tag] = [];
      }
    }
    if (counter !== tags.length) {
      const traverse = (node) => {
        if (node.type !== "element")
          return;
        if (tags.indexOf(node.tagName) > -1 && !this.pretreatmentStore[node.tagName]) {
          collection[node.tagName].push(node);
        }
        for (const child of node.children)
          traverse(child);
      };
      for (const node of this.astTree)
        traverse(node);
    }
    return collection;
  }
  createElements(renderer, parent, commonRender) {
    const elements = [];
    const traverse = (node, parentEl) => {
      var _a;
      let el;
      if (this.DOMApis.isCommentNode(node)) {
      } else if (this.DOMApis.isText(node)) {
        el = this.DOMApis.createTextNode(node);
        parentEl && parentEl.appendChild(el);
      } else if (this.DOMApis.isNode(node)) {
        const { tagName, children } = node;
        if (typeof commonRender === "function") {
          el = (_a = commonRender(node, parent)) == null ? void 0 : _a.customElement;
        }
        if (!el) {
          if (renderer[tagName]) {
            el = renderer[tagName](node);
          } else {
            el = this.DOMApis.createElement(node);
          }
        }
        if (parentEl && el) {
          parentEl.appendChild(el);
        }
        if (el) {
          const { nodeType, _ignoreChildNodes } = el;
          if (!_ignoreChildNodes && nodeType !== 8 && nodeType !== 10) {
            for (const child of children) {
              traverse(child, el);
            }
          }
        }
      }
      return el;
    };
    for (const node of this.astTree) {
      if (this.DOMApis.isNode(node) && node.tagName !== "!doctype") {
        const el = traverse(node, parent);
        el && elements.push(el);
      }
    }
    return elements;
  }
  toResolveUrl(node, type, baseUrl) {
    var _a;
    const src = (_a = node.attributes) == null ? void 0 : _a.find(({ key }) => key === type);
    if (src && src.value && baseUrl) {
      src.value = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_1__.transformUrl)(baseUrl, src.value);
    }
  }
  ignoreChildNodesCreation(node) {
    if (node) {
      node._ignoreChildNodes = true;
    }
    return node;
  }
  findAllMetaNodes() {
    return this.getNodesByTagName("meta").meta;
  }
  findAllLinkNodes() {
    return this.getNodesByTagName("link").link;
  }
  findAllJsNodes() {
    return this.getNodesByTagName("script").script;
  }
  findAttributeValue(node, type) {
    var _a, _b;
    return ((_b = (_a = node.attributes) == null ? void 0 : _a.find(({ key }) => key === type)) == null ? void 0 : _b.value) || void 0;
  }
  cloneNode(node) {
    return (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_1__.deepMerge)(node, {});
  }
  clone() {
    const cloned = new this.constructor();
    cloned.url = this.url;
    cloned.astTree = this.astTree;
    cloned.pretreatmentStore = this.pretreatmentStore;
    cloned.DOMApis = new _garfish_utils__WEBPACK_IMPORTED_MODULE_1__.DOMApis(this.DOMApis.document);
    return cloned;
  }
};

// src/managers/javascript.ts
var JavaScriptManager = class {
  constructor(scriptCode, url) {
    this.depsStack = /* @__PURE__ */ new Set();
    this.mimeType = "";
    this.async = false;
    this.defer = false;
    this.url = url;
    this.scriptCode = scriptCode;
  }
  isModule() {
    return this.mimeType === "module";
  }
  isInlineScript() {
    return Boolean(!this.url);
  }
  setMimeType(mimeType) {
    this.mimeType = mimeType || "";
  }
  setAsyncAttribute(val) {
    this.async = Boolean(val);
  }
  setDefferAttribute(val) {
    this.defer = Boolean(val);
  }
  setDep(node) {
    this.depsStack.add(node);
  }
  isSameOrigin(node) {
    return this.depsStack.has(node);
  }
  clone() {
    const cloned = new this.constructor();
    cloned.url = this.url;
    cloned.async = this.async;
    cloned.mimeType = this.mimeType;
    cloned.scriptCode = this.scriptCode;
    cloned.depsStack = new Set(this.depsStack);
    return cloned;
  }
};

// src/utils.ts

function getRequest(customFetch) {
  return async function request(url, config) {
    let result = await customFetch.emit(url, config || {});
    if (!result || !(result instanceof Response)) {
      result = await fetch(url, config || {});
    }
    if (result.status >= 400) {
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_1__.error)(`"${url}" load failed with status "${result.status}"`);
    }
    const code = await result.text();
    const type = result.headers.get("content-type") || "";
    const size = Number(result.headers.get("content-size"));
    const mimeType = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_1__.parseContentType)(type || "");
    return {
      code,
      result,
      mimeType,
      type,
      size: Number.isNaN(size) ? null : size
    };
  };
}
function copyResult(result) {
  if (result.resourceManager) {
    result.resourceManager = result.resourceManager.clone();
  }
  return result;
}
function mergeConfig(loader, url) {
  const extra = loader.requestConfig;
  const config = typeof extra === "function" ? extra(url) : extra;
  return __spreadValues({ mode: "cors" }, config);
}

// src/appCache.ts
var cachedDataSet = /* @__PURE__ */ new WeakSet();
var MAX_SIZE = 1024 * 1024 * 50;
var DEFAULT_POLL = Symbol("__defaultBufferPoll__");
var FILE_TYPES = [
  "js" /* js */,
  "css" /* css */,
  "module" /* module */,
  "template" /* template */,
  DEFAULT_POLL
];
var AppCacheContainer = class {
  constructor(maxSize = MAX_SIZE) {
    this.totalSize = 0;
    this.recorder = {};
    this.maxSize = maxSize;
    FILE_TYPES.forEach((key) => {
      this.recorder[key] = 0;
      this[key] = /* @__PURE__ */ new Map();
    });
  }
  bufferPool(type) {
    return this[type];
  }
  has(url) {
    return FILE_TYPES.some((key) => this[key].has(url));
  }
  get(url) {
    for (const key of FILE_TYPES) {
      if (this[key].has(url)) {
        return this[key].get(url);
      }
    }
  }
  set(url, data, type) {
    const curSize = cachedDataSet.has(data) ? 0 : data.size;
    const totalSize = this.totalSize + curSize;
    if (totalSize < this.maxSize) {
      let bar = type;
      let bufferPool = this.bufferPool(type);
      if (!bufferPool) {
        bar = DEFAULT_POLL;
        bufferPool = this.bufferPool(DEFAULT_POLL);
      }
      bufferPool.set(url, data);
      this.totalSize = totalSize;
      this.recorder[bar] += curSize;
      return true;
    }
    return false;
  }
  clear(type) {
    if (typeof type === "string") {
      const cacheBox = this.bufferPool(type);
      if (cacheBox && cacheBox instanceof Map) {
        const size = this.recorder[type];
        this.totalSize -= size;
        this.recorder[type] = 0;
        cacheBox.clear();
      }
    } else {
      FILE_TYPES.forEach((key) => {
        this[key].clear();
        this.recorder[key] = 0;
      });
      this.totalSize = 0;
    }
  }
};

// src/index.ts
var CrossOriginCredentials = /* @__PURE__ */ ((CrossOriginCredentials2) => {
  CrossOriginCredentials2["anonymous"] = "same-origin";
  CrossOriginCredentials2["use-credentials"] = "include";
  return CrossOriginCredentials2;
})(CrossOriginCredentials || {});
var Loader = class {
  constructor(options) {
    this.personalId = _garfish_utils__WEBPACK_IMPORTED_MODULE_1__.__LOADER_FLAG__;
    this.StyleManager = StyleManager;
    this.ModuleManager = ModuleManager;
    this.TemplateManager = TemplateManager;
    this.JavaScriptManager = JavaScriptManager;
    this.hooks = new _garfish_hooks__WEBPACK_IMPORTED_MODULE_0__.PluginSystem({
      error: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_0__.SyncHook(),
      loaded: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_0__.SyncWaterfallHook("loaded"),
      clear: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_0__.SyncWaterfallHook("clear"),
      beforeLoad: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_0__.SyncWaterfallHook("beforeLoad"),
      fetch: new _garfish_hooks__WEBPACK_IMPORTED_MODULE_0__.AsyncHook("fetch")
    });
    this.options = options || {};
    this.loadingList = /* @__PURE__ */ Object.create(null);
    this.cacheStore = /* @__PURE__ */ Object.create(null);
  }
  setOptions(options) {
    this.options = __spreadValues(__spreadValues({}, this.options), options);
  }
  clear(scope, fileType) {
    const appCacheContainer = this.cacheStore[scope];
    if (appCacheContainer) {
      appCacheContainer.clear(fileType);
      this.hooks.lifecycle.clear.emit({ scope, fileType });
    }
  }
  clearAll(fileType) {
    for (const scope in this.cacheStore) {
      this.clear(scope, fileType);
    }
  }
  usePlugin(options) {
    this.hooks.usePlugin(options);
  }
  setLifeCycle(lifeCycle) {
    this.hooks.usePlugin(__spreadValues({
      name: "loader-lifecycle"
    }, lifeCycle));
  }
  loadModule(url) {
    return this.load({
      scope: "modules",
      url,
      isRemoteModule: true
    });
  }
  async load({
    scope,
    url,
    isRemoteModule = false,
    crossOrigin = "anonymous",
    defaultContentType = ""
  }) {
    const { options, loadingList, cacheStore } = this;
    const res = loadingList[url];
    if (res && Object.keys(res).includes(scope)) {
      return (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_1__.macroTask)(res[scope], 4);
    }
    let appCacheContainer = cacheStore[scope];
    if (!appCacheContainer) {
      appCacheContainer = cacheStore[scope] = new AppCacheContainer(options.maxSize);
    }
    if (appCacheContainer.has(url)) {
      return (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_1__.macroTask)(copyResult(appCacheContainer.get(url)), 4);
    } else {
      for (const key in cacheStore) {
        const container = cacheStore[key];
        if (container !== appCacheContainer) {
          if (container.has(url)) {
            const result = container.get(url);
            cachedDataSet.add(result);
            appCacheContainer.set(url, result, result.fileType);
            return (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_1__.macroTask)(copyResult(result), 4);
          }
        }
      }
    }
    const requestConfig = mergeConfig(this, url);
    requestConfig.credentials = CrossOriginCredentials[crossOrigin];
    const resOpts = this.hooks.lifecycle.beforeLoad.emit({
      url,
      scope,
      requestConfig
    });
    const request = getRequest(this.hooks.lifecycle.fetch);
    const loadRes = request(resOpts.url, resOpts.requestConfig).then(({ code, size, result, type }) => {
      let managerCtor, fileType = "";
      if (isRemoteModule) {
        fileType = "module" /* module */;
        managerCtor = this.ModuleManager;
      } else if ((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_1__.isHtmlType)({ type, src: result.url }) || (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_1__.isHtmlType)({
        type: defaultContentType
      })) {
        fileType = "template" /* template */;
        managerCtor = this.TemplateManager;
      } else if ((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_1__.isJsType)({ type: defaultContentType }) || (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_1__.isJsType)({ type, src: result.url })) {
        fileType = "js" /* js */;
        managerCtor = this.JavaScriptManager;
      } else if ((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_1__.isCssType)({ src: result.url, type }) || (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_1__.isCssType)({
        type: defaultContentType
      })) {
        fileType = "css" /* css */;
        managerCtor = this.StyleManager;
      }
      const resourceManager = managerCtor ? new managerCtor(code, result.url) : null;
      const data = this.hooks.lifecycle.loaded.emit({
        result,
        value: {
          url,
          scope,
          resourceManager,
          fileType: fileType || "",
          size: size || code.length,
          code: resourceManager ? "" : code
        }
      });
      fileType && appCacheContainer.set(url, data.value, fileType);
      return copyResult(data.value);
    }).catch((e) => {
      (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) && (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_1__.error)(e);
      this.hooks.lifecycle.error.emit(e, { scope });
      throw e;
    }).finally(() => {
    });
    loadingList[url] ? loadingList[url][scope] = loadRes : loadingList[url] = { [scope]: loadRes };
    return loadRes;
  }
};



/***/ }),

/***/ "./node_modules/.pnpm/@garfish+router@1.16.2/node_modules/@garfish/router/dist/esm/index.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@garfish+router@1.16.2/node_modules/@garfish/router/dist/esm/index.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GarfishRouter: function() { return /* binding */ GarfishRouter; }
/* harmony export */ });
/* harmony import */ var _garfish_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @garfish/utils */ "./node_modules/.pnpm/@garfish+utils@1.16.2/node_modules/@garfish/utils/dist/esm/index.js");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));

// src/index.ts


// src/config.ts
var __GARFISH_ROUTER_UPDATE_FLAG__ = "__GARFISH_ROUTER_UPDATE_FLAG__";
var __GARFISH_ROUTER_FLAG__ = "__GARFISH_ROUTER_FLAG__";
var __GARFISH_BEFORE_ROUTER_EVENT__ = "garfish:before-routing-event";
var RouterConfig = {
  basename: "/",
  current: {
    fullPath: "/",
    path: "/",
    matched: [],
    query: {},
    state: {},
    href: ""
  },
  apps: [],
  beforeEach: (to, from, next) => next(),
  afterEach: (to, from, next) => next(),
  active: () => Promise.resolve(),
  deactive: () => Promise.resolve(),
  routerChange: () => {
  },
  autoRefreshApp: true,
  listening: true
};
function set(field, value) {
  RouterConfig[field] = value;
}
function setRouterConfig(options) {
  Object.assign(RouterConfig, options);
}

// src/utils/urlUt.ts
function parseQuery(query = "") {
  const res = {};
  if (query) {
    query.slice(1).split("&").map((item) => {
      const pairs = item.split("=");
      res[pairs[0]] = pairs;
    });
  }
  return res;
}
function getPath(basename = "/", pathname) {
  if (basename === "/" || basename === "") {
    return pathname || location.pathname;
  } else {
    return (pathname || location.pathname).replace(new RegExp(`^/?${basename}`), "");
  }
}
function getAppRootPath(appInfo) {
  const path = getPath(appInfo.basename, location.pathname);
  let appRootPath = appInfo.basename === "/" ? "" : appInfo.basename || "";
  if (typeof appInfo.activeWhen === "string") {
    appRootPath += appInfo.activeWhen;
  } else {
    appRootPath += path.split("").reduce((pre, next) => {
      if (typeof appInfo.activeWhen === "function" && !appInfo.activeWhen(pre))
        return pre + next;
      return pre;
    }, "");
  }
  return appRootPath;
}

// src/utils/index.ts
async function asyncForEach(arr, callback) {
  const length = arr.length;
  let k = 0;
  while (k < length) {
    const kValue = arr[k];
    await callback(kValue, k, arr);
    k++;
  }
}
function toMiddleWare(to, from, cb) {
  return new Promise((resolve, reject) => {
    try {
      cb(to, from, resolve);
    } catch (err) {
      reject(err);
    }
  });
}
function createEvent(type) {
  let e;
  if (navigator.userAgent.indexOf("MSIE") !== -1 || navigator.appVersion.indexOf("Trident/") > 0) {
    e = document.createEvent("UIEvents");
    e.initUIEvent(type.toLowerCase(), true, false, window, 0);
  } else {
    e = new Event(type.toLowerCase());
  }
  return e;
}

// src/utils/customEvent.ts
var NativeCustomEvent = typeof __webpack_require__.g !== "undefined" ? __webpack_require__.g == null ? void 0 : __webpack_require__.g.CustomEvent : null;
function useNative() {
  try {
    const p = new NativeCustomEvent("cat", { detail: { foo: "bar" } });
    return p.type === "cat" && p.detail.foo === "bar";
  } catch (e) {
  }
  return false;
}
var CustomEvent;
if (NativeCustomEvent && useNative()) {
  CustomEvent = NativeCustomEvent;
} else if (typeof document !== "undefined" && typeof document.createEvent === "function") {
  CustomEvent = function(type, params) {
    params = params || { bubbles: false, cancelable: false, detail: null };
    const evt = document.createEvent("CustomEvent");
    evt.initCustomEvent(type, params.bubbles || false, params.cancelable || false, params.detail || null);
    return evt;
  };
} else {
  CustomEvent = function(type, params) {
    const e = document.createEventObject();
    e.type = type;
    if (params) {
      e.bubbles = Boolean(params.bubbles);
      e.cancelable = Boolean(params.cancelable);
      e.detail = params.detail;
    } else {
      e.bubbles = false;
      e.cancelable = false;
      e.detail = void 0;
    }
    return e;
  };
}
var customEvent_default = CustomEvent;

// src/utils/navEvent.ts

function createPopStateEvent(state, originalMethodName) {
  let evt;
  try {
    evt = new PopStateEvent("popstate", { state });
  } catch (err) {
    evt = document.createEvent("PopStateEvent");
    evt.initPopStateEvent("popstate", false, false, state);
  }
  evt.garfish = true;
  evt.garfishTrigger = originalMethodName;
  return evt;
}
var callCapturedEventListeners = (type) => {
  const eventArguments = createPopStateEvent(window.history.state, type);
  window.dispatchEvent(eventArguments);
};
var handlerParams = function(path, query, basename) {
  if (!path || typeof path !== "string")
    return "";
  let url = path;
  if (url[0] !== "/")
    url = "/" + url;
  if (Object.prototype.toString.call(query) === "[object Object]") {
    const qs = Object.keys(query).map((key) => `${key}=${query[key]}`).join("&");
    url += qs ? "?" + qs : "";
  }
  if (basename !== "/")
    url = basename + url;
  if (url[0] !== "/")
    url = "/" + url;
  return url;
};
var push = ({
  path,
  query,
  basename
}) => {
  if (!basename)
    basename = RouterConfig.basename || "/";
  let url = null;
  if ((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.validURL)(path)) {
    url = /(^https?:)|(^\/\/)/.test(path) ? path : `//${path}`;
  } else {
    url = handlerParams(path, query, basename);
  }
  history.pushState(__spreadValues({ [__GARFISH_ROUTER_UPDATE_FLAG__]: true }, history.state), "", url);
};
var replace = ({
  path,
  query,
  basename
}) => {
  if (!basename)
    basename = RouterConfig.basename || "/";
  let url = null;
  if ((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.validURL)(path)) {
    url = /^(https?:)(\/\/)/.test(path) ? path : `//${path}`;
  } else {
    url = handlerParams(path, query, basename);
  }
  history.replaceState(__spreadValues({ [__GARFISH_ROUTER_UPDATE_FLAG__]: true }, history.state), "", url);
};

// src/linkTo.ts
var hasActive = (activeWhen, path) => {
  if (typeof activeWhen === "string") {
    if (activeWhen[0] !== "/")
      activeWhen = `/${activeWhen}`;
    if (activeWhen === "/" && path === activeWhen)
      return true;
    const activeWhenArr = activeWhen.split("/");
    const pathArr = path.split("/");
    let flag = true;
    activeWhenArr.forEach((pathItem, index) => {
      if (pathItem && pathItem !== pathArr[index]) {
        flag = false;
      }
    });
    return flag;
  } else {
    return activeWhen(path);
  }
};
var linkTo = async ({
  toRouterInfo,
  fromRouterInfo,
  eventType
}) => {
  const {
    current,
    apps,
    deactive,
    active,
    notMatch,
    beforeEach: beforeEach2,
    afterEach: afterEach2,
    autoRefreshApp
  } = RouterConfig;
  const deactiveApps = current.matched.filter((appInfo) => !hasActive(appInfo.activeWhen, getPath(appInfo.basename, location.pathname)));
  const activeApps = apps.filter((appInfo) => {
    return hasActive(appInfo.activeWhen, getPath(appInfo.basename, location.pathname));
  });
  const needToActive = activeApps.filter(({ name }) => {
    return !current.matched.some(({ name: cName }) => name === cName);
  });
  const to = __spreadProps(__spreadValues({}, toRouterInfo), {
    matched: needToActive
  });
  const from = __spreadProps(__spreadValues({}, fromRouterInfo), {
    matched: deactiveApps
  });
  await toMiddleWare(to, from, beforeEach2);
  if (current.matched.length > 0) {
    await asyncForEach(deactiveApps, async (appInfo) => await deactive(appInfo, getPath(appInfo.basename, location.pathname)));
  }
  setRouterConfig({
    current: {
      path: getPath(RouterConfig.basename),
      fullPath: location.pathname,
      href: location.href,
      matched: activeApps,
      state: history.state,
      query: parseQuery(location.search)
    }
  });
  const curState = window.history.state || {};
  if (eventType !== "popstate" && (curState[__GARFISH_ROUTER_UPDATE_FLAG__] || autoRefreshApp)) {
    callCapturedEventListeners(eventType);
  }
  await asyncForEach(needToActive, async (appInfo) => {
    const appRootPath = getAppRootPath(appInfo);
    await active(appInfo, appRootPath);
  });
  if (activeApps.length === 0 && notMatch)
    notMatch(location.pathname);
  await toMiddleWare(to, from, afterEach2);
};

// src/agentRouter.ts
var normalAgent = () => {
  const addRouterListener = function() {
    window.addEventListener(__GARFISH_BEFORE_ROUTER_EVENT__, function(env) {
      RouterConfig.routerChange && RouterConfig.routerChange(location.pathname);
      linkTo(env.detail);
    });
  };
  if (!window[__GARFISH_ROUTER_FLAG__]) {
    const rewrite = function(type) {
      const hapi = history[type];
      return function() {
        const urlBefore = window.location.pathname + window.location.hash;
        const stateBefore = history == null ? void 0 : history.state;
        const res = hapi.apply(this, arguments);
        const urlAfter = window.location.pathname + window.location.hash;
        const stateAfter = history == null ? void 0 : history.state;
        const e = createEvent(type);
        e.arguments = arguments;
        if (urlBefore !== urlAfter || JSON.stringify(stateBefore) !== JSON.stringify(stateAfter)) {
          window.dispatchEvent(new customEvent_default(__GARFISH_BEFORE_ROUTER_EVENT__, {
            detail: {
              toRouterInfo: {
                fullPath: urlAfter,
                href: location.href,
                query: parseQuery(location.search),
                path: getPath(RouterConfig.basename, urlAfter),
                state: stateAfter
              },
              fromRouterInfo: {
                fullPath: urlBefore,
                query: RouterConfig.current.query,
                href: RouterConfig.current.href,
                path: getPath(RouterConfig.basename, urlBefore),
                state: stateBefore
              },
              eventType: type
            }
          }));
        }
        return res;
      };
    };
    history.pushState = rewrite("pushState");
    history.replaceState = rewrite("replaceState");
    window.addEventListener("popstate", function(event) {
      if (event && typeof event === "object" && event.garfish)
        return;
      if (history.state && typeof history.state === "object")
        delete history.state[__GARFISH_ROUTER_UPDATE_FLAG__];
      window.dispatchEvent(new customEvent_default(__GARFISH_BEFORE_ROUTER_EVENT__, {
        detail: {
          toRouterInfo: {
            fullPath: location.pathname,
            href: location.href,
            query: parseQuery(location.search),
            path: getPath(RouterConfig.basename)
          },
          fromRouterInfo: {
            fullPath: RouterConfig.current.fullPath,
            path: getPath(RouterConfig.basename, RouterConfig.current.path),
            href: RouterConfig.current.href,
            query: RouterConfig.current.query
          },
          eventType: "popstate"
        }
      }));
    }, false);
    window[__GARFISH_ROUTER_FLAG__] = true;
  }
  addRouterListener();
};
var initRedirect = () => {
  linkTo({
    toRouterInfo: {
      fullPath: location.pathname,
      href: location.href,
      path: getPath(RouterConfig.basename),
      query: parseQuery(location.search),
      state: history.state
    },
    fromRouterInfo: {
      fullPath: "/",
      href: "",
      path: "/",
      query: {},
      state: {}
    },
    eventType: "pushState"
  });
};
var listen = () => {
  normalAgent();
  initRedirect();
};

// src/context.ts
var beforeEach = (hook) => {
  set("beforeEach", hook);
};
var afterEach = (hook) => {
  set("afterEach", hook);
};
var routerChange = (hook) => {
  set("routerChange", hook);
};
var registerRouter = (Apps) => {
  const unregisterApps = Apps.filter((app) => !RouterConfig.apps.some((item) => app.name === item.name));
  set("apps", RouterConfig.apps.concat(unregisterApps));
};
var listenRouterAndReDirect = ({
  apps,
  basename = "/",
  autoRefreshApp,
  active,
  deactive,
  notMatch,
  listening = true
}) => {
  registerRouter(apps);
  setRouterConfig({
    basename,
    autoRefreshApp,
    active,
    deactive,
    notMatch,
    listening
  });
  listen();
};
var Router = {
  push,
  replace,
  beforeEach,
  afterEach,
  registerRouter,
  routerChange,
  listenRouterAndReDirect,
  setRouterConfig,
  routerConfig: RouterConfig
};
var context_default = Router;

// src/index.ts
function GarfishRouter(_args) {
  return function(Garfish) {
    Garfish.apps = {};
    Garfish.router = context_default;
    return {
      name: "router",
      version: "1.16.2",
      bootstrap(options) {
        let activeApp = null;
        const unmounts = {};
        const { basename } = options;
        const { autoRefreshApp = true, onNotMatchRouter = () => null } = Garfish.options;
        async function active(appInfo, rootPath = "/") {
          (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.routerLog)(`${appInfo.name} active`, {
            appInfo,
            rootPath,
            listening: RouterConfig.listening
          });
          if (!RouterConfig.listening)
            return;
          const { name, active: active2, cache = true } = appInfo;
          if (active2)
            return active2(appInfo, rootPath);
          appInfo.rootPath = rootPath;
          const currentApp = activeApp = (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.createKey)();
          const app = await Garfish.loadApp(appInfo.name, {
            cache,
            basename: rootPath,
            entry: appInfo.entry,
            domGetter: appInfo.domGetter
          });
          if (app) {
            app.appInfo.basename = rootPath;
            const call = async (app2, isRender) => {
              if (!app2)
                return;
              const isDes = cache && app2.mounted;
              if (isRender) {
                return await app2[isDes ? "show" : "mount"]();
              } else {
                return app2[isDes ? "hide" : "unmount"]();
              }
            };
            Garfish.apps[name] = app;
            unmounts[name] = () => {
              if (app.mounting) {
                delete Garfish.cacheApps[name];
              }
              call(app, false);
            };
            if (currentApp === activeApp) {
              await call(app, true);
            }
          }
        }
        async function deactive(appInfo, rootPath) {
          (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.routerLog)(`${appInfo.name} deactive`, {
            appInfo,
            rootPath
          });
          activeApp = null;
          const { name, deactive: deactive2 } = appInfo;
          if (deactive2)
            return deactive2(appInfo, rootPath);
          const unmount = unmounts[name];
          unmount && unmount();
          delete Garfish.apps[name];
          const needToDeleteApps = context_default.routerConfig.apps.filter((app) => {
            if (appInfo.rootPath === app.basename)
              return true;
          });
          if (needToDeleteApps.length > 0) {
            needToDeleteApps.forEach((app) => {
              delete Garfish.appInfos[app.name];
              delete Garfish.cacheApps[app.name];
            });
            context_default.setRouterConfig({
              apps: context_default.routerConfig.apps.filter((app) => {
                return !needToDeleteApps.some((needDelete) => app.name === needDelete.name);
              })
            });
          }
        }
        const apps = Object.values(Garfish.appInfos);
        const appList = apps.filter((app) => {
          if (!app.basename)
            app.basename = basename;
          return !!app.activeWhen;
        });
        const listenOptions = {
          basename,
          active,
          deactive,
          autoRefreshApp,
          notMatch: onNotMatchRouter,
          apps: appList,
          listening: true
        };
        (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.routerLog)("listenRouterAndReDirect", listenOptions);
        listenRouterAndReDirect(listenOptions);
      },
      registerApp(appInfos) {
        const appList = Object.values(appInfos);
        context_default.registerRouter(appList.filter((app) => !!app.activeWhen));
        if (!Garfish.running)
          return;
        (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_0__.routerLog)("registerApp initRedirect", appInfos);
        initRedirect();
      }
    };
  };
}



/***/ }),

/***/ "./node_modules/.pnpm/@garfish+utils@1.16.2/node_modules/@garfish/utils/dist/esm/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@garfish+utils@1.16.2/node_modules/@garfish/utils/dist/esm/index.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DOMApis: function() { return /* binding */ DOMApis; },
/* harmony export */   Lock: function() { return /* binding */ Lock; },
/* harmony export */   Queue: function() { return /* binding */ Queue; },
/* harmony export */   __GARFISH_FLAG__: function() { return /* binding */ __GARFISH_FLAG__; },
/* harmony export */   __LOADER_FLAG__: function() { return /* binding */ __LOADER_FLAG__; },
/* harmony export */   __MockBody__: function() { return /* binding */ __MockBody__; },
/* harmony export */   __MockHead__: function() { return /* binding */ __MockHead__; },
/* harmony export */   __MockHtml__: function() { return /* binding */ __MockHtml__; },
/* harmony export */   __REMOVE_NODE__: function() { return /* binding */ __REMOVE_NODE__; },
/* harmony export */   _extends: function() { return /* binding */ _extends; },
/* harmony export */   appContainerId: function() { return /* binding */ appContainerId; },
/* harmony export */   assert: function() { return /* binding */ assert; },
/* harmony export */   callTestCallback: function() { return /* binding */ callTestCallback; },
/* harmony export */   changeTagNameToLowerCase: function() { return /* binding */ changeTagNameToLowerCase; },
/* harmony export */   computeErrorUrl: function() { return /* binding */ computeErrorUrl; },
/* harmony export */   computeStackTraceFromStackProp: function() { return /* binding */ computeStackTraceFromStackProp; },
/* harmony export */   coreLog: function() { return /* binding */ coreLog; },
/* harmony export */   createAppContainer: function() { return /* binding */ createAppContainer; },
/* harmony export */   createKey: function() { return /* binding */ createKey; },
/* harmony export */   createSourcemap: function() { return /* binding */ createSourcemap; },
/* harmony export */   deepMerge: function() { return /* binding */ deepMerge; },
/* harmony export */   def: function() { return /* binding */ def; },
/* harmony export */   error: function() { return /* binding */ error; },
/* harmony export */   evalWithEnv: function() { return /* binding */ evalWithEnv; },
/* harmony export */   filterAndWrapEventListener: function() { return /* binding */ filterAndWrapEventListener; },
/* harmony export */   filterUndefinedVal: function() { return /* binding */ filterUndefinedVal; },
/* harmony export */   findTarget: function() { return /* binding */ findTarget; },
/* harmony export */   getGarfishDebugInstanceName: function() { return /* binding */ getGarfishDebugInstanceName; },
/* harmony export */   getParameterByName: function() { return /* binding */ getParameterByName; },
/* harmony export */   getRenderNode: function() { return /* binding */ getRenderNode; },
/* harmony export */   getSourceURL: function() { return /* binding */ getSourceURL; },
/* harmony export */   getType: function() { return /* binding */ getType; },
/* harmony export */   hasOwn: function() { return /* binding */ hasOwn; },
/* harmony export */   haveSourcemap: function() { return /* binding */ haveSourcemap; },
/* harmony export */   hookObjectProperty: function() { return /* binding */ hookObjectProperty; },
/* harmony export */   idleCallback: function() { return /* binding */ idleCallback; },
/* harmony export */   inBrowser: function() { return /* binding */ inBrowser; },
/* harmony export */   internFunc: function() { return /* binding */ internFunc; },
/* harmony export */   isAbsolute: function() { return /* binding */ isAbsolute; },
/* harmony export */   isCss: function() { return /* binding */ isCss; },
/* harmony export */   isCssType: function() { return /* binding */ isCssType; },
/* harmony export */   isGarfishConfigType: function() { return /* binding */ isGarfishConfigType; },
/* harmony export */   isHtml: function() { return /* binding */ isHtml; },
/* harmony export */   isHtmlType: function() { return /* binding */ isHtmlType; },
/* harmony export */   isJs: function() { return /* binding */ isJs; },
/* harmony export */   isJsType: function() { return /* binding */ isJsType; },
/* harmony export */   isJsonp: function() { return /* binding */ isJsonp; },
/* harmony export */   isObject: function() { return /* binding */ isObject; },
/* harmony export */   isPlainObject: function() { return /* binding */ isPlainObject; },
/* harmony export */   isPrimitive: function() { return /* binding */ isPrimitive; },
/* harmony export */   isPromise: function() { return /* binding */ isPromise; },
/* harmony export */   macroTask: function() { return /* binding */ macroTask; },
/* harmony export */   makeMap: function() { return /* binding */ makeMap; },
/* harmony export */   makeMapObject: function() { return /* binding */ makeMapObject; },
/* harmony export */   mapObject: function() { return /* binding */ mapObject; },
/* harmony export */   nextTick: function() { return /* binding */ nextTick; },
/* harmony export */   noop: function() { return /* binding */ noop; },
/* harmony export */   objectToString: function() { return /* binding */ objectToString; },
/* harmony export */   parseContentType: function() { return /* binding */ parseContentType; },
/* harmony export */   remove: function() { return /* binding */ remove; },
/* harmony export */   routerLog: function() { return /* binding */ routerLog; },
/* harmony export */   safari13Deal: function() { return /* binding */ safari13Deal; },
/* harmony export */   safeWrapper: function() { return /* binding */ safeWrapper; },
/* harmony export */   setDocCurrentScript: function() { return /* binding */ setDocCurrentScript; },
/* harmony export */   sourceListTags: function() { return /* binding */ sourceListTags; },
/* harmony export */   sourceNode: function() { return /* binding */ sourceNode; },
/* harmony export */   supportWasm: function() { return /* binding */ supportWasm; },
/* harmony export */   templateParse: function() { return /* binding */ templateParse; },
/* harmony export */   toBase64: function() { return /* binding */ toBase64; },
/* harmony export */   toBoolean: function() { return /* binding */ toBoolean; },
/* harmony export */   toWsProtocol: function() { return /* binding */ toWsProtocol; },
/* harmony export */   transformUrl: function() { return /* binding */ transformUrl; },
/* harmony export */   unique: function() { return /* binding */ unique; },
/* harmony export */   validURL: function() { return /* binding */ validURL; },
/* harmony export */   warn: function() { return /* binding */ warn; }
/* harmony export */ });
/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ "./node_modules/.pnpm/debug@4.3.4_supports-color@5.5.0/node_modules/debug/src/browser.js");
/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(debug__WEBPACK_IMPORTED_MODULE_0__);
/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js");
// src/utils.ts
var noop = () => {
};
var objectToString = Object.prototype.toString;
var supportWasm = typeof WebAssembly === "object";
var idleCallback = window.requestIdleCallback || window.requestAnimationFrame;
function createKey() {
  return Math.random().toString(36).substr(2, 8);
}
function isObject(val) {
  return val && typeof val === "object";
}
function isPlainObject(val) {
  return objectToString.call(val) === "[object Object]";
}
function getType(val) {
  return objectToString.call(val).slice(8, -1).toLowerCase();
}
function isPromise(obj) {
  return isObject(obj) && typeof obj.then === "function";
}
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}
function def(obj, key, value) {
  Object.defineProperty(obj, key, {
    get: () => value,
    set: (val) => {
      if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
        if (val !== value) {
          error(`Try to modify a read-only property ${key}`);
        }
      }
    },
    configurable: (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) ? true : false
  });
}
function makeMap(list) {
  const map = /* @__PURE__ */ Object.create(null);
  for (let i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return (val) => !!map[val];
}
function makeMapObject(list) {
  const map = /* @__PURE__ */ Object.create(null);
  for (let i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return map;
}
function inBrowser() {
  return typeof window !== "undefined";
}
var warnPrefix = "[Garfish warning]";
var processError = (error2, fn) => {
  try {
    if (typeof error2 === "string") {
      error2 = `${warnPrefix}: ${error2}

`;
      fn(error2, true);
    } else if (error2 instanceof Error) {
      if (!error2.message.startsWith(warnPrefix)) {
        error2.message = `${warnPrefix}: ${error2.message}`;
      }
      fn(error2, false);
    }
  } catch (e) {
    fn(error2, typeof error2 === "string");
  }
};
function warn(msg) {
  processError(msg, (e, isString) => {
    const warnMsg = isString ? e : e.message;
    if (false) {}
    console.warn(warnMsg);
  });
}
function error(error2) {
  processError(error2, (e, isString) => {
    if (isString) {
      throw new Error(e);
    } else {
      throw e;
    }
  });
}
function validURL(str) {
  const pattern = new RegExp("^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$", "i");
  return !!pattern.test(str);
}
function internFunc(internalizeString) {
  const temporaryOb = {};
  temporaryOb[internalizeString] = true;
  return Object.keys(temporaryOb)[0];
}
function evalWithEnv(code, params, context, useStrict = false) {
  const keys = Object.keys(params);
  const nativeWindow = (0, eval)("window;");
  const randomValKey = "__garfish__exec_temporary__";
  const values = keys.map((k) => `window.${randomValKey}.${k}`);
  const contextKey = "__garfish_exec_temporary_context__";
  try {
    nativeWindow[randomValKey] = params;
    nativeWindow[contextKey] = context;
    const evalInfo = [
      `;(function(${keys.join(",")}){${useStrict ? '"use strict";' : ""}`,
      `
}).call(window.${contextKey},${values.join(",")});`
    ];
    const internalizeString = internFunc(evalInfo[0] + code + evalInfo[1]);
    (0, eval)(internalizeString);
  } catch (e) {
    throw e;
  } finally {
    delete nativeWindow[randomValKey];
    delete nativeWindow[contextKey];
  }
}
function safeWrapper(callback, disableWarn) {
  try {
    callback();
  } catch (e) {
    !disableWarn && (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) && warn(e);
  }
}
function nextTick(cb) {
  Promise.resolve().then(cb);
}
function assert(condition, msg) {
  if (!condition) {
    error(msg || "unknow reason");
  }
}
function toBoolean(val) {
  if (val === "")
    return true;
  if (val === "false")
    return false;
  return Boolean(val);
}
function remove(list, el) {
  if (Array.isArray(list)) {
    const i = list.indexOf(el);
    if (i > -1) {
      list.splice(i, 1);
      return true;
    }
    return false;
  } else {
    if (list.has(el)) {
      list.delete(el);
      return true;
    }
    return false;
  }
}
function callTestCallback(obj, ...args) {
  if (false) {}
}
function unique(list) {
  const res = [];
  for (let i = 0, len = list.length; i < len; i++) {
    for (let j = i + 1; j < len; j++) {
      if (list[i] === list[j]) {
        j = ++i;
      }
    }
    res.push(list[i]);
  }
  return  false ? 0 : res;
}
function isPrimitive(val) {
  return val === null || typeof val === "string" || typeof val === "number" || typeof val === "bigint" || typeof val === "symbol" || typeof val === "boolean" || typeof val === "undefined" || objectToString.call(val) === "[object RegExp]";
}
function filterUndefinedVal(ob) {
  return Object.keys(ob).reduce((res, key) => {
    if (res[key] === void 0) {
      delete res[key];
    }
    return res;
  }, ob);
}
function deepMerge(o, n, dp, ignores) {
  const leftRecord = /* @__PURE__ */ new WeakMap();
  const rightRecord = /* @__PURE__ */ new WeakMap();
  const valueRecord = /* @__PURE__ */ new WeakMap();
  const ignoresMap = makeMap(ignores || []);
  const isArray = Array.isArray;
  const isAllRefs = (a, b) => {
    if (leftRecord.has(a) || rightRecord.has(a)) {
      return leftRecord.has(b) || rightRecord.has(b);
    }
  };
  const clone = (v) => {
    if (isPrimitive(v) || typeof v === "function") {
      return v;
    } else if (valueRecord.has(v)) {
      return valueRecord.get(v);
    } else if (leftRecord.has(v)) {
      return leftRecord.get(v);
    } else if (rightRecord.has(v)) {
      return rightRecord.get(v);
    } else if (isArray(v)) {
      if (dp)
        v = unique(v);
      const arr = [];
      valueRecord.set(v, arr);
      for (let i = 0, len = v.length; i < len; i++) {
        arr[i] = clone(v[i]);
      }
      return arr;
    } else if (typeof v === "object") {
      const obj = {};
      valueRecord.set(v, obj);
      const keys = Reflect.ownKeys(v);
      keys.forEach((key) => obj[key] = clone(v[key]));
      return obj;
    }
  };
  const setValue = (r, k, key) => {
    if (r.has(k)) {
      return r.get(k);
    } else {
      if (ignoresMap[key]) {
        return k;
      }
      const val = clone(k);
      if (!isPrimitive(val) && typeof val !== "function") {
        r.set(k, val);
      }
      return val;
    }
  };
  const mergeObject = (l, r) => {
    const res = {};
    const leftKeys = Reflect.ownKeys(l);
    const rightKeys = Reflect.ownKeys(r);
    leftRecord.set(l, res);
    rightRecord.set(r, res);
    leftKeys.forEach((key) => {
      const lv = l[key];
      const rv = r[key];
      if (hasOwn(r, key)) {
        if (isArray(lv) && isArray(rv)) {
          const item = clone([...lv, ...rv]);
          res[key] = dp ? unique(item) : item;
        } else if (isPlainObject(lv) && isPlainObject(rv)) {
          res[key] = isAllRefs(lv, rv) ? leftRecord.get(lv) : mergeObject(lv, rv);
        } else {
          res[key] = setValue(rightRecord, rv, key);
        }
      } else {
        res[key] = setValue(leftRecord, lv, key);
      }
    });
    rightKeys.forEach((key) => {
      if (hasOwn(res, key))
        return;
      res[key] = setValue(rightRecord, r[key], key);
    });
    return res;
  };
  return mergeObject(o, n);
}
function isAbsolute(url) {
  if (!/^[a-zA-Z]:\\/.test(url)) {
    if (/^[a-zA-Z][a-zA-Z\d+\-.]*:/.test(url)) {
      return true;
    }
  }
  return false;
}
function transformUrl(resolvePath, curPath) {
  const baseUrl = new URL(resolvePath, location.href);
  const realPath = new URL(curPath, baseUrl.href);
  return realPath.href;
}
function toWsProtocol(url) {
  const data = new URL(url);
  if (data.protocol.startsWith("http")) {
    data.protocol = data.protocol === "https:" ? "wss:" : "ws:";
    return data.toString();
  }
  return url;
}
function findTarget(el, selectors) {
  for (const s of selectors) {
    const target = el.querySelector(s);
    if (target)
      return target;
  }
  return el;
}
function setDocCurrentScript(target, code, define, url, async, defer, originScript) {
  if (!target)
    return noop;
  const el = document.createElement("script");
  if (!url && code) {
    el.textContent = code;
  }
  if (url) {
    el.src = url;
  }
  originScript && originScript.getAttributeNames().forEach((attribute) => {
    el.setAttribute(attribute, originScript.getAttribute(attribute) || "");
  });
  if (async) {
    el.setAttribute("async", "true");
  }
  if (defer) {
    el.setAttribute("defer", "true");
  }
  const set = (val) => {
    try {
      if (define) {
        Object.defineProperty(target, "currentScript", {
          value: val,
          writable: true,
          configurable: true
        });
      } else {
        target.currentScript = val;
      }
    } catch (e) {
      if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
        warn(e);
      }
    }
  };
  set(el);
  return () => safeWrapper(() => delete target.currentScript, true);
}
function _extends(d, b) {
  Object.setPrototypeOf(d, b);
  function fNOP() {
    this.constructor = d;
  }
  if (b === null) {
    d.prototype = Object.create(b);
  } else {
    if (b.prototype)
      fNOP.prototype = b.prototype;
    d.prototype = new fNOP();
  }
}
function mapObject(obj, fn) {
  const destObject = {};
  for (const key in obj) {
    if (obj.hasOwnProperty(key)) {
      destObject[key] = fn(key, obj[key]);
    }
  }
  return destObject;
}
function toBase64(input, mimeType) {
  return new Promise((resolve) => {
    const reader = new FileReader();
    reader.readAsDataURL(new Blob([input], { type: mimeType }));
    reader.onload = () => resolve(reader.result);
  });
}
var hookObjectProperty = (obj, key, hookFunc) => {
  return (...params) => {
    if (!obj) {
      return noop;
    }
    const origin = obj[key];
    const hookedUnsafe = hookFunc(origin, ...params);
    let hooked = hookedUnsafe;
    if (typeof hooked === "function") {
      hooked = function(...args) {
        try {
          return hookedUnsafe.apply(this, args);
        } catch (e) {
          return typeof origin === "function" && origin.apply(this, args);
        }
      };
    }
    obj[key] = hooked;
    return (strict) => {
      if (!strict || hooked === obj[key]) {
        obj[key] = origin;
      }
    };
  };
};
function getParameterByName(name, url = window.location.href) {
  name = name.replace(/[\[\]]/g, "\\$&");
  const regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"), results = regex.exec(url);
  if (!results)
    return null;
  if (!results[2])
    return "";
  return decodeURIComponent(results[2].replace(/\+/g, " "));
}
function getGarfishDebugInstanceName() {
  const DEBUG_GARFISH_TAG = "__GARFISH_INSTANCE_DEBUG__";
  return localStorage.getItem(DEBUG_GARFISH_TAG) || getParameterByName(DEBUG_GARFISH_TAG);
}
function safari13Deal() {
  let fromSetFlag = false;
  return {
    triggerSet() {
      fromSetFlag = true;
    },
    handleDescriptor(descriptor) {
      if (fromSetFlag === true) {
        fromSetFlag = false;
        if ((descriptor == null ? void 0 : descriptor.writable) === false)
          descriptor.writable = true;
        if ((descriptor == null ? void 0 : descriptor.enumerable) === false)
          descriptor.enumerable = true;
        if ((descriptor == null ? void 0 : descriptor.configurable) === false)
          descriptor.configurable = true;
      }
    }
  };
}
var SOURCEMAP_REG = /[@#] sourceMappingURL=/g;
function haveSourcemap(code) {
  return SOURCEMAP_REG.test(code);
}
async function createSourcemap(code, filename) {
  const content = await toBase64(JSON.stringify({
    version: 3,
    sources: [filename],
    sourcesContent: [code],
    mappings: ";" + code.split("\n").map(() => "AACA").join(";")
  }));
  return `//@ sourceMappingURL=${content}`;
}
function getSourceURL(url) {
  if (url instanceof URL)
    return url.href;
  if (url instanceof Request)
    return url.url;
  return url.startsWith("/") ? `${location.origin}${url}` : url;
}
function macroTask(value, time = 0) {
  return new Promise((resolve) => {
    setTimeout(() => resolve(value), time);
  });
}

// src/queue.ts
var Queue = class {
  constructor() {
    this.fx = [];
    this.init = true;
    this.lock = false;
    this.finishDefers = /* @__PURE__ */ new Set();
  }
  next() {
    if (!this.lock) {
      this.lock = true;
      if (this.fx.length === 0) {
        this.init = true;
        this.finishDefers.forEach((d) => d.resolve());
        this.finishDefers.clear();
      } else {
        const fn = this.fx.shift();
        if (fn) {
          fn(() => {
            this.lock = false;
            this.next();
          });
        }
      }
    }
  }
  add(fn) {
    this.fx.push(fn);
    if (this.init) {
      this.lock = false;
      this.init = false;
      this.next();
    }
  }
  awaitCompletion() {
    if (this.init)
      return Promise.resolve();
    const defer = {};
    this.finishDefers.add(defer);
    return new Promise((resolve, reject) => {
      defer.resolve = resolve;
      defer.reject = reject;
    });
  }
};

// src/sentry.ts
var chrome = /^\s*at (?:(.*?) ?\()?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\/).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
var gecko = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js)|\/[\w\-. /=]+)(?::(\d+))?(?::(\d+))?\s*$/i;
var winjs = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;
var geckoEval = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;
var chromeEval = /\((\S*)(?::(\d+))(?::(\d+))\)/;
var UNKNOWN_FUNCTION = "?";
function extractMessage(ex) {
  const message = ex && ex.message;
  if (!message) {
    return "No error message";
  }
  if (message.error && typeof message.error.message === "string") {
    return message.error.message;
  }
  return message;
}
function computeStackTraceFromStackProp(ex) {
  if (!ex || !ex.stack) {
    return null;
  }
  const stack = [];
  const lines = ex.stack.split("\n");
  let isEval;
  let submatch;
  let parts;
  let element;
  for (let i = 0; i < lines.length; ++i) {
    if (parts = chrome.exec(lines[i])) {
      const isNative = parts[2] && parts[2].indexOf("native") === 0;
      isEval = parts[2] && parts[2].indexOf("eval") === 0;
      if (isEval && (submatch = chromeEval.exec(parts[2]))) {
        parts[2] = submatch[1];
      }
      let url = parts[2] && parts[2].indexOf("address at ") === 0 ? parts[2].substr("address at ".length) : parts[2];
      let func = parts[1] || UNKNOWN_FUNCTION;
      const isSafariExtension = func.indexOf("safari-extension") !== -1;
      const isSafariWebExtension = func.indexOf("safari-web-extension") !== -1;
      if (isSafariExtension || isSafariWebExtension) {
        func = func.indexOf("@") !== -1 ? func.split("@")[0] : UNKNOWN_FUNCTION;
        url = isSafariExtension ? `safari-extension:${url}` : `safari-web-extension:${url}`;
      }
      element = {
        url,
        func,
        args: isNative ? [parts[2]] : [],
        line: parts[3] ? +parts[3] : null,
        column: parts[4] ? +parts[4] : null
      };
    } else if (parts = winjs.exec(lines[i])) {
      element = {
        url: parts[2],
        func: parts[1] || UNKNOWN_FUNCTION,
        args: [],
        line: +parts[3],
        column: parts[4] ? +parts[4] : null
      };
    } else if (parts = gecko.exec(lines[i])) {
      isEval = parts[3] && parts[3].indexOf(" > eval") > -1;
      if (isEval && (submatch = geckoEval.exec(parts[3]))) {
        parts[1] = parts[1] || "eval";
        parts[3] = submatch[1];
        parts[4] = submatch[2];
        parts[5] = "";
      } else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {
        stack[0].column = ex.columnNumber + 1;
      }
      element = {
        url: parts[3],
        func: parts[1] || UNKNOWN_FUNCTION,
        args: parts[2] ? parts[2].split(",") : [],
        line: parts[4] ? +parts[4] : null,
        column: parts[5] ? +parts[5] : null
      };
    } else {
      continue;
    }
    if (!element.func && element.line) {
      element.func = UNKNOWN_FUNCTION;
    }
    stack.push(element);
  }
  if (!stack.length) {
    return null;
  }
  return {
    message: extractMessage(ex),
    name: ex.name,
    stack
  };
}
var sourceListTags = [
  "link",
  "style",
  "script",
  "img",
  "video",
  "audio",
  "iframe"
];
var sourceNode = makeMap(sourceListTags);
function computeErrorUrl(ex) {
  if (ex && ex.filename)
    return ex.filename;
  const res = computeStackTraceFromStackProp(ex);
  if (res) {
    const urls = res.stack.map((item) => {
      return item.url;
    });
    return urls[0] || null;
  } else if (ex && ex.target && ex.target.tagName) {
    const tagName = ex.target.tagName.toLowerCase();
    if (sourceNode(tagName)) {
      return ex.target.src || ex.target.href;
    }
  }
  return null;
}
function filterAndWrapEventListener(type, listener, sourceList) {
  const errorHandler = function(e) {
    if (typeof listener === "function") {
      if (sourceList) {
        console.log("**********", computeErrorUrl(e));
        const res = sourceList.find((item) => {
          return item.indexOf(computeErrorUrl(e)) !== -1;
        });
        if (res) {
          listener(e);
        }
      } else {
        listener(e);
      }
    }
  };
  const unhandledrejection = function(event) {
    event.promise.catch((e) => {
      if (e instanceof Error) {
        errorHandler(e);
      } else {
        if (typeof listener === "function")
          listener(event);
      }
    });
  };
  const filterError = function(event) {
    if (typeof listener === "function") {
      if (type === "unhandledrejection") {
        unhandledrejection(event);
      } else if (type === "error") {
        errorHandler(event);
      } else {
        listener(event);
      }
    }
  };
  return filterError;
}

// src/domApis.ts
var xChar = 120;
var colonChar = 58;
var ns = "http://www.w3.org/2000/svg";
var xlinkNS = "http://www.w3.org/1999/xlink";
var xmlNS = "http://www.w3.org/XML/1998/namespace";
var xlinkPrefix = "xlink";
var SVG_TAGS = "svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view";
var isSVG = makeMap(SVG_TAGS.split(","));
function changeTagNameToLowerCase(tagName) {
  return isSVG(tagName) ? tagName : tagName.toLowerCase();
}
function attributesString(attributes) {
  if (!attributes || attributes.length === 0)
    return "";
  return attributes.reduce((total, { key, value }) => {
    return total + (value ? `${key}="${value}" ` : key);
  }, "");
}
var DOMApis = class {
  constructor(cusDocument) {
    this.document = cusDocument || document;
  }
  isText(node) {
    return node && node.type === "text";
  }
  isNode(node) {
    return node && node.type === "element";
  }
  isCommentNode(node) {
    return node && node.type === "comment";
  }
  isCssLinkNode(node) {
    if (this.isNode(node) && node.tagName === "link") {
      return !!node.attributes.find(({ key, value }) => key === "rel" && value === "stylesheet");
    }
    return false;
  }
  isIconLinkNode(node) {
    if (this.isNode(node) && node.tagName === "link") {
      return !!node.attributes.find(({ key, value }) => key === "rel" && value === "icon");
    }
    return false;
  }
  isPrefetchJsLinkNode(node) {
    if (!this.isNode(node) || node.tagName !== "link")
      return false;
    let hasRelAttr, hasAsAttr;
    for (const { key, value } of node.attributes) {
      if (key === "rel") {
        hasRelAttr = true;
        if (value !== "preload" && value !== "prefetch") {
          return false;
        }
      } else if (key === "as") {
        hasAsAttr = true;
        if (value !== "script")
          return false;
      }
    }
    return Boolean(hasRelAttr && hasAsAttr);
  }
  isRemoteModule(node) {
    if (!this.isNode(node) || node.tagName !== "meta")
      return false;
    let hasNameAttr, hasSrcAttr;
    for (const { key, value } of node.attributes) {
      if (key === "name") {
        hasNameAttr = true;
        if (value !== "garfish-remote-module") {
          return false;
        }
      } else if (key === "src") {
        hasSrcAttr = true;
        if (typeof value === "undefined" || value === "") {
          return false;
        }
      }
    }
    return Boolean(hasNameAttr && hasSrcAttr);
  }
  removeElement(el) {
    const parentNode = el && el.parentNode;
    if (parentNode) {
      parentNode.removeChild(el);
    }
  }
  createElement(node) {
    const { tagName, attributes } = node;
    const el = isSVG(tagName) ? this.document.createElementNS(ns, tagName) : this.document.createElement(tagName);
    this.applyAttributes(el, attributes);
    return el;
  }
  createTextNode(node) {
    return this.document.createTextNode(node.content);
  }
  createStyleNode(content) {
    const el = this.document.createElement("style");
    content && (el.textContent = content);
    this.applyAttributes(el, [{ key: "type", value: "text/css" }]);
    return el;
  }
  createLinkCommentNode(node) {
    if (this.isNode(node)) {
      const ps = attributesString(node.attributes);
      return `<link ${ps.slice(0, -1)}></link>`;
    } else {
      node = node ? `src="${node}" ` : "";
      return this.document.createComment(`<link ${node}execute by garfish(dynamic)></link>`);
    }
  }
  createScriptCommentNode(node) {
    if (this.isNode(node)) {
      const { attributes, children } = node;
      const ps = attributesString(attributes);
      const code = (children == null ? void 0 : children[0]) ? children[0].content : "";
      return this.document.createComment(`<script ${ps} execute by garfish>${code}<\/script>`);
    } else {
      const { src, code } = node;
      const url = src ? `src="${src}" ` : "";
      return this.document.createComment(`<script ${url}execute by garfish(dynamic)>${code}<\/script>`);
    }
  }
  applyAttributes(el, attributes) {
    if (!attributes || attributes.length === 0)
      return;
    for (const { key, value } of attributes) {
      if (key) {
        if (value === null) {
          el.setAttribute(key, "");
        } else if (typeof value === "string") {
          if (key.charCodeAt(0) !== xChar) {
            el.setAttribute(key, value);
          } else if (key.charCodeAt(3) === colonChar) {
            el.setAttributeNS(xmlNS, key, value);
          } else if (key.charCodeAt(5) === colonChar && key.slice(0, 5) === xlinkPrefix) {
            el.setAttributeNS(xlinkNS, key, value);
          } else {
            el.setAttribute(key, value);
          }
        }
      }
    }
  }
};

// src/garfish.ts
var __LOADER_FLAG__ = Symbol.for("__LOADER_FLAG__");
var __GARFISH_FLAG__ = Symbol.for("__GARFISH_FLAG__");
var __MockHtml__ = "__garfishmockhtml__";
var __MockBody__ = "__garfishmockbody__";
var __MockHead__ = "__garfishmockhead__";
var __REMOVE_NODE__ = "__garfishremovenode__";

// src/mimeType.ts
function parseContentType(input) {
  input = input == null ? void 0 : input.trim();
  if (!input)
    return null;
  let idx = 0;
  let type = "";
  let subType = "";
  while (idx < input.length && input[idx] !== "/") {
    type += input[idx];
    idx++;
  }
  if (type.length === 0 || idx >= input.length) {
    return null;
  }
  idx++;
  while (idx < input.length && input[idx] !== ";") {
    subType += input[idx];
    idx++;
  }
  subType = subType.replace(/[ \t\n\r]+$/, "");
  if (subType.length === 0)
    return null;
  return {
    type: type.toLocaleLowerCase(),
    subtype: subType.toLocaleLowerCase()
  };
}
function isCss(mt) {
  return mt ? mt.type === "text" && mt.subtype === "css" : false;
}
function isHtml(mt) {
  return mt ? mt.type === "text" && mt.subtype === "html" : false;
}
function isJs(mt) {
  const { type, subtype } = mt || {};
  switch (type) {
    case "text": {
      switch (subtype) {
        case "ecmascript":
        case "javascript":
        case "javascript1.0":
        case "javascript1.1":
        case "javascript1.2":
        case "javascript1.3":
        case "javascript1.4":
        case "javascript1.5":
        case "jscript":
        case "livescript":
        case "x-ecmascript":
        case "x-javascript": {
          return true;
        }
        default: {
          return false;
        }
      }
    }
    case "application": {
      switch (subtype) {
        case "ecmascript":
        case "javascript":
        case "x-ecmascript":
        case "x-javascript": {
          return true;
        }
        default: {
          return false;
        }
      }
    }
    default: {
      return false;
    }
  }
}
function isJsonp(mt, src) {
  const callbackRegExp = /callback/;
  try {
    const search = new URL(src).search;
    const { type, subtype } = mt || {};
    if (type === "application" && subtype === "json" && callbackRegExp.test(search)) {
      return true;
    }
  } catch (e) {
    return false;
  }
  return false;
}
function isJsType({ src = "", type }) {
  if (/\.js$/.test(src))
    return true;
  if (type) {
    if (type === "module")
      return true;
    const mimeTypeInfo = parseContentType(type);
    if (isJsonp(mimeTypeInfo, src))
      return true;
    if (isJs(mimeTypeInfo))
      return true;
  }
  return false;
}
function isCssType({ src = "", type }) {
  if (/\.css$/.test(src))
    return true;
  if (type) {
    const mimeTypeInfo = parseContentType(type);
    if (isCss(mimeTypeInfo))
      return true;
  }
  return false;
}
function isHtmlType({
  src = "",
  type
}) {
  if (/\.html$/.test(src))
    return true;
  if (type) {
    const mimeTypeInfo = parseContentType(type);
    if (isHtml(mimeTypeInfo))
      return true;
  }
  return false;
}
function isGarfishConfigType({
  type = ""
}) {
  return /garfish-config/i.test(type);
}

// src/dispatchEvents.ts
var reactEvents = [
  "onAbort",
  "onAnimationCancel",
  "onAnimationEnd",
  "onAnimationIteration",
  "onAuxClick",
  "onBlur",
  "onChange",
  "onClick",
  "onClose",
  "onContextMenu",
  "onDoubleClick",
  "onError",
  "onFocus",
  "onGotPointerCapture",
  "onInput",
  "onKeyDown",
  "onKeyPress",
  "onKeyUp",
  "onLoad",
  "onLoadEnd",
  "onLoadStart",
  "onLostPointerCapture",
  "onMouseDown",
  "onMouseMove",
  "onMouseOut",
  "onMouseOver",
  "onMouseUp",
  "onPointerCancel",
  "onPointerDown",
  "onPointerEnter",
  "onPointerLeave",
  "onPointerMove",
  "onPointerOut",
  "onPointerOver",
  "onPointerUp",
  "onReset",
  "onResize",
  "onScroll",
  "onSelect",
  "onSelectionChange",
  "onSelectStart",
  "onSubmit",
  "onTouchCancel",
  "onTouchMove",
  "onTouchStart",
  "onTouchEnd",
  "onTransitionCancel",
  "onTransitionEnd",
  "onDrag",
  "onDragEnd",
  "onDragEnter",
  "onDragExit",
  "onDragLeave",
  "onDragOver",
  "onDragStart",
  "onDrop",
  "onFocusOut"
];
var divergentNativeEvents = {
  onDoubleClick: "dblclick"
};
var mimickedReactEvents = {
  onInput: "onChange",
  onFocusOut: "onBlur",
  onSelectionChange: "onSelect"
};
function dispatchEvents(shadowRoot) {
  const removeEventListeners = [];
  reactEvents.forEach(function(reactEventName) {
    const nativeEventName = getNativeEventName(reactEventName);
    function retargetEvent(event) {
      const path = event.path || event.composedPath && event.composedPath() || composedPath(event.target);
      for (let i = 0; i < path.length; i++) {
        const el = path[i];
        let props = null;
        const reactComponent = findReactComponent(el);
        const eventHandlers = findReactEventHandlers(el);
        if (!eventHandlers) {
          props = findReactProps(reactComponent);
        } else {
          props = eventHandlers;
        }
        if (reactComponent && props) {
          dispatchEvent(event, reactEventName, props);
        }
        if (reactComponent && props && mimickedReactEvents[reactEventName]) {
          dispatchEvent(event, mimickedReactEvents[reactEventName], props);
        }
        if (event.cancelBubble) {
          break;
        }
        if (el === shadowRoot) {
          break;
        }
      }
    }
    shadowRoot.addEventListener(nativeEventName, retargetEvent, false);
    removeEventListeners.push(function() {
      shadowRoot.removeEventListener(nativeEventName, retargetEvent, false);
    });
  });
  return function() {
    removeEventListeners.forEach(function(removeEventListener) {
      removeEventListener();
    });
  };
}
function findReactEventHandlers(item) {
  return findReactProperty(item, "__reactEventHandlers");
}
function findReactComponent(item) {
  return findReactProperty(item, "_reactInternal");
}
function findReactProperty(item, propertyPrefix) {
  for (const key in item) {
    if (hasOwn(item, key) && key.indexOf(propertyPrefix) !== -1) {
      return item[key];
    }
  }
}
function findReactProps(component) {
  if (!component)
    return void 0;
  if (component.memoizedProps)
    return component.memoizedProps;
  if (component._currentElement && component._currentElement.props)
    return component._currentElement.props;
}
function dispatchEvent(event, eventType, componentProps) {
  event.persist = function() {
    event.isPersistent = () => true;
  };
  if (componentProps[eventType]) {
    componentProps[eventType](event);
  }
}
function getNativeEventName(reactEventName) {
  if (divergentNativeEvents[reactEventName]) {
    return divergentNativeEvents[reactEventName];
  }
  return reactEventName.replace(/^on/, "").toLowerCase();
}
function composedPath(el) {
  const path = [];
  while (el) {
    path.push(el);
    if (el.tagName === "HTML") {
      path.push(document);
      path.push(window);
      return path;
    }
    el = el.parentElement;
  }
}

// src/container.ts
var appContainerId = "garfish_app_for";
function createAppContainer(appInfo) {
  let htmlNode = document.createElement("div");
  const appContainer = document.createElement("div");
  if (appInfo.sandbox && appInfo.sandbox.strictIsolation) {
    htmlNode = document.createElement("html");
    const root = appContainer.attachShadow({ mode: "open" });
    root.appendChild(htmlNode);
    dispatchEvents(root);
  } else {
    htmlNode.setAttribute(__MockHtml__, "");
    appContainer.appendChild(htmlNode);
  }
  appContainer.id = `${appContainerId}_${appInfo.name}_${createKey()}`;
  return {
    htmlNode,
    appContainer
  };
}
function waitElementReady(selector, callback, leftTime) {
  const timeInterval = 50;
  const elem = document.querySelector(selector);
  if (elem !== null || leftTime <= 0) {
    callback(elem);
    return;
  }
  setTimeout(function() {
    waitElementReady(selector, callback, leftTime - timeInterval);
  }, timeInterval);
}
function delay(duration) {
  return new Promise(function(resolve) {
    setTimeout(resolve, duration);
  });
}
function waitElement(selector, timeout = 3e3) {
  const waitPromise = new Promise(function(resolve) {
    waitElementReady(selector, function(elem) {
      return resolve(elem);
    }, timeout);
  });
  return Promise.race([delay(timeout), waitPromise]);
}
async function getRenderNode(domGetter) {
  assert(domGetter, `Invalid domGetter:
 ${domGetter}.`);
  let appWrapperNode;
  if (typeof domGetter === "string") {
    appWrapperNode = await waitElement(domGetter);
  } else if (typeof domGetter === "function") {
    appWrapperNode = await Promise.resolve(domGetter());
  }
  assert(appWrapperNode instanceof Element, `Invalid domGetter: ${domGetter}`);
  return appWrapperNode;
}

// src/templateParse.ts
function Attributes({ name, value }) {
  this.key = name;
  this.value = value;
}
var generateAttributes = (el) => {
  const list = [];
  const attrs = el.attributes;
  const len = attrs.length;
  if (len > 0) {
    if (len === 1) {
      list[0] = new Attributes(attrs[0]);
    } else if (len === 2) {
      list[0] = new Attributes(attrs[0]);
      list[1] = new Attributes(attrs[1]);
    } else {
      for (let i = 0; i < len; i++) {
        list[i] = new Attributes(attrs[i]);
      }
    }
  }
  return list;
};
var createElement = (el, filter) => {
  switch (el.nodeType) {
    case 3 /* TEXT */:
      return {
        type: "text",
        content: el.textContent
      };
    case 8 /* COMMENT */:
      return {
        type: "comment",
        content: el.textContent
      };
    case 1 /* ELEMENT */:
      return filter({
        type: "element",
        tagName: changeTagNameToLowerCase(el.tagName),
        attributes: generateAttributes(el),
        children: Array.from(el.childNodes).map((node) => {
          return createElement(node, filter);
        })
      });
    default:
      error(`Invalid node type "${el.nodeType}"`);
  }
};
function templateParse(code, tags) {
  let astTree = [];
  const htmlNode = document.createElement("html");
  const collectionEls = {};
  const filter = (el) => {
    if (tags.includes(el.tagName)) {
      collectionEls[el.tagName].push(el);
    }
    return el;
  };
  htmlNode.innerHTML = code;
  for (const tag of tags) {
    collectionEls[tag] = [];
  }
  astTree = Array.from(htmlNode.childNodes).map((node) => {
    return createElement(node, filter);
  });
  return [astTree, collectionEls];
}

// src/logger.ts

var log = debug__WEBPACK_IMPORTED_MODULE_0___default()("garfish");
var coreLog = log.extend("core");
var routerLog = log.extend("router");

// src/lock.ts
var Lock = class {
  constructor() {
    this.id = 0;
    this.lockQueue = [];
  }
  genId() {
    return ++this.id;
  }
  getId() {
    return this.id;
  }
  async wait(id) {
    const { lockQueue } = this;
    const firstLock = lockQueue[0];
    const lastLock = firstLock ? lockQueue[lockQueue.length - 1] : void 0;
    if ((firstLock == null ? void 0 : firstLock.id) === id)
      return;
    let lockItem = lockQueue.find((item) => item.id === id);
    if (!lockItem) {
      let promiseResolve = () => {
      };
      const waiting = new Promise((resolve) => {
        promiseResolve = resolve;
      });
      lockItem = { id, waiting, resolve: promiseResolve };
      lockQueue.push(lockItem);
    }
    if (lastLock) {
      await lastLock.waiting;
    }
  }
  release() {
    const { lockQueue } = this;
    const firstLock = lockQueue[0];
    if (!firstLock)
      return;
    lockQueue.shift();
    firstLock.resolve();
  }
  clear() {
    this.lockQueue = [];
  }
};



/***/ }),

/***/ "./node_modules/.pnpm/antd@5.8.0_moment@2.29.4_react-dom@18.2.0_react@18.2.0/node_modules/antd/es/_util/reactNode.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/antd@5.8.0_moment@2.29.4_react-dom@18.2.0_react@18.2.0/node_modules/antd/es/_util/reactNode.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   cloneElement: function() { return /* binding */ cloneElement; },
/* harmony export */   isFragment: function() { return /* binding */ isFragment; },
/* harmony export */   isValidElement: function() { return /* binding */ isValidElement; },
/* harmony export */   replaceElement: function() { return /* binding */ replaceElement; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const {
  isValidElement
} = react__WEBPACK_IMPORTED_MODULE_0__;
function isFragment(child) {
  return child && isValidElement(child) && child.type === react__WEBPACK_IMPORTED_MODULE_0__.Fragment;
}
function replaceElement(element, replacement, props) {
  if (!isValidElement(element)) {
    return replacement;
  }
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(element, typeof props === 'function' ? props(element.props || {}) : props);
}
function cloneElement(element, props) {
  return replaceElement(element, element, props);
}

/***/ }),

/***/ "./node_modules/.pnpm/debug@4.3.4_supports-color@5.5.0/node_modules/debug/src/browser.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/debug@4.3.4_supports-color@5.5.0/node_modules/debug/src/browser.js ***!
  \***********************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js");
/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */

exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();
exports.destroy = (() => {
	let warned = false;

	return () => {
		if (!warned) {
			warned = true;
			console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
		}
	};
})();

/**
 * Colors.
 */

exports.colors = [
	'#0000CC',
	'#0000FF',
	'#0033CC',
	'#0033FF',
	'#0066CC',
	'#0066FF',
	'#0099CC',
	'#0099FF',
	'#00CC00',
	'#00CC33',
	'#00CC66',
	'#00CC99',
	'#00CCCC',
	'#00CCFF',
	'#3300CC',
	'#3300FF',
	'#3333CC',
	'#3333FF',
	'#3366CC',
	'#3366FF',
	'#3399CC',
	'#3399FF',
	'#33CC00',
	'#33CC33',
	'#33CC66',
	'#33CC99',
	'#33CCCC',
	'#33CCFF',
	'#6600CC',
	'#6600FF',
	'#6633CC',
	'#6633FF',
	'#66CC00',
	'#66CC33',
	'#9900CC',
	'#9900FF',
	'#9933CC',
	'#9933FF',
	'#99CC00',
	'#99CC33',
	'#CC0000',
	'#CC0033',
	'#CC0066',
	'#CC0099',
	'#CC00CC',
	'#CC00FF',
	'#CC3300',
	'#CC3333',
	'#CC3366',
	'#CC3399',
	'#CC33CC',
	'#CC33FF',
	'#CC6600',
	'#CC6633',
	'#CC9900',
	'#CC9933',
	'#CCCC00',
	'#CCCC33',
	'#FF0000',
	'#FF0033',
	'#FF0066',
	'#FF0099',
	'#FF00CC',
	'#FF00FF',
	'#FF3300',
	'#FF3333',
	'#FF3366',
	'#FF3399',
	'#FF33CC',
	'#FF33FF',
	'#FF6600',
	'#FF6633',
	'#FF9900',
	'#FF9933',
	'#FFCC00',
	'#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

// eslint-disable-next-line complexity
function useColors() {
	// NB: In an Electron preload script, document will be defined but not fully
	// initialized. Since we know we're in Chrome, we'll just detect this case
	// explicitly
	if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
		return true;
	}

	// Internet Explorer and Edge do not support colors.
	if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
		return false;
	}

	// Is webkit? http://stackoverflow.com/a/16459606/376773
	// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
		// Is firebug? http://stackoverflow.com/a/398120/376773
		(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
		// Is firefox >= v31?
		// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
		// Double check webkit in userAgent just in case we are in a worker
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	args[0] = (this.useColors ? '%c' : '') +
		this.namespace +
		(this.useColors ? ' %c' : ' ') +
		args[0] +
		(this.useColors ? '%c ' : ' ') +
		'+' + module.exports.humanize(this.diff);

	if (!this.useColors) {
		return;
	}

	const c = 'color: ' + this.color;
	args.splice(1, 0, c, 'color: inherit');

	// The final "%c" is somewhat tricky, because there could be other
	// arguments passed either before or after the %c, so we need to
	// figure out the correct index to insert the CSS into
	let index = 0;
	let lastC = 0;
	args[0].replace(/%[a-zA-Z%]/g, match => {
		if (match === '%%') {
			return;
		}
		index++;
		if (match === '%c') {
			// We only are interested in the *last* %c
			// (the user may have provided their own)
			lastC = index;
		}
	});

	args.splice(lastC, 0, c);
}

/**
 * Invokes `console.debug()` when available.
 * No-op when `console.debug` is not a "function".
 * If `console.debug` is not available, falls back
 * to `console.log`.
 *
 * @api public
 */
exports.log = console.debug || console.log || (() => {});

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	try {
		if (namespaces) {
			exports.storage.setItem('debug', namespaces);
		} else {
			exports.storage.removeItem('debug');
		}
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */
function load() {
	let r;
	try {
		r = exports.storage.getItem('debug');
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}

	// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	if (!r && typeof process !== 'undefined' && 'env' in process) {
		r = {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"}.DEBUG;
	}

	return r;
}

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
	try {
		// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
		// The Browser also has localStorage in the global context.
		return localStorage;
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

module.exports = __webpack_require__(/*! ./common */ "./node_modules/.pnpm/debug@4.3.4_supports-color@5.5.0/node_modules/debug/src/common.js")(exports);

const {formatters} = module.exports;

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
	try {
		return JSON.stringify(v);
	} catch (error) {
		return '[UnexpectedJSONParseError]: ' + error.message;
	}
};


/***/ }),

/***/ "./node_modules/.pnpm/debug@4.3.4_supports-color@5.5.0/node_modules/debug/src/common.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/debug@4.3.4_supports-color@5.5.0/node_modules/debug/src/common.js ***!
  \**********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */

function setup(env) {
	createDebug.debug = createDebug;
	createDebug.default = createDebug;
	createDebug.coerce = coerce;
	createDebug.disable = disable;
	createDebug.enable = enable;
	createDebug.enabled = enabled;
	createDebug.humanize = __webpack_require__(/*! ms */ "./node_modules/.pnpm/ms@2.1.2/node_modules/ms/index.js");
	createDebug.destroy = destroy;

	Object.keys(env).forEach(key => {
		createDebug[key] = env[key];
	});

	/**
	* The currently active debug mode names, and names to skip.
	*/

	createDebug.names = [];
	createDebug.skips = [];

	/**
	* Map of special "%n" handling functions, for the debug "format" argument.
	*
	* Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	*/
	createDebug.formatters = {};

	/**
	* Selects a color for a debug namespace
	* @param {String} namespace The namespace string for the debug instance to be colored
	* @return {Number|String} An ANSI color code for the given namespace
	* @api private
	*/
	function selectColor(namespace) {
		let hash = 0;

		for (let i = 0; i < namespace.length; i++) {
			hash = ((hash << 5) - hash) + namespace.charCodeAt(i);
			hash |= 0; // Convert to 32bit integer
		}

		return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
	}
	createDebug.selectColor = selectColor;

	/**
	* Create a debugger with the given `namespace`.
	*
	* @param {String} namespace
	* @return {Function}
	* @api public
	*/
	function createDebug(namespace) {
		let prevTime;
		let enableOverride = null;
		let namespacesCache;
		let enabledCache;

		function debug(...args) {
			// Disabled?
			if (!debug.enabled) {
				return;
			}

			const self = debug;

			// Set `diff` timestamp
			const curr = Number(new Date());
			const ms = curr - (prevTime || curr);
			self.diff = ms;
			self.prev = prevTime;
			self.curr = curr;
			prevTime = curr;

			args[0] = createDebug.coerce(args[0]);

			if (typeof args[0] !== 'string') {
				// Anything else let's inspect with %O
				args.unshift('%O');
			}

			// Apply any `formatters` transformations
			let index = 0;
			args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
				// If we encounter an escaped % then don't increase the array index
				if (match === '%%') {
					return '%';
				}
				index++;
				const formatter = createDebug.formatters[format];
				if (typeof formatter === 'function') {
					const val = args[index];
					match = formatter.call(self, val);

					// Now we need to remove `args[index]` since it's inlined in the `format`
					args.splice(index, 1);
					index--;
				}
				return match;
			});

			// Apply env-specific formatting (colors, etc.)
			createDebug.formatArgs.call(self, args);

			const logFn = self.log || createDebug.log;
			logFn.apply(self, args);
		}

		debug.namespace = namespace;
		debug.useColors = createDebug.useColors();
		debug.color = createDebug.selectColor(namespace);
		debug.extend = extend;
		debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.

		Object.defineProperty(debug, 'enabled', {
			enumerable: true,
			configurable: false,
			get: () => {
				if (enableOverride !== null) {
					return enableOverride;
				}
				if (namespacesCache !== createDebug.namespaces) {
					namespacesCache = createDebug.namespaces;
					enabledCache = createDebug.enabled(namespace);
				}

				return enabledCache;
			},
			set: v => {
				enableOverride = v;
			}
		});

		// Env-specific initialization logic for debug instances
		if (typeof createDebug.init === 'function') {
			createDebug.init(debug);
		}

		return debug;
	}

	function extend(namespace, delimiter) {
		const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
		newDebug.log = this.log;
		return newDebug;
	}

	/**
	* Enables a debug mode by namespaces. This can include modes
	* separated by a colon and wildcards.
	*
	* @param {String} namespaces
	* @api public
	*/
	function enable(namespaces) {
		createDebug.save(namespaces);
		createDebug.namespaces = namespaces;

		createDebug.names = [];
		createDebug.skips = [];

		let i;
		const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
		const len = split.length;

		for (i = 0; i < len; i++) {
			if (!split[i]) {
				// ignore empty strings
				continue;
			}

			namespaces = split[i].replace(/\*/g, '.*?');

			if (namespaces[0] === '-') {
				createDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));
			} else {
				createDebug.names.push(new RegExp('^' + namespaces + '$'));
			}
		}
	}

	/**
	* Disable debug output.
	*
	* @return {String} namespaces
	* @api public
	*/
	function disable() {
		const namespaces = [
			...createDebug.names.map(toNamespace),
			...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)
		].join(',');
		createDebug.enable('');
		return namespaces;
	}

	/**
	* Returns true if the given mode name is enabled, false otherwise.
	*
	* @param {String} name
	* @return {Boolean}
	* @api public
	*/
	function enabled(name) {
		if (name[name.length - 1] === '*') {
			return true;
		}

		let i;
		let len;

		for (i = 0, len = createDebug.skips.length; i < len; i++) {
			if (createDebug.skips[i].test(name)) {
				return false;
			}
		}

		for (i = 0, len = createDebug.names.length; i < len; i++) {
			if (createDebug.names[i].test(name)) {
				return true;
			}
		}

		return false;
	}

	/**
	* Convert regexp to namespace
	*
	* @param {RegExp} regxep
	* @return {String} namespace
	* @api private
	*/
	function toNamespace(regexp) {
		return regexp.toString()
			.substring(2, regexp.toString().length - 2)
			.replace(/\.\*\?$/, '*');
	}

	/**
	* Coerce `val`.
	*
	* @param {Mixed} val
	* @return {Mixed}
	* @api private
	*/
	function coerce(val) {
		if (val instanceof Error) {
			return val.stack || val.message;
		}
		return val;
	}

	/**
	* XXX DO NOT USE. This is a temporary stub function.
	* XXX It WILL be removed in the next major release.
	*/
	function destroy() {
		console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
	}

	createDebug.enable(createDebug.load());

	return createDebug;
}

module.exports = setup;


/***/ }),

/***/ "./node_modules/.pnpm/eventemitter2@6.4.9/node_modules/eventemitter2/lib/eventemitter2.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/eventemitter2@6.4.9/node_modules/eventemitter2/lib/eventemitter2.js ***!
  \************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js");
var __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * EventEmitter2
 * https://github.com/hij1nx/EventEmitter2
 *
 * Copyright (c) 2013 hij1nx
 * Licensed under the MIT license.
 */
;!function(undefined) {
  var hasOwnProperty= Object.hasOwnProperty;
  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {
    return Object.prototype.toString.call(obj) === "[object Array]";
  };
  var defaultMaxListeners = 10;
  var nextTickSupported= typeof process=='object' && typeof process.nextTick=='function';
  var symbolsSupported= typeof Symbol==='function';
  var reflectSupported= typeof Reflect === 'object';
  var setImmediateSupported= typeof setImmediate === 'function';
  var _setImmediate= setImmediateSupported ? setImmediate : setTimeout;
  var ownKeys= symbolsSupported? (reflectSupported && typeof Reflect.ownKeys==='function'? Reflect.ownKeys : function(obj){
    var arr= Object.getOwnPropertyNames(obj);
    arr.push.apply(arr, Object.getOwnPropertySymbols(obj));
    return arr;
  }) : Object.keys;

  function init() {
    this._events = {};
    if (this._conf) {
      configure.call(this, this._conf);
    }
  }

  function configure(conf) {
    if (conf) {
      this._conf = conf;

      conf.delimiter && (this.delimiter = conf.delimiter);

      if(conf.maxListeners!==undefined){
          this._maxListeners= conf.maxListeners;
      }

      conf.wildcard && (this.wildcard = conf.wildcard);
      conf.newListener && (this._newListener = conf.newListener);
      conf.removeListener && (this._removeListener = conf.removeListener);
      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);
      conf.ignoreErrors && (this.ignoreErrors = conf.ignoreErrors);

      if (this.wildcard) {
        this.listenerTree = {};
      }
    }
  }

  function logPossibleMemoryLeak(count, eventName) {
    var errorMsg = '(node) warning: possible EventEmitter memory ' +
        'leak detected. ' + count + ' listeners added. ' +
        'Use emitter.setMaxListeners() to increase limit.';

    if(this.verboseMemoryLeak){
      errorMsg += ' Event name: ' + eventName + '.';
    }

    if(typeof process !== 'undefined' && process.emitWarning){
      var e = new Error(errorMsg);
      e.name = 'MaxListenersExceededWarning';
      e.emitter = this;
      e.count = count;
      process.emitWarning(e);
    } else {
      console.error(errorMsg);

      if (console.trace){
        console.trace();
      }
    }
  }

  var toArray = function (a, b, c) {
    var n = arguments.length;
    switch (n) {
      case 0:
        return [];
      case 1:
        return [a];
      case 2:
        return [a, b];
      case 3:
        return [a, b, c];
      default:
        var arr = new Array(n);
        while (n--) {
          arr[n] = arguments[n];
        }
        return arr;
    }
  };

  function toObject(keys, values) {
    var obj = {};
    var key;
    var len = keys.length;
    var valuesCount = values ? values.length : 0;
    for (var i = 0; i < len; i++) {
      key = keys[i];
      obj[key] = i < valuesCount ? values[i] : undefined;
    }
    return obj;
  }

  function TargetObserver(emitter, target, options) {
    this._emitter = emitter;
    this._target = target;
    this._listeners = {};
    this._listenersCount = 0;

    var on, off;

    if (options.on || options.off) {
      on = options.on;
      off = options.off;
    }

    if (target.addEventListener) {
      on = target.addEventListener;
      off = target.removeEventListener;
    } else if (target.addListener) {
      on = target.addListener;
      off = target.removeListener;
    } else if (target.on) {
      on = target.on;
      off = target.off;
    }

    if (!on && !off) {
      throw Error('target does not implement any known event API');
    }

    if (typeof on !== 'function') {
      throw TypeError('on method must be a function');
    }

    if (typeof off !== 'function') {
      throw TypeError('off method must be a function');
    }

    this._on = on;
    this._off = off;

    var _observers= emitter._observers;
    if(_observers){
      _observers.push(this);
    }else{
      emitter._observers= [this];
    }
  }

  Object.assign(TargetObserver.prototype, {
    subscribe: function(event, localEvent, reducer){
      var observer= this;
      var target= this._target;
      var emitter= this._emitter;
      var listeners= this._listeners;
      var handler= function(){
        var args= toArray.apply(null, arguments);
        var eventObj= {
          data: args,
          name: localEvent,
          original: event
        };
        if(reducer){
          var result= reducer.call(target, eventObj);
          if(result!==false){
            emitter.emit.apply(emitter, [eventObj.name].concat(args))
          }
          return;
        }
        emitter.emit.apply(emitter, [localEvent].concat(args));
      };


      if(listeners[event]){
        throw Error('Event \'' + event + '\' is already listening');
      }

      this._listenersCount++;

      if(emitter._newListener && emitter._removeListener && !observer._onNewListener){

        this._onNewListener = function (_event) {
          if (_event === localEvent && listeners[event] === null) {
            listeners[event] = handler;
            observer._on.call(target, event, handler);
          }
        };

        emitter.on('newListener', this._onNewListener);

        this._onRemoveListener= function(_event){
          if(_event === localEvent && !emitter.hasListeners(_event) && listeners[event]){
            listeners[event]= null;
            observer._off.call(target, event, handler);
          }
        };

        listeners[event]= null;

        emitter.on('removeListener', this._onRemoveListener);
      }else{
        listeners[event]= handler;
        observer._on.call(target, event, handler);
      }
    },

    unsubscribe: function(event){
      var observer= this;
      var listeners= this._listeners;
      var emitter= this._emitter;
      var handler;
      var events;
      var off= this._off;
      var target= this._target;
      var i;

      if(event && typeof event!=='string'){
        throw TypeError('event must be a string');
      }

      function clearRefs(){
        if(observer._onNewListener){
          emitter.off('newListener', observer._onNewListener);
          emitter.off('removeListener', observer._onRemoveListener);
          observer._onNewListener= null;
          observer._onRemoveListener= null;
        }
        var index= findTargetIndex.call(emitter, observer);
        emitter._observers.splice(index, 1);
      }

      if(event){
        handler= listeners[event];
        if(!handler) return;
        off.call(target, event, handler);
        delete listeners[event];
        if(!--this._listenersCount){
          clearRefs();
        }
      }else{
        events= ownKeys(listeners);
        i= events.length;
        while(i-->0){
          event= events[i];
          off.call(target, event, listeners[event]);
        }
        this._listeners= {};
        this._listenersCount= 0;
        clearRefs();
      }
    }
  });

  function resolveOptions(options, schema, reducers, allowUnknown) {
    var computedOptions = Object.assign({}, schema);

    if (!options) return computedOptions;

    if (typeof options !== 'object') {
      throw TypeError('options must be an object')
    }

    var keys = Object.keys(options);
    var length = keys.length;
    var option, value;
    var reducer;

    function reject(reason) {
      throw Error('Invalid "' + option + '" option value' + (reason ? '. Reason: ' + reason : ''))
    }

    for (var i = 0; i < length; i++) {
      option = keys[i];
      if (!allowUnknown && !hasOwnProperty.call(schema, option)) {
        throw Error('Unknown "' + option + '" option');
      }
      value = options[option];
      if (value !== undefined) {
        reducer = reducers[option];
        computedOptions[option] = reducer ? reducer(value, reject) : value;
      }
    }
    return computedOptions;
  }

  function constructorReducer(value, reject) {
    if (typeof value !== 'function' || !value.hasOwnProperty('prototype')) {
      reject('value must be a constructor');
    }
    return value;
  }

  function makeTypeReducer(types) {
    var message= 'value must be type of ' + types.join('|');
    var len= types.length;
    var firstType= types[0];
    var secondType= types[1];

    if (len === 1) {
      return function (v, reject) {
        if (typeof v === firstType) {
          return v;
        }
        reject(message);
      }
    }

    if (len === 2) {
      return function (v, reject) {
        var kind= typeof v;
        if (kind === firstType || kind === secondType) return v;
        reject(message);
      }
    }

    return function (v, reject) {
      var kind = typeof v;
      var i = len;
      while (i-- > 0) {
        if (kind === types[i]) return v;
      }
      reject(message);
    }
  }

  var functionReducer= makeTypeReducer(['function']);

  var objectFunctionReducer= makeTypeReducer(['object', 'function']);

  function makeCancelablePromise(Promise, executor, options) {
    var isCancelable;
    var callbacks;
    var timer= 0;
    var subscriptionClosed;

    var promise = new Promise(function (resolve, reject, onCancel) {
      options= resolveOptions(options, {
        timeout: 0,
        overload: false
      }, {
        timeout: function(value, reject){
          value*= 1;
          if (typeof value !== 'number' || value < 0 || !Number.isFinite(value)) {
            reject('timeout must be a positive number');
          }
          return value;
        }
      });

      isCancelable = !options.overload && typeof Promise.prototype.cancel === 'function' && typeof onCancel === 'function';

      function cleanup() {
        if (callbacks) {
          callbacks = null;
        }
        if (timer) {
          clearTimeout(timer);
          timer = 0;
        }
      }

      var _resolve= function(value){
        cleanup();
        resolve(value);
      };

      var _reject= function(err){
        cleanup();
        reject(err);
      };

      if (isCancelable) {
        executor(_resolve, _reject, onCancel);
      } else {
        callbacks = [function(reason){
          _reject(reason || Error('canceled'));
        }];
        executor(_resolve, _reject, function (cb) {
          if (subscriptionClosed) {
            throw Error('Unable to subscribe on cancel event asynchronously')
          }
          if (typeof cb !== 'function') {
            throw TypeError('onCancel callback must be a function');
          }
          callbacks.push(cb);
        });
        subscriptionClosed= true;
      }

      if (options.timeout > 0) {
        timer= setTimeout(function(){
          var reason= Error('timeout');
          reason.code = 'ETIMEDOUT'
          timer= 0;
          promise.cancel(reason);
          reject(reason);
        }, options.timeout);
      }
    });

    if (!isCancelable) {
      promise.cancel = function (reason) {
        if (!callbacks) {
          return;
        }
        var length = callbacks.length;
        for (var i = 1; i < length; i++) {
          callbacks[i](reason);
        }
        // internal callback to reject the promise
        callbacks[0](reason);
        callbacks = null;
      };
    }

    return promise;
  }

  function findTargetIndex(observer) {
    var observers = this._observers;
    if(!observers){
      return -1;
    }
    var len = observers.length;
    for (var i = 0; i < len; i++) {
      if (observers[i]._target === observer) return i;
    }
    return -1;
  }

  // Attention, function return type now is array, always !
  // It has zero elements if no any matches found and one or more
  // elements (leafs) if there are matches
  //
  function searchListenerTree(handlers, type, tree, i, typeLength) {
    if (!tree) {
      return null;
    }

    if (i === 0) {
      var kind = typeof type;
      if (kind === 'string') {
        var ns, n, l = 0, j = 0, delimiter = this.delimiter, dl = delimiter.length;
        if ((n = type.indexOf(delimiter)) !== -1) {
          ns = new Array(5);
          do {
            ns[l++] = type.slice(j, n);
            j = n + dl;
          } while ((n = type.indexOf(delimiter, j)) !== -1);

          ns[l++] = type.slice(j);
          type = ns;
          typeLength = l;
        } else {
          type = [type];
          typeLength = 1;
        }
      } else if (kind === 'object') {
        typeLength = type.length;
      } else {
        type = [type];
        typeLength = 1;
      }
    }

    var listeners= null, branch, xTree, xxTree, isolatedBranch, endReached, currentType = type[i],
        nextType = type[i + 1], branches, _listeners;

    if (i === typeLength) {
      //
      // If at the end of the event(s) list and the tree has listeners
      // invoke those listeners.
      //

      if(tree._listeners) {
        if (typeof tree._listeners === 'function') {
          handlers && handlers.push(tree._listeners);
          listeners = [tree];
        } else {
          handlers && handlers.push.apply(handlers, tree._listeners);
          listeners = [tree];
        }
      }
    } else {

      if (currentType === '*') {
        //
        // If the event emitted is '*' at this part
        // or there is a concrete match at this patch
        //
        branches = ownKeys(tree);
        n = branches.length;
        while (n-- > 0) {
          branch = branches[n];
          if (branch !== '_listeners') {
            _listeners = searchListenerTree(handlers, type, tree[branch], i + 1, typeLength);
            if (_listeners) {
              if (listeners) {
                listeners.push.apply(listeners, _listeners);
              } else {
                listeners = _listeners;
              }
            }
          }
        }
        return listeners;
      } else if (currentType === '**') {
        endReached = (i + 1 === typeLength || (i + 2 === typeLength && nextType === '*'));
        if (endReached && tree._listeners) {
          // The next element has a _listeners, add it to the handlers.
          listeners = searchListenerTree(handlers, type, tree, typeLength, typeLength);
        }

        branches = ownKeys(tree);
        n = branches.length;
        while (n-- > 0) {
          branch = branches[n];
          if (branch !== '_listeners') {
            if (branch === '*' || branch === '**') {
              if (tree[branch]._listeners && !endReached) {
                _listeners = searchListenerTree(handlers, type, tree[branch], typeLength, typeLength);
                if (_listeners) {
                  if (listeners) {
                    listeners.push.apply(listeners, _listeners);
                  } else {
                    listeners = _listeners;
                  }
                }
              }
              _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);
            } else if (branch === nextType) {
              _listeners = searchListenerTree(handlers, type, tree[branch], i + 2, typeLength);
            } else {
              // No match on this one, shift into the tree but not in the type array.
              _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);
            }
            if (_listeners) {
              if (listeners) {
                listeners.push.apply(listeners, _listeners);
              } else {
                listeners = _listeners;
              }
            }
          }
        }
        return listeners;
      } else if (tree[currentType]) {
        listeners = searchListenerTree(handlers, type, tree[currentType], i + 1, typeLength);
      }
    }

      xTree = tree['*'];
    if (xTree) {
      //
      // If the listener tree will allow any match for this part,
      // then recursively explore all branches of the tree
      //
      searchListenerTree(handlers, type, xTree, i + 1, typeLength);
    }

    xxTree = tree['**'];
    if (xxTree) {
      if (i < typeLength) {
        if (xxTree._listeners) {
          // If we have a listener on a '**', it will catch all, so add its handler.
          searchListenerTree(handlers, type, xxTree, typeLength, typeLength);
        }

        // Build arrays of matching next branches and others.
        branches= ownKeys(xxTree);
        n= branches.length;
        while(n-->0){
          branch= branches[n];
          if (branch !== '_listeners') {
            if (branch === nextType) {
              // We know the next element will match, so jump twice.
              searchListenerTree(handlers, type, xxTree[branch], i + 2, typeLength);
            } else if (branch === currentType) {
              // Current node matches, move into the tree.
              searchListenerTree(handlers, type, xxTree[branch], i + 1, typeLength);
            } else {
              isolatedBranch = {};
              isolatedBranch[branch] = xxTree[branch];
              searchListenerTree(handlers, type, {'**': isolatedBranch}, i + 1, typeLength);
            }
          }
        }
      } else if (xxTree._listeners) {
        // We have reached the end and still on a '**'
        searchListenerTree(handlers, type, xxTree, typeLength, typeLength);
      } else if (xxTree['*'] && xxTree['*']._listeners) {
        searchListenerTree(handlers, type, xxTree['*'], typeLength, typeLength);
      }
    }

    return listeners;
  }

  function growListenerTree(type, listener, prepend) {
    var len = 0, j = 0, i, delimiter = this.delimiter, dl= delimiter.length, ns;

    if(typeof type==='string') {
      if ((i = type.indexOf(delimiter)) !== -1) {
        ns = new Array(5);
        do {
          ns[len++] = type.slice(j, i);
          j = i + dl;
        } while ((i = type.indexOf(delimiter, j)) !== -1);

        ns[len++] = type.slice(j);
      }else{
        ns= [type];
        len= 1;
      }
    }else{
      ns= type;
      len= type.length;
    }

    //
    // Looks for two consecutive '**', if so, don't add the event at all.
    //
    if (len > 1) {
      for (i = 0; i + 1 < len; i++) {
        if (ns[i] === '**' && ns[i + 1] === '**') {
          return;
        }
      }
    }



    var tree = this.listenerTree, name;

    for (i = 0; i < len; i++) {
      name = ns[i];

      tree = tree[name] || (tree[name] = {});

      if (i === len - 1) {
        if (!tree._listeners) {
          tree._listeners = listener;
        } else {
          if (typeof tree._listeners === 'function') {
            tree._listeners = [tree._listeners];
          }

          if (prepend) {
            tree._listeners.unshift(listener);
          } else {
            tree._listeners.push(listener);
          }

          if (
              !tree._listeners.warned &&
              this._maxListeners > 0 &&
              tree._listeners.length > this._maxListeners
          ) {
            tree._listeners.warned = true;
            logPossibleMemoryLeak.call(this, tree._listeners.length, name);
          }
        }
        return true;
      }
    }

    return true;
  }

  function collectTreeEvents(tree, events, root, asArray){
     var branches= ownKeys(tree);
     var i= branches.length;
     var branch, branchName, path;
     var hasListeners= tree['_listeners'];
     var isArrayPath;

     while(i-->0){
         branchName= branches[i];

         branch= tree[branchName];

         if(branchName==='_listeners'){
             path= root;
         }else {
             path = root ? root.concat(branchName) : [branchName];
         }

         isArrayPath= asArray || typeof branchName==='symbol';

         hasListeners && events.push(isArrayPath? path : path.join(this.delimiter));

         if(typeof branch==='object'){
             collectTreeEvents.call(this, branch, events, path, isArrayPath);
         }
     }

     return events;
  }

  function recursivelyGarbageCollect(root) {
    var keys = ownKeys(root);
    var i= keys.length;
    var obj, key, flag;
    while(i-->0){
      key = keys[i];
      obj = root[key];

      if(obj){
          flag= true;
          if(key !== '_listeners' && !recursivelyGarbageCollect(obj)){
             delete root[key];
          }
      }
    }

    return flag;
  }

  function Listener(emitter, event, listener){
    this.emitter= emitter;
    this.event= event;
    this.listener= listener;
  }

  Listener.prototype.off= function(){
    this.emitter.off(this.event, this.listener);
    return this;
  };

  function setupListener(event, listener, options){
      if (options === true) {
        promisify = true;
      } else if (options === false) {
        async = true;
      } else {
        if (!options || typeof options !== 'object') {
          throw TypeError('options should be an object or true');
        }
        var async = options.async;
        var promisify = options.promisify;
        var nextTick = options.nextTick;
        var objectify = options.objectify;
      }

      if (async || nextTick || promisify) {
        var _listener = listener;
        var _origin = listener._origin || listener;

        if (nextTick && !nextTickSupported) {
          throw Error('process.nextTick is not supported');
        }

        if (promisify === undefined) {
          promisify = listener.constructor.name === 'AsyncFunction';
        }

        listener = function () {
          var args = arguments;
          var context = this;
          var event = this.event;

          return promisify ? (nextTick ? Promise.resolve() : new Promise(function (resolve) {
            _setImmediate(resolve);
          }).then(function () {
            context.event = event;
            return _listener.apply(context, args)
          })) : (nextTick ? process.nextTick : _setImmediate)(function () {
            context.event = event;
            _listener.apply(context, args)
          });
        };

        listener._async = true;
        listener._origin = _origin;
      }

    return [listener, objectify? new Listener(this, event, listener): this];
  }

  function EventEmitter(conf) {
    this._events = {};
    this._newListener = false;
    this._removeListener = false;
    this.verboseMemoryLeak = false;
    configure.call(this, conf);
  }

  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property

  EventEmitter.prototype.listenTo= function(target, events, options){
    if(typeof target!=='object'){
      throw TypeError('target musts be an object');
    }

    var emitter= this;

    options = resolveOptions(options, {
      on: undefined,
      off: undefined,
      reducers: undefined
    }, {
      on: functionReducer,
      off: functionReducer,
      reducers: objectFunctionReducer
    });

    function listen(events){
      if(typeof events!=='object'){
        throw TypeError('events must be an object');
      }

      var reducers= options.reducers;
      var index= findTargetIndex.call(emitter, target);
      var observer;

      if(index===-1){
        observer= new TargetObserver(emitter, target, options);
      }else{
        observer= emitter._observers[index];
      }

      var keys= ownKeys(events);
      var len= keys.length;
      var event;
      var isSingleReducer= typeof reducers==='function';

      for(var i=0; i<len; i++){
        event= keys[i];
        observer.subscribe(
            event,
            events[event] || event,
            isSingleReducer ? reducers : reducers && reducers[event]
        );
      }
    }

    isArray(events)?
        listen(toObject(events)) :
        (typeof events==='string'? listen(toObject(events.split(/\s+/))): listen(events));

    return this;
  };

  EventEmitter.prototype.stopListeningTo = function (target, event) {
    var observers = this._observers;

    if(!observers){
      return false;
    }

    var i = observers.length;
    var observer;
    var matched= false;

    if(target && typeof target!=='object'){
      throw TypeError('target should be an object');
    }

    while (i-- > 0) {
      observer = observers[i];
      if (!target || observer._target === target) {
        observer.unsubscribe(event);
        matched= true;
      }
    }

    return matched;
  };

  // By default EventEmitters will print a warning if more than
  // 10 listeners are added to it. This is a useful default which
  // helps finding memory leaks.
  //
  // Obviously not all Emitters should be limited to 10. This function allows
  // that to be increased. Set to zero for unlimited.

  EventEmitter.prototype.delimiter = '.';

  EventEmitter.prototype.setMaxListeners = function(n) {
    if (n !== undefined) {
      this._maxListeners = n;
      if (!this._conf) this._conf = {};
      this._conf.maxListeners = n;
    }
  };

  EventEmitter.prototype.getMaxListeners = function() {
    return this._maxListeners;
  };

  EventEmitter.prototype.event = '';

  EventEmitter.prototype.once = function(event, fn, options) {
    return this._once(event, fn, false, options);
  };

  EventEmitter.prototype.prependOnceListener = function(event, fn, options) {
    return this._once(event, fn, true, options);
  };

  EventEmitter.prototype._once = function(event, fn, prepend, options) {
    return this._many(event, 1, fn, prepend, options);
  };

  EventEmitter.prototype.many = function(event, ttl, fn, options) {
    return this._many(event, ttl, fn, false, options);
  };

  EventEmitter.prototype.prependMany = function(event, ttl, fn, options) {
    return this._many(event, ttl, fn, true, options);
  };

  EventEmitter.prototype._many = function(event, ttl, fn, prepend, options) {
    var self = this;

    if (typeof fn !== 'function') {
      throw new Error('many only accepts instances of Function');
    }

    function listener() {
      if (--ttl === 0) {
        self.off(event, listener);
      }
      return fn.apply(this, arguments);
    }

    listener._origin = fn;

    return this._on(event, listener, prepend, options);
  };

  EventEmitter.prototype.emit = function() {
    if (!this._events && !this._all) {
      return false;
    }

    this._events || init.call(this);

    var type = arguments[0], ns, wildcard= this.wildcard;
    var args,l,i,j, containsSymbol;

    if (type === 'newListener' && !this._newListener) {
      if (!this._events.newListener) {
        return false;
      }
    }

    if (wildcard) {
      ns= type;
      if(type!=='newListener' && type!=='removeListener'){
        if (typeof type === 'object') {
          l = type.length;
          if (symbolsSupported) {
            for (i = 0; i < l; i++) {
              if (typeof type[i] === 'symbol') {
                containsSymbol = true;
                break;
              }
            }
          }
          if (!containsSymbol) {
            type = type.join(this.delimiter);
          }
        }
      }
    }

    var al = arguments.length;
    var handler;

    if (this._all && this._all.length) {
      handler = this._all.slice();

      for (i = 0, l = handler.length; i < l; i++) {
        this.event = type;
        switch (al) {
        case 1:
          handler[i].call(this, type);
          break;
        case 2:
          handler[i].call(this, type, arguments[1]);
          break;
        case 3:
          handler[i].call(this, type, arguments[1], arguments[2]);
          break;
        default:
          handler[i].apply(this, arguments);
        }
      }
    }

    if (wildcard) {
      handler = [];
      searchListenerTree.call(this, handler, ns, this.listenerTree, 0, l);
    } else {
      handler = this._events[type];
      if (typeof handler === 'function') {
        this.event = type;
        switch (al) {
        case 1:
          handler.call(this);
          break;
        case 2:
          handler.call(this, arguments[1]);
          break;
        case 3:
          handler.call(this, arguments[1], arguments[2]);
          break;
        default:
          args = new Array(al - 1);
          for (j = 1; j < al; j++) args[j - 1] = arguments[j];
          handler.apply(this, args);
        }
        return true;
      } else if (handler) {
        // need to make copy of handlers because list can change in the middle
        // of emit call
        handler = handler.slice();
      }
    }

    if (handler && handler.length) {
      if (al > 3) {
        args = new Array(al - 1);
        for (j = 1; j < al; j++) args[j - 1] = arguments[j];
      }
      for (i = 0, l = handler.length; i < l; i++) {
        this.event = type;
        switch (al) {
        case 1:
          handler[i].call(this);
          break;
        case 2:
          handler[i].call(this, arguments[1]);
          break;
        case 3:
          handler[i].call(this, arguments[1], arguments[2]);
          break;
        default:
          handler[i].apply(this, args);
        }
      }
      return true;
    } else if (!this.ignoreErrors && !this._all && type === 'error') {
      if (arguments[1] instanceof Error) {
        throw arguments[1]; // Unhandled 'error' event
      } else {
        throw new Error("Uncaught, unspecified 'error' event.");
      }
    }

    return !!this._all;
  };

  EventEmitter.prototype.emitAsync = function() {
    if (!this._events && !this._all) {
      return false;
    }

    this._events || init.call(this);

    var type = arguments[0], wildcard= this.wildcard, ns, containsSymbol;
    var args,l,i,j;

    if (type === 'newListener' && !this._newListener) {
        if (!this._events.newListener) { return Promise.resolve([false]); }
    }

    if (wildcard) {
      ns= type;
      if(type!=='newListener' && type!=='removeListener'){
        if (typeof type === 'object') {
          l = type.length;
          if (symbolsSupported) {
            for (i = 0; i < l; i++) {
              if (typeof type[i] === 'symbol') {
                containsSymbol = true;
                break;
              }
            }
          }
          if (!containsSymbol) {
            type = type.join(this.delimiter);
          }
        }
      }
    }

    var promises= [];

    var al = arguments.length;
    var handler;

    if (this._all) {
      for (i = 0, l = this._all.length; i < l; i++) {
        this.event = type;
        switch (al) {
        case 1:
          promises.push(this._all[i].call(this, type));
          break;
        case 2:
          promises.push(this._all[i].call(this, type, arguments[1]));
          break;
        case 3:
          promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));
          break;
        default:
          promises.push(this._all[i].apply(this, arguments));
        }
      }
    }

    if (wildcard) {
      handler = [];
      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);
    } else {
      handler = this._events[type];
    }

    if (typeof handler === 'function') {
      this.event = type;
      switch (al) {
      case 1:
        promises.push(handler.call(this));
        break;
      case 2:
        promises.push(handler.call(this, arguments[1]));
        break;
      case 3:
        promises.push(handler.call(this, arguments[1], arguments[2]));
        break;
      default:
        args = new Array(al - 1);
        for (j = 1; j < al; j++) args[j - 1] = arguments[j];
        promises.push(handler.apply(this, args));
      }
    } else if (handler && handler.length) {
      handler = handler.slice();
      if (al > 3) {
        args = new Array(al - 1);
        for (j = 1; j < al; j++) args[j - 1] = arguments[j];
      }
      for (i = 0, l = handler.length; i < l; i++) {
        this.event = type;
        switch (al) {
        case 1:
          promises.push(handler[i].call(this));
          break;
        case 2:
          promises.push(handler[i].call(this, arguments[1]));
          break;
        case 3:
          promises.push(handler[i].call(this, arguments[1], arguments[2]));
          break;
        default:
          promises.push(handler[i].apply(this, args));
        }
      }
    } else if (!this.ignoreErrors && !this._all && type === 'error') {
      if (arguments[1] instanceof Error) {
        return Promise.reject(arguments[1]); // Unhandled 'error' event
      } else {
        return Promise.reject("Uncaught, unspecified 'error' event.");
      }
    }

    return Promise.all(promises);
  };

  EventEmitter.prototype.on = function(type, listener, options) {
    return this._on(type, listener, false, options);
  };

  EventEmitter.prototype.prependListener = function(type, listener, options) {
    return this._on(type, listener, true, options);
  };

  EventEmitter.prototype.onAny = function(fn) {
    return this._onAny(fn, false);
  };

  EventEmitter.prototype.prependAny = function(fn) {
    return this._onAny(fn, true);
  };

  EventEmitter.prototype.addListener = EventEmitter.prototype.on;

  EventEmitter.prototype._onAny = function(fn, prepend){
    if (typeof fn !== 'function') {
      throw new Error('onAny only accepts instances of Function');
    }

    if (!this._all) {
      this._all = [];
    }

    // Add the function to the event listener collection.
    if(prepend){
      this._all.unshift(fn);
    }else{
      this._all.push(fn);
    }

    return this;
  };

  EventEmitter.prototype._on = function(type, listener, prepend, options) {
    if (typeof type === 'function') {
      this._onAny(type, listener);
      return this;
    }

    if (typeof listener !== 'function') {
      throw new Error('on only accepts instances of Function');
    }
    this._events || init.call(this);

    var returnValue= this, temp;

    if (options !== undefined) {
      temp = setupListener.call(this, type, listener, options);
      listener = temp[0];
      returnValue = temp[1];
    }

    // To avoid recursion in the case that type == "newListeners"! Before
    // adding it to the listeners, first emit "newListeners".
    if (this._newListener) {
      this.emit('newListener', type, listener);
    }

    if (this.wildcard) {
      growListenerTree.call(this, type, listener, prepend);
      return returnValue;
    }

    if (!this._events[type]) {
      // Optimize the case of one listener. Don't need the extra array object.
      this._events[type] = listener;
    } else {
      if (typeof this._events[type] === 'function') {
        // Change to array.
        this._events[type] = [this._events[type]];
      }

      // If we've already got an array, just add
      if(prepend){
        this._events[type].unshift(listener);
      }else{
        this._events[type].push(listener);
      }

      // Check for listener leak
      if (
        !this._events[type].warned &&
        this._maxListeners > 0 &&
        this._events[type].length > this._maxListeners
      ) {
        this._events[type].warned = true;
        logPossibleMemoryLeak.call(this, this._events[type].length, type);
      }
    }

    return returnValue;
  };

  EventEmitter.prototype.off = function(type, listener) {
    if (typeof listener !== 'function') {
      throw new Error('removeListener only takes instances of Function');
    }

    var handlers,leafs=[];

    if(this.wildcard) {
      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();
      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);
      if(!leafs) return this;
    } else {
      // does not use listeners(), so no side effect of creating _events[type]
      if (!this._events[type]) return this;
      handlers = this._events[type];
      leafs.push({_listeners:handlers});
    }

    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {
      var leaf = leafs[iLeaf];
      handlers = leaf._listeners;
      if (isArray(handlers)) {

        var position = -1;

        for (var i = 0, length = handlers.length; i < length; i++) {
          if (handlers[i] === listener ||
            (handlers[i].listener && handlers[i].listener === listener) ||
            (handlers[i]._origin && handlers[i]._origin === listener)) {
            position = i;
            break;
          }
        }

        if (position < 0) {
          continue;
        }

        if(this.wildcard) {
          leaf._listeners.splice(position, 1);
        }
        else {
          this._events[type].splice(position, 1);
        }

        if (handlers.length === 0) {
          if(this.wildcard) {
            delete leaf._listeners;
          }
          else {
            delete this._events[type];
          }
        }
        if (this._removeListener)
          this.emit("removeListener", type, listener);

        return this;
      }
      else if (handlers === listener ||
        (handlers.listener && handlers.listener === listener) ||
        (handlers._origin && handlers._origin === listener)) {
        if(this.wildcard) {
          delete leaf._listeners;
        }
        else {
          delete this._events[type];
        }
        if (this._removeListener)
          this.emit("removeListener", type, listener);
      }
    }

    this.listenerTree && recursivelyGarbageCollect(this.listenerTree);

    return this;
  };

  EventEmitter.prototype.offAny = function(fn) {
    var i = 0, l = 0, fns;
    if (fn && this._all && this._all.length > 0) {
      fns = this._all;
      for(i = 0, l = fns.length; i < l; i++) {
        if(fn === fns[i]) {
          fns.splice(i, 1);
          if (this._removeListener)
            this.emit("removeListenerAny", fn);
          return this;
        }
      }
    } else {
      fns = this._all;
      if (this._removeListener) {
        for(i = 0, l = fns.length; i < l; i++)
          this.emit("removeListenerAny", fns[i]);
      }
      this._all = [];
    }
    return this;
  };

  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;

  EventEmitter.prototype.removeAllListeners = function (type) {
    if (type === undefined) {
      !this._events || init.call(this);
      return this;
    }

    if (this.wildcard) {
      var leafs = searchListenerTree.call(this, null, type, this.listenerTree, 0), leaf, i;
      if (!leafs) return this;
      for (i = 0; i < leafs.length; i++) {
        leaf = leafs[i];
        leaf._listeners = null;
      }
      this.listenerTree && recursivelyGarbageCollect(this.listenerTree);
    } else if (this._events) {
      this._events[type] = null;
    }
    return this;
  };

  EventEmitter.prototype.listeners = function (type) {
    var _events = this._events;
    var keys, listeners, allListeners;
    var i;
    var listenerTree;

    if (type === undefined) {
      if (this.wildcard) {
        throw Error('event name required for wildcard emitter');
      }

      if (!_events) {
        return [];
      }

      keys = ownKeys(_events);
      i = keys.length;
      allListeners = [];
      while (i-- > 0) {
        listeners = _events[keys[i]];
        if (typeof listeners === 'function') {
          allListeners.push(listeners);
        } else {
          allListeners.push.apply(allListeners, listeners);
        }
      }
      return allListeners;
    } else {
      if (this.wildcard) {
        listenerTree= this.listenerTree;
        if(!listenerTree) return [];
        var handlers = [];
        var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();
        searchListenerTree.call(this, handlers, ns, listenerTree, 0);
        return handlers;
      }

      if (!_events) {
        return [];
      }

      listeners = _events[type];

      if (!listeners) {
        return [];
      }
      return typeof listeners === 'function' ? [listeners] : listeners;
    }
  };

  EventEmitter.prototype.eventNames = function(nsAsArray){
    var _events= this._events;
    return this.wildcard? collectTreeEvents.call(this, this.listenerTree, [], null, nsAsArray) : (_events? ownKeys(_events) : []);
  };

  EventEmitter.prototype.listenerCount = function(type) {
    return this.listeners(type).length;
  };

  EventEmitter.prototype.hasListeners = function (type) {
    if (this.wildcard) {
      var handlers = [];
      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();
      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);
      return handlers.length > 0;
    }

    var _events = this._events;
    var _all = this._all;

    return !!(_all && _all.length || _events && (type === undefined ? ownKeys(_events).length : _events[type]));
  };

  EventEmitter.prototype.listenersAny = function() {

    if(this._all) {
      return this._all;
    }
    else {
      return [];
    }

  };

  EventEmitter.prototype.waitFor = function (event, options) {
    var self = this;
    var type = typeof options;
    if (type === 'number') {
      options = {timeout: options};
    } else if (type === 'function') {
      options = {filter: options};
    }

    options= resolveOptions(options, {
      timeout: 0,
      filter: undefined,
      handleError: false,
      Promise: Promise,
      overload: false
    }, {
      filter: functionReducer,
      Promise: constructorReducer
    });

    return makeCancelablePromise(options.Promise, function (resolve, reject, onCancel) {
      function listener() {
        var filter= options.filter;
        if (filter && !filter.apply(self, arguments)) {
          return;
        }
        self.off(event, listener);
        if (options.handleError) {
          var err = arguments[0];
          err ? reject(err) : resolve(toArray.apply(null, arguments).slice(1));
        } else {
          resolve(toArray.apply(null, arguments));
        }
      }

      onCancel(function(){
        self.off(event, listener);
      });

      self._on(event, listener, false);
    }, {
      timeout: options.timeout,
      overload: options.overload
    })
  };

  function once(emitter, name, options) {
    options= resolveOptions(options, {
      Promise: Promise,
      timeout: 0,
      overload: false
    }, {
      Promise: constructorReducer
    });

    var _Promise= options.Promise;

    return makeCancelablePromise(_Promise, function(resolve, reject, onCancel){
      var handler;
      if (typeof emitter.addEventListener === 'function') {
        handler=  function () {
          resolve(toArray.apply(null, arguments));
        };

        onCancel(function(){
          emitter.removeEventListener(name, handler);
        });

        emitter.addEventListener(
            name,
            handler,
            {once: true}
        );
        return;
      }

      var eventListener = function(){
        errorListener && emitter.removeListener('error', errorListener);
        resolve(toArray.apply(null, arguments));
      };

      var errorListener;

      if (name !== 'error') {
        errorListener = function (err){
          emitter.removeListener(name, eventListener);
          reject(err);
        };

        emitter.once('error', errorListener);
      }

      onCancel(function(){
        errorListener && emitter.removeListener('error', errorListener);
        emitter.removeListener(name, eventListener);
      });

      emitter.once(name, eventListener);
    }, {
      timeout: options.timeout,
      overload: options.overload
    });
  }

  var prototype= EventEmitter.prototype;

  Object.defineProperties(EventEmitter, {
    defaultMaxListeners: {
      get: function () {
        return prototype._maxListeners;
      },
      set: function (n) {
        if (typeof n !== 'number' || n < 0 || Number.isNaN(n)) {
          throw TypeError('n must be a non-negative number')
        }
        prototype._maxListeners = n;
      },
      enumerable: true
    },
    once: {
      value: once,
      writable: true,
      configurable: true
    }
  });

  Object.defineProperties(prototype, {
      _maxListeners: {
          value: defaultMaxListeners,
          writable: true,
          configurable: true
      },
      _observers: {value: null, writable: true, configurable: true}
  });

  if (true) {
     // AMD. Register as an anonymous module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return EventEmitter;
    }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var _global; }
}();


/***/ }),

/***/ "./node_modules/.pnpm/garfish@1.16.2/node_modules/garfish/dist/esm/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/garfish@1.16.2/node_modules/garfish/dist/esm/index.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Garfish: function() { return /* reexport safe */ _garfish_core__WEBPACK_IMPORTED_MODULE_0__["default"]; },
/* harmony export */   "default": function() { return /* binding */ GarfishInstance; },
/* harmony export */   defineCustomElements: function() { return /* binding */ defineCustomElements; }
/* harmony export */ });
/* harmony import */ var _garfish_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @garfish/core */ "./node_modules/.pnpm/@garfish+core@1.16.2/node_modules/@garfish/core/dist/esm/index.js");
/* harmony import */ var _garfish_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @garfish/router */ "./node_modules/.pnpm/@garfish+router@1.16.2/node_modules/@garfish/router/dist/esm/index.js");
/* harmony import */ var _garfish_browser_vm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @garfish/browser-vm */ "./node_modules/.pnpm/@garfish+browser-vm@1.16.2/node_modules/@garfish/browser-vm/dist/esm/index.js");
/* harmony import */ var _garfish_browser_snapshot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @garfish/browser-snapshot */ "./node_modules/.pnpm/@garfish+browser-snapshot@1.16.2/node_modules/@garfish/browser-snapshot/dist/esm/index.js");
/* harmony import */ var _garfish_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @garfish/utils */ "./node_modules/.pnpm/@garfish+utils@1.16.2/node_modules/@garfish/utils/dist/esm/index.js");
/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js");
// src/index.ts


// src/instance.ts





function createContext() {
  let fresh = false;
  if ((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_4__.inBrowser)() && window["__GARFISH__"] && window["Garfish"]) {
    return window["Garfish"];
  }
  const GarfishInstance2 = new _garfish_core__WEBPACK_IMPORTED_MODULE_0__["default"]({
    plugins: [(0,_garfish_router__WEBPACK_IMPORTED_MODULE_1__.GarfishRouter)(), (0,_garfish_browser_vm__WEBPACK_IMPORTED_MODULE_2__.GarfishBrowserVm)(), (0,_garfish_browser_snapshot__WEBPACK_IMPORTED_MODULE_3__.GarfishBrowserSnapshot)()]
  });
  const set = (namespace, val = GarfishInstance2) => {
    if ((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_4__.hasOwn)(window, namespace)) {
      if (!(window[namespace] && window[namespace].flag === _garfish_utils__WEBPACK_IMPORTED_MODULE_4__.__GARFISH_FLAG__)) {
        const next = () => {
          fresh = true;
          if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
            (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_4__.warn)(`"Window.${namespace}" will be overwritten by "garfish".`);
          }
        };
        const desc = Object.getOwnPropertyDescriptor(window, namespace);
        if (desc) {
          if (desc.configurable) {
            (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_4__.def)(window, namespace, val);
            next();
          } else if (desc.writable) {
            window[namespace] = val;
            next();
          }
        }
      }
    } else {
      fresh = true;
      (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_4__.def)(window, namespace, val);
    }
  };
  if ((0,_garfish_utils__WEBPACK_IMPORTED_MODULE_4__.inBrowser)()) {
    set("Garfish");
    (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_4__.def)(window, "__GARFISH__", true);
  }
  if (fresh) {
    if (typeof process !== "undefined" && {"WEBIDE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webide.vmoptions","PYCHARM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/pycharm.vmoptions","NVM_CD_FLAGS":"-q","SHELL":"/bin/zsh","TERM":"xterm-256color","JETBRAINSCLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrainsclient.vmoptions","TMPDIR":"/var/folders/jk/ys2t7b4n0fn86hc044wmp9w80000gn/T/","GVM_ROOT":"/Users/liangpingbo/.gvm","TERM_SESSION_ID":"c7db472b-24c8-4613-ba57-d10e8483fbec","PNPM_HOME":"/Users/liangpingbo/Library/pnpm","ZSH":"/Users/liangpingbo/.oh-my-zsh","NVM_DIR":"/Users/liangpingbo/.nvm","USER":"liangpingbo","COMMAND_MODE":"unix2003","PHPSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/phpstorm.vmoptions","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.qZp6aPIsuM/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x19:0x34","GOLAND_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/goland.vmoptions","PAGER":"less","APPCODE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/appcode.vmoptions","FIG_JETBRAINS_SHELL_INTEGRATION":"1","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/Library/Frameworks/Python.framework/Versions/3.9/bin:/Users/liangpingbo/.meteor:/Users/liangpingbo/Library/pnpm:/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin:/usr/local/mysql/bin","TERMINAL_EMULATOR":"JetBrains-JediTerm","__CFBundleIdentifier":"com.jetbrains.WebStorm","GVM_VERSION":"1.0.22","PWD":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo","IDEA_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/idea.vmoptions","CLION_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/clion.vmoptions","NODE_PATH":"/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/bin/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/src/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules/cross-env/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/cross-env@7.0.3/node_modules:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.pnpm/node_modules","XPC_FLAGS":"0x0","WEBSTORM_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/webstorm.vmoptions","DATASPELL_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/dataspell.vmoptions","XPC_SERVICE_NAME":"0","SHLVL":"1","HOME":"/Users/liangpingbo","LESS":"-R","LOGNAME":"liangpingbo","LC_CTYPE":"UTF-8","GATEWAY_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/gateway.vmoptions","NVM_BIN":"/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin","DATAGRIP_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/datagrip.vmoptions","JETBRAINS_CLIENT_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/jetbrains_client.vmoptions","RIDER_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rider.vmoptions","RUBYMINE_VM_OPTIONS":"/Users/liangpingbo/Desktop/ide_plugin/ja-netfilter-all/vmoptions/rubymine.vmoptions","GVM_PATH_BACKUP":"/Users/liangpingbo/.gvm/bin:/Users/liangpingbo/.nvm/versions/node/v18.14.0/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/liangpingbo/Desktop/4399/frontend/subApplicate_demo/node_modules/.bin:/Users/liangpingbo/Desktop/个人/前端/flutter/flutter/bin","NODE_ENV":"development","API_PREFIX":"/api","API_TIMEOUT":"6000","COOKIE_NAME":"ywkf_jwt","APP_HOST":"127.0.0.1","APP_PORT":"8888","APP_CNAME":"子应用demo","APP_NAME":"demo","APP_DOMAIN":"https://nbas.gz4399.com"} && "development" ? "development" !== "production" : false) {
      if (window["Garfish"].version !== "1.16.2") {
        (0,_garfish_utils__WEBPACK_IMPORTED_MODULE_4__.warn)('The "garfish version" used by the main and sub-applications is inconsistent.');
      }
    }
  }
  return GarfishInstance2;
}
var GarfishInstance = createContext();

// src/customElement.ts
function generateCustomerElement(htmlTag, options) {
  class MicroApp extends HTMLElement {
    constructor() {
      super();
      this.appInfo = {
        name: "",
        entry: "",
        basename: ""
      };
      this.options = {
        delay: 200
      };
      this.state = this._observerAppState({
        isLoading: false,
        error: null,
        promise: null,
        loaded: null,
        pastDelay: false
      });
      this.options = options;
    }
    _observerAppState(state) {
      return new Proxy(state, {
        set: (target, p, value, receiver) => {
          const getPlaceHolderAndAppend = () => {
            if (this.placeholder && this.contains(this.placeholder)) {
              this.removeChild(this.placeholder);
            }
            const placeholder = this.options.loading && this.options.loading({
              isLoading: this.state.isLoading,
              error: this.state.error,
              pastDelay: this.state.pastDelay
            });
            placeholder && this.appendChild(placeholder);
            return placeholder;
          };
          const res = Reflect.set(target, p, value, receiver);
          if (p === "error" && value) {
            const placeholder = getPlaceHolderAndAppend();
            if (placeholder)
              this.placeholder = placeholder;
          } else if (p === "pastDelay" && value === true) {
            const placeholder = getPlaceHolderAndAppend();
            if (placeholder)
              this.placeholder = placeholder;
          } else if (p === "isLoading" && value === true) {
            const placeholder = getPlaceHolderAndAppend();
            if (placeholder)
              this.placeholder = placeholder;
          } else if (p === "isLoading" && value === false) {
            if (!this.state.error && this.contains(this.placeholder)) {
              this.removeChild(this.placeholder);
            }
          }
          return res;
        }
      });
    }
    _loadApp() {
      if (this.state.isLoading)
        return;
      this.state.isLoading = true;
      if (typeof this.options.delay === "number") {
        if (this.options.delay === 0) {
          this.state.pastDelay = true;
        } else {
          this._delay = setTimeout(() => {
            this.state.pastDelay = true;
          }, this.options.delay);
        }
      }
      this.state.promise = GarfishInstance.loadApp(this.appInfo.name, {
        entry: this.appInfo.entry,
        domGetter: () => this,
        basename: this.appInfo.basename,
        sandbox: {
          snapshot: false,
          strictIsolation: this.hasAttribute("shadow") || false
        }
      });
    }
    _clearTimeouts() {
      clearTimeout(this._delay);
    }
    async connectedCallback() {
      this.appInfo = {
        name: this.getAttribute("name") || "",
        entry: this.getAttribute("entry") || "",
        basename: this.getAttribute("basename") || "/"
      };
      try {
        this._loadApp();
        this.state.loaded = await this.state.promise;
        if (this.state.loaded.mounted) {
          this.state.loaded.show();
        } else {
          await this.state.loaded.mount();
        }
      } catch (error) {
        this.state.error = error;
      } finally {
        this.state.isLoading = false;
      }
    }
    disconnectedCallback() {
      this._clearTimeouts();
      if (this.state.loaded) {
        this.state.loaded.hide();
      }
    }
    async adoptedCallback() {
    }
    attributeChangedCallback(name, oldValue, newValue) {
      console.log("Custom square element attributes changed.", name, oldValue, newValue);
    }
  }
  if (!customElements.get(htmlTag)) {
    GarfishInstance.run(options.config || {});
    customElements.define(htmlTag, MicroApp);
  }
}
function createLoadableWebComponent(htmlTag, options) {
  if (typeof htmlTag !== "string") {
    throw new Error("garfish requires a `htmlTag` name");
  }
  if (!options.loading) {
    throw new Error("garfish requires a `loading` component");
  }
  const opts = Object.assign({
    loading: false,
    delay: 200,
    timeout: null
  }, options);
  return generateCustomerElement(htmlTag, opts);
}
function defineCustomElements(htmlTag, options) {
  return createLoadableWebComponent(htmlTag, options);
}



/***/ }),

/***/ "./node_modules/.pnpm/ms@2.1.2/node_modules/ms/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/.pnpm/ms@2.1.2/node_modules/ms/index.js ***!
  \**************************************************************/
/***/ (function(module) {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var w = d * 7;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isFinite(val)) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'weeks':
    case 'week':
    case 'w':
      return n * w;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (msAbs >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (msAbs >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (msAbs >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return plural(ms, msAbs, d, 'day');
  }
  if (msAbs >= h) {
    return plural(ms, msAbs, h, 'hour');
  }
  if (msAbs >= m) {
    return plural(ms, msAbs, m, 'minute');
  }
  if (msAbs >= s) {
    return plural(ms, msAbs, s, 'second');
  }
  return ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, msAbs, n, name) {
  var isPlural = msAbs >= n * 1.5;
  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
}


/***/ }),

/***/ "./node_modules/.pnpm/@alioth-org+es-module-lexer@1.1.0/node_modules/@alioth-org/es-module-lexer/dist/lexer.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@alioth-org+es-module-lexer@1.1.0/node_modules/@alioth-org/es-module-lexer/dist/lexer.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   init: function() { return /* binding */ init; },
/* harmony export */   parse: function() { return /* binding */ parse; }
/* harmony export */ });
/* es-module-lexer 1.1.0 */
const A=1===new Uint8Array(new Uint16Array([1]).buffer)[0];function parse(E,g="@"){if(!C)return init().then((()=>parse(E)));const I=E.length+1,K=(C.__heap_base.value||C.__heap_base)+4*I-C.memory.buffer.byteLength;K>0&&C.memory.grow(Math.ceil(K/65536));const k=C.sa(I-1);if((A?B:Q)(E,new Uint16Array(C.memory.buffer,k,I)),!C.parse())throw Object.assign(new Error(`Parse error ${g}:${E.slice(0,C.e()).split("\n").length}:${C.e()-E.lastIndexOf("\n",C.e()-1)}`),{idx:C.e()});const o=[],D=[];for(;C.ri();){const A=C.is(),Q=C.ie(),B=C.ai(),g=C.id(),I=C.ss(),K=C.se();let k;C.ip()&&(k=w(E.slice(-1===g?A-1:A,-1===g?Q+1:Q))),o.push({n:k,s:A,e:Q,ss:I,se:K,d:g,a:B})}for(;C.re();){const A=C.es(),Q=C.ee(),B=C.els(),g=C.ele(),I=E.slice(A,Q),K=I[0],k=B<0?void 0:E.slice(B,g),o=k?k[0]:"";D.push({s:A,e:Q,ls:B,le:g,n:'"'===K||"'"===K?w(I):I,ln:'"'===o||"'"===o?w(k):k})}function w(A){try{return(0,eval)(A)}catch(A){}}return[o,D,!!C.f()]}function Q(A,Q){const B=A.length;let C=0;for(;C<B;){const B=A.charCodeAt(C);Q[C++]=(255&B)<<8|B>>>8}}function B(A,Q){const B=A.length;let C=0;for(;C<B;)Q[C]=A.charCodeAt(C++)}let C,E;const init=()=>{var A;return E||(E=WebAssembly.compile((A="","undefined"!=typeof Buffer?Buffer.from(A,"base64"):Uint8Array.from(atob(A),(A=>A.charCodeAt(0))))).then(WebAssembly.instantiate).then((({exports:A})=>{C=A}))),E};

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,